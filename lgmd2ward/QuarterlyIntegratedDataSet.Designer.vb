'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34011
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("QuarterlyIntegratedDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class QuarterlyIntegratedDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableappUspQuarterlyIntegratedFillPlantHealth As appUspQuarterlyIntegratedFillPlantHealthDataTable
    
    Private tableappUspQuarterlyIntegratedFillLivestockMovement As appUspQuarterlyIntegratedFillLivestockMovementDataTable
    
    Private tableappUspQuarterlyIntegratedFillProductsMovement As appUspQuarterlyIntegratedFillProductsMovementDataTable
    
    Private tableappUspQuarterlyIntegratedFillMeatInspection As appUspQuarterlyIntegratedFillMeatInspectionDataTable
    
    Private tableappUspQuarterlyIntegratedFillAcaricides As appUspQuarterlyIntegratedFillAcaricidesDataTable
    
    Private tableappUspQuarterlyIntegratedFillTreatment As appUspQuarterlyIntegratedFillTreatmentDataTable
    
    Private tableappUspQuarterlyIntegratedFillVaccines As appUspQuarterlyIntegratedFillVaccinesDataTable
    
    Private tableappUspQuarterlyIntegratedFillAnimalsFeeds As appUspQuarterlyIntegratedFillAnimalsFeedsDataTable
    
    Private tableappUspQuarterlyIntegratedFillReproductionInput As appUspQuarterlyIntegratedFillReproductionInputDataTable
    
    Private tablerptUspQuarterlyTargett As rptUspQuarterlyTargettDataTable
    
    Private tableappUspQuarterlyIntegratedFillTargetCereal As appUspQuarterlyIntegratedFillTargetCerealDataTable
    
    Private tableappUspQuarterlyIntegratedFillTargetFlowers As appUspQuarterlyIntegratedFillTargetFlowersDataTable
    
    Private tableappUspQuarterlyIntegratedFillTargetFruits As appUspQuarterlyIntegratedFillTargetFruitsDataTable
    
    Private tableappUspQuarterlyIntegratedFillTargetIndustrial As appUspQuarterlyIntegratedFillTargetIndustrialDataTable
    
    Private tableappUspQuarterlyIntegratedFillTargetOil As appUspQuarterlyIntegratedFillTargetOilDataTable
    
    Private tableappUspQuarterlyIntegratedFillTargetOthers As appUspQuarterlyIntegratedFillTargetOthersDataTable
    
    Private tableappUspQuarterlyIntegratedFillTargetPulses As appUspQuarterlyIntegratedFillTargetPulsesDataTable
    
    Private tableappUspQuarterlyIntegratedFillTargetRoots As appUspQuarterlyIntegratedFillTargetRootsDataTable
    
    Private tableappUspQuarterlyIntegratedFillTargetSpices As appUspQuarterlyIntegratedFillTargetSpicesDataTable
    
    Private tableappUspQuarterlyIntegratedFillTargetVegetables As appUspQuarterlyIntegratedFillTargetVegetablesDataTable
    
    Private tablerptUspQuarterlyLivestockSlaughtered As rptUspQuarterlyLivestockSlaughteredDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillPlantHealth")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillPlantHealthDataTable(ds.Tables("appUspQuarterlyIntegratedFillPlantHealth")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillLivestockMovement")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillLivestockMovementDataTable(ds.Tables("appUspQuarterlyIntegratedFillLivestockMovement")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillProductsMovement")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillProductsMovementDataTable(ds.Tables("appUspQuarterlyIntegratedFillProductsMovement")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillMeatInspection")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillMeatInspectionDataTable(ds.Tables("appUspQuarterlyIntegratedFillMeatInspection")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillAcaricides")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillAcaricidesDataTable(ds.Tables("appUspQuarterlyIntegratedFillAcaricides")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillTreatment")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillTreatmentDataTable(ds.Tables("appUspQuarterlyIntegratedFillTreatment")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillVaccines")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillVaccinesDataTable(ds.Tables("appUspQuarterlyIntegratedFillVaccines")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillAnimalsFeeds")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillAnimalsFeedsDataTable(ds.Tables("appUspQuarterlyIntegratedFillAnimalsFeeds")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillReproductionInput")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillReproductionInputDataTable(ds.Tables("appUspQuarterlyIntegratedFillReproductionInput")))
            End If
            If (Not (ds.Tables("rptUspQuarterlyTargett")) Is Nothing) Then
                MyBase.Tables.Add(New rptUspQuarterlyTargettDataTable(ds.Tables("rptUspQuarterlyTargett")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillTargetCereal")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillTargetCerealDataTable(ds.Tables("appUspQuarterlyIntegratedFillTargetCereal")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillTargetFlowers")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillTargetFlowersDataTable(ds.Tables("appUspQuarterlyIntegratedFillTargetFlowers")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillTargetFruits")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillTargetFruitsDataTable(ds.Tables("appUspQuarterlyIntegratedFillTargetFruits")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillTargetIndustrial")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillTargetIndustrialDataTable(ds.Tables("appUspQuarterlyIntegratedFillTargetIndustrial")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillTargetOil")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillTargetOilDataTable(ds.Tables("appUspQuarterlyIntegratedFillTargetOil")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillTargetOthers")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillTargetOthersDataTable(ds.Tables("appUspQuarterlyIntegratedFillTargetOthers")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillTargetPulses")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillTargetPulsesDataTable(ds.Tables("appUspQuarterlyIntegratedFillTargetPulses")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillTargetRoots")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillTargetRootsDataTable(ds.Tables("appUspQuarterlyIntegratedFillTargetRoots")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillTargetSpices")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillTargetSpicesDataTable(ds.Tables("appUspQuarterlyIntegratedFillTargetSpices")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillTargetVegetables")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillTargetVegetablesDataTable(ds.Tables("appUspQuarterlyIntegratedFillTargetVegetables")))
            End If
            If (Not (ds.Tables("rptUspQuarterlyLivestockSlaughtered")) Is Nothing) Then
                MyBase.Tables.Add(New rptUspQuarterlyLivestockSlaughteredDataTable(ds.Tables("rptUspQuarterlyLivestockSlaughtered")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property appUspQuarterlyIntegratedFillPlantHealth() As appUspQuarterlyIntegratedFillPlantHealthDataTable
        Get
            Return Me.tableappUspQuarterlyIntegratedFillPlantHealth
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property appUspQuarterlyIntegratedFillLivestockMovement() As appUspQuarterlyIntegratedFillLivestockMovementDataTable
        Get
            Return Me.tableappUspQuarterlyIntegratedFillLivestockMovement
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property appUspQuarterlyIntegratedFillProductsMovement() As appUspQuarterlyIntegratedFillProductsMovementDataTable
        Get
            Return Me.tableappUspQuarterlyIntegratedFillProductsMovement
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property appUspQuarterlyIntegratedFillMeatInspection() As appUspQuarterlyIntegratedFillMeatInspectionDataTable
        Get
            Return Me.tableappUspQuarterlyIntegratedFillMeatInspection
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property appUspQuarterlyIntegratedFillAcaricides() As appUspQuarterlyIntegratedFillAcaricidesDataTable
        Get
            Return Me.tableappUspQuarterlyIntegratedFillAcaricides
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property appUspQuarterlyIntegratedFillTreatment() As appUspQuarterlyIntegratedFillTreatmentDataTable
        Get
            Return Me.tableappUspQuarterlyIntegratedFillTreatment
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property appUspQuarterlyIntegratedFillVaccines() As appUspQuarterlyIntegratedFillVaccinesDataTable
        Get
            Return Me.tableappUspQuarterlyIntegratedFillVaccines
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property appUspQuarterlyIntegratedFillAnimalsFeeds() As appUspQuarterlyIntegratedFillAnimalsFeedsDataTable
        Get
            Return Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property appUspQuarterlyIntegratedFillReproductionInput() As appUspQuarterlyIntegratedFillReproductionInputDataTable
        Get
            Return Me.tableappUspQuarterlyIntegratedFillReproductionInput
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property rptUspQuarterlyTargett() As rptUspQuarterlyTargettDataTable
        Get
            Return Me.tablerptUspQuarterlyTargett
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property appUspQuarterlyIntegratedFillTargetCereal() As appUspQuarterlyIntegratedFillTargetCerealDataTable
        Get
            Return Me.tableappUspQuarterlyIntegratedFillTargetCereal
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property appUspQuarterlyIntegratedFillTargetFlowers() As appUspQuarterlyIntegratedFillTargetFlowersDataTable
        Get
            Return Me.tableappUspQuarterlyIntegratedFillTargetFlowers
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property appUspQuarterlyIntegratedFillTargetFruits() As appUspQuarterlyIntegratedFillTargetFruitsDataTable
        Get
            Return Me.tableappUspQuarterlyIntegratedFillTargetFruits
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property appUspQuarterlyIntegratedFillTargetIndustrial() As appUspQuarterlyIntegratedFillTargetIndustrialDataTable
        Get
            Return Me.tableappUspQuarterlyIntegratedFillTargetIndustrial
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property appUspQuarterlyIntegratedFillTargetOil() As appUspQuarterlyIntegratedFillTargetOilDataTable
        Get
            Return Me.tableappUspQuarterlyIntegratedFillTargetOil
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property appUspQuarterlyIntegratedFillTargetOthers() As appUspQuarterlyIntegratedFillTargetOthersDataTable
        Get
            Return Me.tableappUspQuarterlyIntegratedFillTargetOthers
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property appUspQuarterlyIntegratedFillTargetPulses() As appUspQuarterlyIntegratedFillTargetPulsesDataTable
        Get
            Return Me.tableappUspQuarterlyIntegratedFillTargetPulses
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property appUspQuarterlyIntegratedFillTargetRoots() As appUspQuarterlyIntegratedFillTargetRootsDataTable
        Get
            Return Me.tableappUspQuarterlyIntegratedFillTargetRoots
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property appUspQuarterlyIntegratedFillTargetSpices() As appUspQuarterlyIntegratedFillTargetSpicesDataTable
        Get
            Return Me.tableappUspQuarterlyIntegratedFillTargetSpices
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property appUspQuarterlyIntegratedFillTargetVegetables() As appUspQuarterlyIntegratedFillTargetVegetablesDataTable
        Get
            Return Me.tableappUspQuarterlyIntegratedFillTargetVegetables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property rptUspQuarterlyLivestockSlaughtered() As rptUspQuarterlyLivestockSlaughteredDataTable
        Get
            Return Me.tablerptUspQuarterlyLivestockSlaughtered
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As QuarterlyIntegratedDataSet = CType(MyBase.Clone,QuarterlyIntegratedDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillPlantHealth")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillPlantHealthDataTable(ds.Tables("appUspQuarterlyIntegratedFillPlantHealth")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillLivestockMovement")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillLivestockMovementDataTable(ds.Tables("appUspQuarterlyIntegratedFillLivestockMovement")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillProductsMovement")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillProductsMovementDataTable(ds.Tables("appUspQuarterlyIntegratedFillProductsMovement")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillMeatInspection")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillMeatInspectionDataTable(ds.Tables("appUspQuarterlyIntegratedFillMeatInspection")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillAcaricides")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillAcaricidesDataTable(ds.Tables("appUspQuarterlyIntegratedFillAcaricides")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillTreatment")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillTreatmentDataTable(ds.Tables("appUspQuarterlyIntegratedFillTreatment")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillVaccines")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillVaccinesDataTable(ds.Tables("appUspQuarterlyIntegratedFillVaccines")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillAnimalsFeeds")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillAnimalsFeedsDataTable(ds.Tables("appUspQuarterlyIntegratedFillAnimalsFeeds")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillReproductionInput")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillReproductionInputDataTable(ds.Tables("appUspQuarterlyIntegratedFillReproductionInput")))
            End If
            If (Not (ds.Tables("rptUspQuarterlyTargett")) Is Nothing) Then
                MyBase.Tables.Add(New rptUspQuarterlyTargettDataTable(ds.Tables("rptUspQuarterlyTargett")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillTargetCereal")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillTargetCerealDataTable(ds.Tables("appUspQuarterlyIntegratedFillTargetCereal")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillTargetFlowers")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillTargetFlowersDataTable(ds.Tables("appUspQuarterlyIntegratedFillTargetFlowers")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillTargetFruits")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillTargetFruitsDataTable(ds.Tables("appUspQuarterlyIntegratedFillTargetFruits")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillTargetIndustrial")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillTargetIndustrialDataTable(ds.Tables("appUspQuarterlyIntegratedFillTargetIndustrial")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillTargetOil")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillTargetOilDataTable(ds.Tables("appUspQuarterlyIntegratedFillTargetOil")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillTargetOthers")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillTargetOthersDataTable(ds.Tables("appUspQuarterlyIntegratedFillTargetOthers")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillTargetPulses")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillTargetPulsesDataTable(ds.Tables("appUspQuarterlyIntegratedFillTargetPulses")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillTargetRoots")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillTargetRootsDataTable(ds.Tables("appUspQuarterlyIntegratedFillTargetRoots")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillTargetSpices")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillTargetSpicesDataTable(ds.Tables("appUspQuarterlyIntegratedFillTargetSpices")))
            End If
            If (Not (ds.Tables("appUspQuarterlyIntegratedFillTargetVegetables")) Is Nothing) Then
                MyBase.Tables.Add(New appUspQuarterlyIntegratedFillTargetVegetablesDataTable(ds.Tables("appUspQuarterlyIntegratedFillTargetVegetables")))
            End If
            If (Not (ds.Tables("rptUspQuarterlyLivestockSlaughtered")) Is Nothing) Then
                MyBase.Tables.Add(New rptUspQuarterlyLivestockSlaughteredDataTable(ds.Tables("rptUspQuarterlyLivestockSlaughtered")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableappUspQuarterlyIntegratedFillPlantHealth = CType(MyBase.Tables("appUspQuarterlyIntegratedFillPlantHealth"),appUspQuarterlyIntegratedFillPlantHealthDataTable)
        If (initTable = true) Then
            If (Not (Me.tableappUspQuarterlyIntegratedFillPlantHealth) Is Nothing) Then
                Me.tableappUspQuarterlyIntegratedFillPlantHealth.InitVars
            End If
        End If
        Me.tableappUspQuarterlyIntegratedFillLivestockMovement = CType(MyBase.Tables("appUspQuarterlyIntegratedFillLivestockMovement"),appUspQuarterlyIntegratedFillLivestockMovementDataTable)
        If (initTable = true) Then
            If (Not (Me.tableappUspQuarterlyIntegratedFillLivestockMovement) Is Nothing) Then
                Me.tableappUspQuarterlyIntegratedFillLivestockMovement.InitVars
            End If
        End If
        Me.tableappUspQuarterlyIntegratedFillProductsMovement = CType(MyBase.Tables("appUspQuarterlyIntegratedFillProductsMovement"),appUspQuarterlyIntegratedFillProductsMovementDataTable)
        If (initTable = true) Then
            If (Not (Me.tableappUspQuarterlyIntegratedFillProductsMovement) Is Nothing) Then
                Me.tableappUspQuarterlyIntegratedFillProductsMovement.InitVars
            End If
        End If
        Me.tableappUspQuarterlyIntegratedFillMeatInspection = CType(MyBase.Tables("appUspQuarterlyIntegratedFillMeatInspection"),appUspQuarterlyIntegratedFillMeatInspectionDataTable)
        If (initTable = true) Then
            If (Not (Me.tableappUspQuarterlyIntegratedFillMeatInspection) Is Nothing) Then
                Me.tableappUspQuarterlyIntegratedFillMeatInspection.InitVars
            End If
        End If
        Me.tableappUspQuarterlyIntegratedFillAcaricides = CType(MyBase.Tables("appUspQuarterlyIntegratedFillAcaricides"),appUspQuarterlyIntegratedFillAcaricidesDataTable)
        If (initTable = true) Then
            If (Not (Me.tableappUspQuarterlyIntegratedFillAcaricides) Is Nothing) Then
                Me.tableappUspQuarterlyIntegratedFillAcaricides.InitVars
            End If
        End If
        Me.tableappUspQuarterlyIntegratedFillTreatment = CType(MyBase.Tables("appUspQuarterlyIntegratedFillTreatment"),appUspQuarterlyIntegratedFillTreatmentDataTable)
        If (initTable = true) Then
            If (Not (Me.tableappUspQuarterlyIntegratedFillTreatment) Is Nothing) Then
                Me.tableappUspQuarterlyIntegratedFillTreatment.InitVars
            End If
        End If
        Me.tableappUspQuarterlyIntegratedFillVaccines = CType(MyBase.Tables("appUspQuarterlyIntegratedFillVaccines"),appUspQuarterlyIntegratedFillVaccinesDataTable)
        If (initTable = true) Then
            If (Not (Me.tableappUspQuarterlyIntegratedFillVaccines) Is Nothing) Then
                Me.tableappUspQuarterlyIntegratedFillVaccines.InitVars
            End If
        End If
        Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds = CType(MyBase.Tables("appUspQuarterlyIntegratedFillAnimalsFeeds"),appUspQuarterlyIntegratedFillAnimalsFeedsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds) Is Nothing) Then
                Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.InitVars
            End If
        End If
        Me.tableappUspQuarterlyIntegratedFillReproductionInput = CType(MyBase.Tables("appUspQuarterlyIntegratedFillReproductionInput"),appUspQuarterlyIntegratedFillReproductionInputDataTable)
        If (initTable = true) Then
            If (Not (Me.tableappUspQuarterlyIntegratedFillReproductionInput) Is Nothing) Then
                Me.tableappUspQuarterlyIntegratedFillReproductionInput.InitVars
            End If
        End If
        Me.tablerptUspQuarterlyTargett = CType(MyBase.Tables("rptUspQuarterlyTargett"),rptUspQuarterlyTargettDataTable)
        If (initTable = true) Then
            If (Not (Me.tablerptUspQuarterlyTargett) Is Nothing) Then
                Me.tablerptUspQuarterlyTargett.InitVars
            End If
        End If
        Me.tableappUspQuarterlyIntegratedFillTargetCereal = CType(MyBase.Tables("appUspQuarterlyIntegratedFillTargetCereal"),appUspQuarterlyIntegratedFillTargetCerealDataTable)
        If (initTable = true) Then
            If (Not (Me.tableappUspQuarterlyIntegratedFillTargetCereal) Is Nothing) Then
                Me.tableappUspQuarterlyIntegratedFillTargetCereal.InitVars
            End If
        End If
        Me.tableappUspQuarterlyIntegratedFillTargetFlowers = CType(MyBase.Tables("appUspQuarterlyIntegratedFillTargetFlowers"),appUspQuarterlyIntegratedFillTargetFlowersDataTable)
        If (initTable = true) Then
            If (Not (Me.tableappUspQuarterlyIntegratedFillTargetFlowers) Is Nothing) Then
                Me.tableappUspQuarterlyIntegratedFillTargetFlowers.InitVars
            End If
        End If
        Me.tableappUspQuarterlyIntegratedFillTargetFruits = CType(MyBase.Tables("appUspQuarterlyIntegratedFillTargetFruits"),appUspQuarterlyIntegratedFillTargetFruitsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableappUspQuarterlyIntegratedFillTargetFruits) Is Nothing) Then
                Me.tableappUspQuarterlyIntegratedFillTargetFruits.InitVars
            End If
        End If
        Me.tableappUspQuarterlyIntegratedFillTargetIndustrial = CType(MyBase.Tables("appUspQuarterlyIntegratedFillTargetIndustrial"),appUspQuarterlyIntegratedFillTargetIndustrialDataTable)
        If (initTable = true) Then
            If (Not (Me.tableappUspQuarterlyIntegratedFillTargetIndustrial) Is Nothing) Then
                Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.InitVars
            End If
        End If
        Me.tableappUspQuarterlyIntegratedFillTargetOil = CType(MyBase.Tables("appUspQuarterlyIntegratedFillTargetOil"),appUspQuarterlyIntegratedFillTargetOilDataTable)
        If (initTable = true) Then
            If (Not (Me.tableappUspQuarterlyIntegratedFillTargetOil) Is Nothing) Then
                Me.tableappUspQuarterlyIntegratedFillTargetOil.InitVars
            End If
        End If
        Me.tableappUspQuarterlyIntegratedFillTargetOthers = CType(MyBase.Tables("appUspQuarterlyIntegratedFillTargetOthers"),appUspQuarterlyIntegratedFillTargetOthersDataTable)
        If (initTable = true) Then
            If (Not (Me.tableappUspQuarterlyIntegratedFillTargetOthers) Is Nothing) Then
                Me.tableappUspQuarterlyIntegratedFillTargetOthers.InitVars
            End If
        End If
        Me.tableappUspQuarterlyIntegratedFillTargetPulses = CType(MyBase.Tables("appUspQuarterlyIntegratedFillTargetPulses"),appUspQuarterlyIntegratedFillTargetPulsesDataTable)
        If (initTable = true) Then
            If (Not (Me.tableappUspQuarterlyIntegratedFillTargetPulses) Is Nothing) Then
                Me.tableappUspQuarterlyIntegratedFillTargetPulses.InitVars
            End If
        End If
        Me.tableappUspQuarterlyIntegratedFillTargetRoots = CType(MyBase.Tables("appUspQuarterlyIntegratedFillTargetRoots"),appUspQuarterlyIntegratedFillTargetRootsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableappUspQuarterlyIntegratedFillTargetRoots) Is Nothing) Then
                Me.tableappUspQuarterlyIntegratedFillTargetRoots.InitVars
            End If
        End If
        Me.tableappUspQuarterlyIntegratedFillTargetSpices = CType(MyBase.Tables("appUspQuarterlyIntegratedFillTargetSpices"),appUspQuarterlyIntegratedFillTargetSpicesDataTable)
        If (initTable = true) Then
            If (Not (Me.tableappUspQuarterlyIntegratedFillTargetSpices) Is Nothing) Then
                Me.tableappUspQuarterlyIntegratedFillTargetSpices.InitVars
            End If
        End If
        Me.tableappUspQuarterlyIntegratedFillTargetVegetables = CType(MyBase.Tables("appUspQuarterlyIntegratedFillTargetVegetables"),appUspQuarterlyIntegratedFillTargetVegetablesDataTable)
        If (initTable = true) Then
            If (Not (Me.tableappUspQuarterlyIntegratedFillTargetVegetables) Is Nothing) Then
                Me.tableappUspQuarterlyIntegratedFillTargetVegetables.InitVars
            End If
        End If
        Me.tablerptUspQuarterlyLivestockSlaughtered = CType(MyBase.Tables("rptUspQuarterlyLivestockSlaughtered"),rptUspQuarterlyLivestockSlaughteredDataTable)
        If (initTable = true) Then
            If (Not (Me.tablerptUspQuarterlyLivestockSlaughtered) Is Nothing) Then
                Me.tablerptUspQuarterlyLivestockSlaughtered.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "QuarterlyIntegratedDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/QuarterlyIntegratedDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableappUspQuarterlyIntegratedFillPlantHealth = New appUspQuarterlyIntegratedFillPlantHealthDataTable()
        MyBase.Tables.Add(Me.tableappUspQuarterlyIntegratedFillPlantHealth)
        Me.tableappUspQuarterlyIntegratedFillLivestockMovement = New appUspQuarterlyIntegratedFillLivestockMovementDataTable()
        MyBase.Tables.Add(Me.tableappUspQuarterlyIntegratedFillLivestockMovement)
        Me.tableappUspQuarterlyIntegratedFillProductsMovement = New appUspQuarterlyIntegratedFillProductsMovementDataTable()
        MyBase.Tables.Add(Me.tableappUspQuarterlyIntegratedFillProductsMovement)
        Me.tableappUspQuarterlyIntegratedFillMeatInspection = New appUspQuarterlyIntegratedFillMeatInspectionDataTable()
        MyBase.Tables.Add(Me.tableappUspQuarterlyIntegratedFillMeatInspection)
        Me.tableappUspQuarterlyIntegratedFillAcaricides = New appUspQuarterlyIntegratedFillAcaricidesDataTable()
        MyBase.Tables.Add(Me.tableappUspQuarterlyIntegratedFillAcaricides)
        Me.tableappUspQuarterlyIntegratedFillTreatment = New appUspQuarterlyIntegratedFillTreatmentDataTable()
        MyBase.Tables.Add(Me.tableappUspQuarterlyIntegratedFillTreatment)
        Me.tableappUspQuarterlyIntegratedFillVaccines = New appUspQuarterlyIntegratedFillVaccinesDataTable()
        MyBase.Tables.Add(Me.tableappUspQuarterlyIntegratedFillVaccines)
        Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds = New appUspQuarterlyIntegratedFillAnimalsFeedsDataTable()
        MyBase.Tables.Add(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds)
        Me.tableappUspQuarterlyIntegratedFillReproductionInput = New appUspQuarterlyIntegratedFillReproductionInputDataTable()
        MyBase.Tables.Add(Me.tableappUspQuarterlyIntegratedFillReproductionInput)
        Me.tablerptUspQuarterlyTargett = New rptUspQuarterlyTargettDataTable()
        MyBase.Tables.Add(Me.tablerptUspQuarterlyTargett)
        Me.tableappUspQuarterlyIntegratedFillTargetCereal = New appUspQuarterlyIntegratedFillTargetCerealDataTable()
        MyBase.Tables.Add(Me.tableappUspQuarterlyIntegratedFillTargetCereal)
        Me.tableappUspQuarterlyIntegratedFillTargetFlowers = New appUspQuarterlyIntegratedFillTargetFlowersDataTable()
        MyBase.Tables.Add(Me.tableappUspQuarterlyIntegratedFillTargetFlowers)
        Me.tableappUspQuarterlyIntegratedFillTargetFruits = New appUspQuarterlyIntegratedFillTargetFruitsDataTable()
        MyBase.Tables.Add(Me.tableappUspQuarterlyIntegratedFillTargetFruits)
        Me.tableappUspQuarterlyIntegratedFillTargetIndustrial = New appUspQuarterlyIntegratedFillTargetIndustrialDataTable()
        MyBase.Tables.Add(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial)
        Me.tableappUspQuarterlyIntegratedFillTargetOil = New appUspQuarterlyIntegratedFillTargetOilDataTable()
        MyBase.Tables.Add(Me.tableappUspQuarterlyIntegratedFillTargetOil)
        Me.tableappUspQuarterlyIntegratedFillTargetOthers = New appUspQuarterlyIntegratedFillTargetOthersDataTable()
        MyBase.Tables.Add(Me.tableappUspQuarterlyIntegratedFillTargetOthers)
        Me.tableappUspQuarterlyIntegratedFillTargetPulses = New appUspQuarterlyIntegratedFillTargetPulsesDataTable()
        MyBase.Tables.Add(Me.tableappUspQuarterlyIntegratedFillTargetPulses)
        Me.tableappUspQuarterlyIntegratedFillTargetRoots = New appUspQuarterlyIntegratedFillTargetRootsDataTable()
        MyBase.Tables.Add(Me.tableappUspQuarterlyIntegratedFillTargetRoots)
        Me.tableappUspQuarterlyIntegratedFillTargetSpices = New appUspQuarterlyIntegratedFillTargetSpicesDataTable()
        MyBase.Tables.Add(Me.tableappUspQuarterlyIntegratedFillTargetSpices)
        Me.tableappUspQuarterlyIntegratedFillTargetVegetables = New appUspQuarterlyIntegratedFillTargetVegetablesDataTable()
        MyBase.Tables.Add(Me.tableappUspQuarterlyIntegratedFillTargetVegetables)
        Me.tablerptUspQuarterlyLivestockSlaughtered = New rptUspQuarterlyLivestockSlaughteredDataTable()
        MyBase.Tables.Add(Me.tablerptUspQuarterlyLivestockSlaughtered)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeappUspQuarterlyIntegratedFillPlantHealth() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeappUspQuarterlyIntegratedFillLivestockMovement() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeappUspQuarterlyIntegratedFillProductsMovement() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeappUspQuarterlyIntegratedFillMeatInspection() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeappUspQuarterlyIntegratedFillAcaricides() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeappUspQuarterlyIntegratedFillTreatment() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeappUspQuarterlyIntegratedFillVaccines() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeappUspQuarterlyIntegratedFillAnimalsFeeds() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeappUspQuarterlyIntegratedFillReproductionInput() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializerptUspQuarterlyTargett() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeappUspQuarterlyIntegratedFillTargetCereal() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeappUspQuarterlyIntegratedFillTargetFlowers() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeappUspQuarterlyIntegratedFillTargetFruits() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeappUspQuarterlyIntegratedFillTargetIndustrial() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeappUspQuarterlyIntegratedFillTargetOil() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeappUspQuarterlyIntegratedFillTargetOthers() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeappUspQuarterlyIntegratedFillTargetPulses() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeappUspQuarterlyIntegratedFillTargetRoots() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeappUspQuarterlyIntegratedFillTargetSpices() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeappUspQuarterlyIntegratedFillTargetVegetables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializerptUspQuarterlyLivestockSlaughtered() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As QuarterlyIntegratedDataSet = New QuarterlyIntegratedDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub appUspQuarterlyIntegratedFillPlantHealthRowChangeEventHandler(ByVal sender As Object, ByVal e As appUspQuarterlyIntegratedFillPlantHealthRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub appUspQuarterlyIntegratedFillLivestockMovementRowChangeEventHandler(ByVal sender As Object, ByVal e As appUspQuarterlyIntegratedFillLivestockMovementRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub appUspQuarterlyIntegratedFillProductsMovementRowChangeEventHandler(ByVal sender As Object, ByVal e As appUspQuarterlyIntegratedFillProductsMovementRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub appUspQuarterlyIntegratedFillMeatInspectionRowChangeEventHandler(ByVal sender As Object, ByVal e As appUspQuarterlyIntegratedFillMeatInspectionRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub appUspQuarterlyIntegratedFillAcaricidesRowChangeEventHandler(ByVal sender As Object, ByVal e As appUspQuarterlyIntegratedFillAcaricidesRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub appUspQuarterlyIntegratedFillTreatmentRowChangeEventHandler(ByVal sender As Object, ByVal e As appUspQuarterlyIntegratedFillTreatmentRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub appUspQuarterlyIntegratedFillVaccinesRowChangeEventHandler(ByVal sender As Object, ByVal e As appUspQuarterlyIntegratedFillVaccinesRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub appUspQuarterlyIntegratedFillAnimalsFeedsRowChangeEventHandler(ByVal sender As Object, ByVal e As appUspQuarterlyIntegratedFillAnimalsFeedsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub appUspQuarterlyIntegratedFillReproductionInputRowChangeEventHandler(ByVal sender As Object, ByVal e As appUspQuarterlyIntegratedFillReproductionInputRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub rptUspQuarterlyTargettRowChangeEventHandler(ByVal sender As Object, ByVal e As rptUspQuarterlyTargettRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub appUspQuarterlyIntegratedFillTargetCerealRowChangeEventHandler(ByVal sender As Object, ByVal e As appUspQuarterlyIntegratedFillTargetCerealRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub appUspQuarterlyIntegratedFillTargetFlowersRowChangeEventHandler(ByVal sender As Object, ByVal e As appUspQuarterlyIntegratedFillTargetFlowersRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub appUspQuarterlyIntegratedFillTargetFruitsRowChangeEventHandler(ByVal sender As Object, ByVal e As appUspQuarterlyIntegratedFillTargetFruitsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub appUspQuarterlyIntegratedFillTargetIndustrialRowChangeEventHandler(ByVal sender As Object, ByVal e As appUspQuarterlyIntegratedFillTargetIndustrialRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub appUspQuarterlyIntegratedFillTargetOilRowChangeEventHandler(ByVal sender As Object, ByVal e As appUspQuarterlyIntegratedFillTargetOilRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub appUspQuarterlyIntegratedFillTargetOthersRowChangeEventHandler(ByVal sender As Object, ByVal e As appUspQuarterlyIntegratedFillTargetOthersRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub appUspQuarterlyIntegratedFillTargetPulsesRowChangeEventHandler(ByVal sender As Object, ByVal e As appUspQuarterlyIntegratedFillTargetPulsesRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub appUspQuarterlyIntegratedFillTargetRootsRowChangeEventHandler(ByVal sender As Object, ByVal e As appUspQuarterlyIntegratedFillTargetRootsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub appUspQuarterlyIntegratedFillTargetSpicesRowChangeEventHandler(ByVal sender As Object, ByVal e As appUspQuarterlyIntegratedFillTargetSpicesRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub appUspQuarterlyIntegratedFillTargetVegetablesRowChangeEventHandler(ByVal sender As Object, ByVal e As appUspQuarterlyIntegratedFillTargetVegetablesRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub rptUspQuarterlyLivestockSlaughteredRowChangeEventHandler(ByVal sender As Object, ByVal e As rptUspQuarterlyLivestockSlaughteredRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class appUspQuarterlyIntegratedFillPlantHealthDataTable
        Inherits Global.System.Data.TypedTableBase(Of appUspQuarterlyIntegratedFillPlantHealthRow)
        
        Private columnChemicalControlID As Global.System.Data.DataColumn
        
        Private columnPestID As Global.System.Data.DataColumn
        
        Private columnCropID As Global.System.Data.DataColumn
        
        Private columnSeverity As Global.System.Data.DataColumn
        
        Private columnAffectedArea As Global.System.Data.DataColumn
        
        Private columnNumberOfVillageAffected As Global.System.Data.DataColumn
        
        Private columnPestcideApplied As Global.System.Data.DataColumn
        
        Private columnAmountOfPestcideApplied As Global.System.Data.DataColumn
        
        Private columnUnit As Global.System.Data.DataColumn
        
        Private columnNumberOfVillagesServed As Global.System.Data.DataColumn
        
        Private columnNumberOfHouseHoldServed As Global.System.Data.DataColumn
        
        Private columnAreaRescued As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnIsEstimated As Global.System.Data.DataColumn
        
        Private columnMonthlyRecordID As Global.System.Data.DataColumn
        
        Private columnFormSerialID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "appUspQuarterlyIntegratedFillPlantHealth"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ChemicalControlIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChemicalControlID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PestIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPestID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CropIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCropID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SeverityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeverity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AffectedAreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAffectedArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfVillageAffectedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfVillageAffected
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PestcideAppliedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPestcideApplied
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AmountOfPestcideAppliedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmountOfPestcideApplied
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UnitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfVillagesServedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfVillagesServed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfHouseHoldServedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfHouseHoldServed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AreaRescuedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAreaRescued
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IsEstimatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsEstimated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MonthlyRecordIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonthlyRecordID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FormSerialIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFormSerialID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As appUspQuarterlyIntegratedFillPlantHealthRow
            Get
                Return CType(Me.Rows(index),appUspQuarterlyIntegratedFillPlantHealthRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillPlantHealthRowChanging As appUspQuarterlyIntegratedFillPlantHealthRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillPlantHealthRowChanged As appUspQuarterlyIntegratedFillPlantHealthRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillPlantHealthRowDeleting As appUspQuarterlyIntegratedFillPlantHealthRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillPlantHealthRowDeleted As appUspQuarterlyIntegratedFillPlantHealthRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddappUspQuarterlyIntegratedFillPlantHealthRow(ByVal row As appUspQuarterlyIntegratedFillPlantHealthRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddappUspQuarterlyIntegratedFillPlantHealthRow( _
                    ByVal ChemicalControlID As System.Guid,  _
                    ByVal PestID As String,  _
                    ByVal CropID As String,  _
                    ByVal Severity As String,  _
                    ByVal AffectedArea As Double,  _
                    ByVal NumberOfVillageAffected As Integer,  _
                    ByVal PestcideApplied As String,  _
                    ByVal AmountOfPestcideApplied As Double,  _
                    ByVal Unit As String,  _
                    ByVal NumberOfVillagesServed As Integer,  _
                    ByVal NumberOfHouseHoldServed As Integer,  _
                    ByVal AreaRescued As Double,  _
                    ByVal Remarks As String,  _
                    ByVal IsEstimated As Boolean,  _
                    ByVal MonthlyRecordID As System.Guid,  _
                    ByVal FormSerialID As String) As appUspQuarterlyIntegratedFillPlantHealthRow
            Dim rowappUspQuarterlyIntegratedFillPlantHealthRow As appUspQuarterlyIntegratedFillPlantHealthRow = CType(Me.NewRow,appUspQuarterlyIntegratedFillPlantHealthRow)
            Dim columnValuesArray() As Object = New Object() {ChemicalControlID, PestID, CropID, Severity, AffectedArea, NumberOfVillageAffected, PestcideApplied, AmountOfPestcideApplied, Unit, NumberOfVillagesServed, NumberOfHouseHoldServed, AreaRescued, Remarks, IsEstimated, MonthlyRecordID, FormSerialID}
            rowappUspQuarterlyIntegratedFillPlantHealthRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowappUspQuarterlyIntegratedFillPlantHealthRow)
            Return rowappUspQuarterlyIntegratedFillPlantHealthRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByChemicalControlID(ByVal ChemicalControlID As System.Guid) As appUspQuarterlyIntegratedFillPlantHealthRow
            Return CType(Me.Rows.Find(New Object() {ChemicalControlID}),appUspQuarterlyIntegratedFillPlantHealthRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As appUspQuarterlyIntegratedFillPlantHealthDataTable = CType(MyBase.Clone,appUspQuarterlyIntegratedFillPlantHealthDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New appUspQuarterlyIntegratedFillPlantHealthDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnChemicalControlID = MyBase.Columns("ChemicalControlID")
            Me.columnPestID = MyBase.Columns("PestID")
            Me.columnCropID = MyBase.Columns("CropID")
            Me.columnSeverity = MyBase.Columns("Severity")
            Me.columnAffectedArea = MyBase.Columns("AffectedArea")
            Me.columnNumberOfVillageAffected = MyBase.Columns("NumberOfVillageAffected")
            Me.columnPestcideApplied = MyBase.Columns("PestcideApplied")
            Me.columnAmountOfPestcideApplied = MyBase.Columns("AmountOfPestcideApplied")
            Me.columnUnit = MyBase.Columns("Unit")
            Me.columnNumberOfVillagesServed = MyBase.Columns("NumberOfVillagesServed")
            Me.columnNumberOfHouseHoldServed = MyBase.Columns("NumberOfHouseHoldServed")
            Me.columnAreaRescued = MyBase.Columns("AreaRescued")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnIsEstimated = MyBase.Columns("IsEstimated")
            Me.columnMonthlyRecordID = MyBase.Columns("MonthlyRecordID")
            Me.columnFormSerialID = MyBase.Columns("FormSerialID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnChemicalControlID = New Global.System.Data.DataColumn("ChemicalControlID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChemicalControlID)
            Me.columnPestID = New Global.System.Data.DataColumn("PestID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPestID)
            Me.columnCropID = New Global.System.Data.DataColumn("CropID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCropID)
            Me.columnSeverity = New Global.System.Data.DataColumn("Severity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeverity)
            Me.columnAffectedArea = New Global.System.Data.DataColumn("AffectedArea", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAffectedArea)
            Me.columnNumberOfVillageAffected = New Global.System.Data.DataColumn("NumberOfVillageAffected", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfVillageAffected)
            Me.columnPestcideApplied = New Global.System.Data.DataColumn("PestcideApplied", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPestcideApplied)
            Me.columnAmountOfPestcideApplied = New Global.System.Data.DataColumn("AmountOfPestcideApplied", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmountOfPestcideApplied)
            Me.columnUnit = New Global.System.Data.DataColumn("Unit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnit)
            Me.columnNumberOfVillagesServed = New Global.System.Data.DataColumn("NumberOfVillagesServed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfVillagesServed)
            Me.columnNumberOfHouseHoldServed = New Global.System.Data.DataColumn("NumberOfHouseHoldServed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfHouseHoldServed)
            Me.columnAreaRescued = New Global.System.Data.DataColumn("AreaRescued", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAreaRescued)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnIsEstimated = New Global.System.Data.DataColumn("IsEstimated", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsEstimated)
            Me.columnMonthlyRecordID = New Global.System.Data.DataColumn("MonthlyRecordID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonthlyRecordID)
            Me.columnFormSerialID = New Global.System.Data.DataColumn("FormSerialID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFormSerialID)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnChemicalControlID}, true))
            Me.columnChemicalControlID.AllowDBNull = false
            Me.columnChemicalControlID.Unique = true
            Me.columnPestID.MaxLength = 30
            Me.columnCropID.MaxLength = 30
            Me.columnSeverity.MaxLength = 10
            Me.columnPestcideApplied.MaxLength = 100
            Me.columnUnit.MaxLength = 10
            Me.columnRemarks.MaxLength = 200
            Me.columnFormSerialID.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewappUspQuarterlyIntegratedFillPlantHealthRow() As appUspQuarterlyIntegratedFillPlantHealthRow
            Return CType(Me.NewRow,appUspQuarterlyIntegratedFillPlantHealthRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New appUspQuarterlyIntegratedFillPlantHealthRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(appUspQuarterlyIntegratedFillPlantHealthRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.appUspQuarterlyIntegratedFillPlantHealthRowChangedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillPlantHealthRowChanged(Me, New appUspQuarterlyIntegratedFillPlantHealthRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillPlantHealthRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.appUspQuarterlyIntegratedFillPlantHealthRowChangingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillPlantHealthRowChanging(Me, New appUspQuarterlyIntegratedFillPlantHealthRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillPlantHealthRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.appUspQuarterlyIntegratedFillPlantHealthRowDeletedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillPlantHealthRowDeleted(Me, New appUspQuarterlyIntegratedFillPlantHealthRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillPlantHealthRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.appUspQuarterlyIntegratedFillPlantHealthRowDeletingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillPlantHealthRowDeleting(Me, New appUspQuarterlyIntegratedFillPlantHealthRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillPlantHealthRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveappUspQuarterlyIntegratedFillPlantHealthRow(ByVal row As appUspQuarterlyIntegratedFillPlantHealthRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuarterlyIntegratedDataSet = New QuarterlyIntegratedDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "appUspQuarterlyIntegratedFillPlantHealthDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class appUspQuarterlyIntegratedFillLivestockMovementDataTable
        Inherits Global.System.Data.TypedTableBase(Of appUspQuarterlyIntegratedFillLivestockMovementRow)
        
        Private columnListID As Global.System.Data.DataColumn
        
        Private columnListItemSw As Global.System.Data.DataColumn
        
        Private columnListItemEn As Global.System.Data.DataColumn
        
        Private columnListItemStatus As Global.System.Data.DataColumn
        
        Private columnLivestockMovementID As Global.System.Data.DataColumn
        
        Private columnLivestockID As Global.System.Data.DataColumn
        
        Private columnAnimalsIntoNonTrade As Global.System.Data.DataColumn
        
        Private columnAnimalsIntoTradeFromLGA As Global.System.Data.DataColumn
        
        Private columnAnimalsIntoTradeFromCountries As Global.System.Data.DataColumn
        
        Private columnAnimalsToNonTrade As Global.System.Data.DataColumn
        
        Private columnAnimalsToTradeLGA As Global.System.Data.DataColumn
        
        Private columnAnimalsToTradeCountries As Global.System.Data.DataColumn
        
        Private columnAnimalsTransNonTrade As Global.System.Data.DataColumn
        
        Private columnAnimalsTransTrade As Global.System.Data.DataColumn
        
        Private columnQuarterlyRecordID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "appUspQuarterlyIntegratedFillLivestockMovement"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListItemSwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListItemSw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListItemEnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListItemEn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListItemStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListItemStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LivestockMovementIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLivestockMovementID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LivestockIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLivestockID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnimalsIntoNonTradeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnimalsIntoNonTrade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnimalsIntoTradeFromLGAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnimalsIntoTradeFromLGA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnimalsIntoTradeFromCountriesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnimalsIntoTradeFromCountries
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnimalsToNonTradeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnimalsToNonTrade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnimalsToTradeLGAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnimalsToTradeLGA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnimalsToTradeCountriesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnimalsToTradeCountries
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnimalsTransNonTradeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnimalsTransNonTrade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnimalsTransTradeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnimalsTransTrade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuarterlyRecordIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuarterlyRecordID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As appUspQuarterlyIntegratedFillLivestockMovementRow
            Get
                Return CType(Me.Rows(index),appUspQuarterlyIntegratedFillLivestockMovementRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillLivestockMovementRowChanging As appUspQuarterlyIntegratedFillLivestockMovementRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillLivestockMovementRowChanged As appUspQuarterlyIntegratedFillLivestockMovementRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillLivestockMovementRowDeleting As appUspQuarterlyIntegratedFillLivestockMovementRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillLivestockMovementRowDeleted As appUspQuarterlyIntegratedFillLivestockMovementRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddappUspQuarterlyIntegratedFillLivestockMovementRow(ByVal row As appUspQuarterlyIntegratedFillLivestockMovementRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddappUspQuarterlyIntegratedFillLivestockMovementRow(ByVal ListID As System.Guid, ByVal ListItemSw As String, ByVal ListItemEn As String, ByVal ListItemStatus As Integer, ByVal LivestockMovementID As System.Guid, ByVal LivestockID As System.Guid, ByVal AnimalsIntoNonTrade As Integer, ByVal AnimalsIntoTradeFromLGA As Integer, ByVal AnimalsIntoTradeFromCountries As Integer, ByVal AnimalsToNonTrade As Integer, ByVal AnimalsToTradeLGA As Integer, ByVal AnimalsToTradeCountries As Integer, ByVal AnimalsTransNonTrade As Integer, ByVal AnimalsTransTrade As Integer, ByVal QuarterlyRecordID As System.Guid) As appUspQuarterlyIntegratedFillLivestockMovementRow
            Dim rowappUspQuarterlyIntegratedFillLivestockMovementRow As appUspQuarterlyIntegratedFillLivestockMovementRow = CType(Me.NewRow,appUspQuarterlyIntegratedFillLivestockMovementRow)
            Dim columnValuesArray() As Object = New Object() {ListID, ListItemSw, ListItemEn, ListItemStatus, LivestockMovementID, LivestockID, AnimalsIntoNonTrade, AnimalsIntoTradeFromLGA, AnimalsIntoTradeFromCountries, AnimalsToNonTrade, AnimalsToTradeLGA, AnimalsToTradeCountries, AnimalsTransNonTrade, AnimalsTransTrade, QuarterlyRecordID}
            rowappUspQuarterlyIntegratedFillLivestockMovementRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowappUspQuarterlyIntegratedFillLivestockMovementRow)
            Return rowappUspQuarterlyIntegratedFillLivestockMovementRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As appUspQuarterlyIntegratedFillLivestockMovementDataTable = CType(MyBase.Clone,appUspQuarterlyIntegratedFillLivestockMovementDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New appUspQuarterlyIntegratedFillLivestockMovementDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnListID = MyBase.Columns("ListID")
            Me.columnListItemSw = MyBase.Columns("ListItemSw")
            Me.columnListItemEn = MyBase.Columns("ListItemEn")
            Me.columnListItemStatus = MyBase.Columns("ListItemStatus")
            Me.columnLivestockMovementID = MyBase.Columns("LivestockMovementID")
            Me.columnLivestockID = MyBase.Columns("LivestockID")
            Me.columnAnimalsIntoNonTrade = MyBase.Columns("AnimalsIntoNonTrade")
            Me.columnAnimalsIntoTradeFromLGA = MyBase.Columns("AnimalsIntoTradeFromLGA")
            Me.columnAnimalsIntoTradeFromCountries = MyBase.Columns("AnimalsIntoTradeFromCountries")
            Me.columnAnimalsToNonTrade = MyBase.Columns("AnimalsToNonTrade")
            Me.columnAnimalsToTradeLGA = MyBase.Columns("AnimalsToTradeLGA")
            Me.columnAnimalsToTradeCountries = MyBase.Columns("AnimalsToTradeCountries")
            Me.columnAnimalsTransNonTrade = MyBase.Columns("AnimalsTransNonTrade")
            Me.columnAnimalsTransTrade = MyBase.Columns("AnimalsTransTrade")
            Me.columnQuarterlyRecordID = MyBase.Columns("QuarterlyRecordID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnListID = New Global.System.Data.DataColumn("ListID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListID)
            Me.columnListItemSw = New Global.System.Data.DataColumn("ListItemSw", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListItemSw)
            Me.columnListItemEn = New Global.System.Data.DataColumn("ListItemEn", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListItemEn)
            Me.columnListItemStatus = New Global.System.Data.DataColumn("ListItemStatus", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListItemStatus)
            Me.columnLivestockMovementID = New Global.System.Data.DataColumn("LivestockMovementID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLivestockMovementID)
            Me.columnLivestockID = New Global.System.Data.DataColumn("LivestockID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLivestockID)
            Me.columnAnimalsIntoNonTrade = New Global.System.Data.DataColumn("AnimalsIntoNonTrade", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnimalsIntoNonTrade)
            Me.columnAnimalsIntoTradeFromLGA = New Global.System.Data.DataColumn("AnimalsIntoTradeFromLGA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnimalsIntoTradeFromLGA)
            Me.columnAnimalsIntoTradeFromCountries = New Global.System.Data.DataColumn("AnimalsIntoTradeFromCountries", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnimalsIntoTradeFromCountries)
            Me.columnAnimalsToNonTrade = New Global.System.Data.DataColumn("AnimalsToNonTrade", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnimalsToNonTrade)
            Me.columnAnimalsToTradeLGA = New Global.System.Data.DataColumn("AnimalsToTradeLGA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnimalsToTradeLGA)
            Me.columnAnimalsToTradeCountries = New Global.System.Data.DataColumn("AnimalsToTradeCountries", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnimalsToTradeCountries)
            Me.columnAnimalsTransNonTrade = New Global.System.Data.DataColumn("AnimalsTransNonTrade", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnimalsTransNonTrade)
            Me.columnAnimalsTransTrade = New Global.System.Data.DataColumn("AnimalsTransTrade", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnimalsTransTrade)
            Me.columnQuarterlyRecordID = New Global.System.Data.DataColumn("QuarterlyRecordID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuarterlyRecordID)
            Me.columnListID.AllowDBNull = false
            Me.columnListItemSw.MaxLength = 50
            Me.columnListItemEn.MaxLength = 50
            Me.columnLivestockMovementID.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewappUspQuarterlyIntegratedFillLivestockMovementRow() As appUspQuarterlyIntegratedFillLivestockMovementRow
            Return CType(Me.NewRow,appUspQuarterlyIntegratedFillLivestockMovementRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New appUspQuarterlyIntegratedFillLivestockMovementRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(appUspQuarterlyIntegratedFillLivestockMovementRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.appUspQuarterlyIntegratedFillLivestockMovementRowChangedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillLivestockMovementRowChanged(Me, New appUspQuarterlyIntegratedFillLivestockMovementRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillLivestockMovementRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.appUspQuarterlyIntegratedFillLivestockMovementRowChangingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillLivestockMovementRowChanging(Me, New appUspQuarterlyIntegratedFillLivestockMovementRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillLivestockMovementRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.appUspQuarterlyIntegratedFillLivestockMovementRowDeletedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillLivestockMovementRowDeleted(Me, New appUspQuarterlyIntegratedFillLivestockMovementRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillLivestockMovementRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.appUspQuarterlyIntegratedFillLivestockMovementRowDeletingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillLivestockMovementRowDeleting(Me, New appUspQuarterlyIntegratedFillLivestockMovementRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillLivestockMovementRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveappUspQuarterlyIntegratedFillLivestockMovementRow(ByVal row As appUspQuarterlyIntegratedFillLivestockMovementRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuarterlyIntegratedDataSet = New QuarterlyIntegratedDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "appUspQuarterlyIntegratedFillLivestockMovementDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class appUspQuarterlyIntegratedFillProductsMovementDataTable
        Inherits Global.System.Data.TypedTableBase(Of appUspQuarterlyIntegratedFillProductsMovementRow)
        
        Private columnListID As Global.System.Data.DataColumn
        
        Private columnListItemEn As Global.System.Data.DataColumn
        
        Private columnProductMovementID As Global.System.Data.DataColumn
        
        Private columnProductID As Global.System.Data.DataColumn
        
        Private columnSoldWithinDistricts As Global.System.Data.DataColumn
        
        Private columnSoldOtherDistricts As Global.System.Data.DataColumn
        
        Private columnSoldOtherCountries As Global.System.Data.DataColumn
        
        Private columnQuarterlyRecordID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "appUspQuarterlyIntegratedFillProductsMovement"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListItemEnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListItemEn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProductMovementIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductMovementID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProductIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SoldWithinDistrictsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSoldWithinDistricts
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SoldOtherDistrictsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSoldOtherDistricts
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SoldOtherCountriesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSoldOtherCountries
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuarterlyRecordIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuarterlyRecordID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As appUspQuarterlyIntegratedFillProductsMovementRow
            Get
                Return CType(Me.Rows(index),appUspQuarterlyIntegratedFillProductsMovementRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillProductsMovementRowChanging As appUspQuarterlyIntegratedFillProductsMovementRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillProductsMovementRowChanged As appUspQuarterlyIntegratedFillProductsMovementRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillProductsMovementRowDeleting As appUspQuarterlyIntegratedFillProductsMovementRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillProductsMovementRowDeleted As appUspQuarterlyIntegratedFillProductsMovementRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddappUspQuarterlyIntegratedFillProductsMovementRow(ByVal row As appUspQuarterlyIntegratedFillProductsMovementRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddappUspQuarterlyIntegratedFillProductsMovementRow(ByVal ListID As System.Guid, ByVal ListItemEn As String, ByVal ProductMovementID As System.Guid, ByVal ProductID As System.Guid, ByVal SoldWithinDistricts As Double, ByVal SoldOtherDistricts As Double, ByVal SoldOtherCountries As Double, ByVal QuarterlyRecordID As System.Guid) As appUspQuarterlyIntegratedFillProductsMovementRow
            Dim rowappUspQuarterlyIntegratedFillProductsMovementRow As appUspQuarterlyIntegratedFillProductsMovementRow = CType(Me.NewRow,appUspQuarterlyIntegratedFillProductsMovementRow)
            Dim columnValuesArray() As Object = New Object() {ListID, ListItemEn, ProductMovementID, ProductID, SoldWithinDistricts, SoldOtherDistricts, SoldOtherCountries, QuarterlyRecordID}
            rowappUspQuarterlyIntegratedFillProductsMovementRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowappUspQuarterlyIntegratedFillProductsMovementRow)
            Return rowappUspQuarterlyIntegratedFillProductsMovementRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As appUspQuarterlyIntegratedFillProductsMovementDataTable = CType(MyBase.Clone,appUspQuarterlyIntegratedFillProductsMovementDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New appUspQuarterlyIntegratedFillProductsMovementDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnListID = MyBase.Columns("ListID")
            Me.columnListItemEn = MyBase.Columns("ListItemEn")
            Me.columnProductMovementID = MyBase.Columns("ProductMovementID")
            Me.columnProductID = MyBase.Columns("ProductID")
            Me.columnSoldWithinDistricts = MyBase.Columns("SoldWithinDistricts")
            Me.columnSoldOtherDistricts = MyBase.Columns("SoldOtherDistricts")
            Me.columnSoldOtherCountries = MyBase.Columns("SoldOtherCountries")
            Me.columnQuarterlyRecordID = MyBase.Columns("QuarterlyRecordID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnListID = New Global.System.Data.DataColumn("ListID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListID)
            Me.columnListItemEn = New Global.System.Data.DataColumn("ListItemEn", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListItemEn)
            Me.columnProductMovementID = New Global.System.Data.DataColumn("ProductMovementID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductMovementID)
            Me.columnProductID = New Global.System.Data.DataColumn("ProductID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductID)
            Me.columnSoldWithinDistricts = New Global.System.Data.DataColumn("SoldWithinDistricts", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSoldWithinDistricts)
            Me.columnSoldOtherDistricts = New Global.System.Data.DataColumn("SoldOtherDistricts", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSoldOtherDistricts)
            Me.columnSoldOtherCountries = New Global.System.Data.DataColumn("SoldOtherCountries", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSoldOtherCountries)
            Me.columnQuarterlyRecordID = New Global.System.Data.DataColumn("QuarterlyRecordID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuarterlyRecordID)
            Me.columnListID.AllowDBNull = false
            Me.columnListItemEn.MaxLength = 50
            Me.columnProductMovementID.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewappUspQuarterlyIntegratedFillProductsMovementRow() As appUspQuarterlyIntegratedFillProductsMovementRow
            Return CType(Me.NewRow,appUspQuarterlyIntegratedFillProductsMovementRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New appUspQuarterlyIntegratedFillProductsMovementRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(appUspQuarterlyIntegratedFillProductsMovementRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.appUspQuarterlyIntegratedFillProductsMovementRowChangedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillProductsMovementRowChanged(Me, New appUspQuarterlyIntegratedFillProductsMovementRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillProductsMovementRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.appUspQuarterlyIntegratedFillProductsMovementRowChangingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillProductsMovementRowChanging(Me, New appUspQuarterlyIntegratedFillProductsMovementRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillProductsMovementRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.appUspQuarterlyIntegratedFillProductsMovementRowDeletedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillProductsMovementRowDeleted(Me, New appUspQuarterlyIntegratedFillProductsMovementRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillProductsMovementRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.appUspQuarterlyIntegratedFillProductsMovementRowDeletingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillProductsMovementRowDeleting(Me, New appUspQuarterlyIntegratedFillProductsMovementRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillProductsMovementRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveappUspQuarterlyIntegratedFillProductsMovementRow(ByVal row As appUspQuarterlyIntegratedFillProductsMovementRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuarterlyIntegratedDataSet = New QuarterlyIntegratedDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "appUspQuarterlyIntegratedFillProductsMovementDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class appUspQuarterlyIntegratedFillMeatInspectionDataTable
        Inherits Global.System.Data.TypedTableBase(Of appUspQuarterlyIntegratedFillMeatInspectionRow)
        
        Private columnMeatInspectionID As Global.System.Data.DataColumn
        
        Private columnNameofPlaceForSlaughter As Global.System.Data.DataColumn
        
        Private columnTypeOfAnimal As Global.System.Data.DataColumn
        
        Private columnNumberOfAnimalsAffected As Global.System.Data.DataColumn
        
        Private columnReasonsForCondemnations As Global.System.Data.DataColumn
        
        Private columnNumberOfCases As Global.System.Data.DataColumn
        
        Private columnIsEstimated As Global.System.Data.DataColumn
        
        Private columnMonthlyRecordID As Global.System.Data.DataColumn
        
        Private columnFormSerialID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "appUspQuarterlyIntegratedFillMeatInspection"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeatInspectionIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeatInspectionID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NameofPlaceForSlaughterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNameofPlaceForSlaughter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TypeOfAnimalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTypeOfAnimal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfAnimalsAffectedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfAnimalsAffected
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReasonsForCondemnationsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReasonsForCondemnations
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfCasesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfCases
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IsEstimatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsEstimated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MonthlyRecordIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonthlyRecordID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FormSerialIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFormSerialID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As appUspQuarterlyIntegratedFillMeatInspectionRow
            Get
                Return CType(Me.Rows(index),appUspQuarterlyIntegratedFillMeatInspectionRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillMeatInspectionRowChanging As appUspQuarterlyIntegratedFillMeatInspectionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillMeatInspectionRowChanged As appUspQuarterlyIntegratedFillMeatInspectionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillMeatInspectionRowDeleting As appUspQuarterlyIntegratedFillMeatInspectionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillMeatInspectionRowDeleted As appUspQuarterlyIntegratedFillMeatInspectionRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddappUspQuarterlyIntegratedFillMeatInspectionRow(ByVal row As appUspQuarterlyIntegratedFillMeatInspectionRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddappUspQuarterlyIntegratedFillMeatInspectionRow(ByVal MeatInspectionID As System.Guid, ByVal NameofPlaceForSlaughter As String, ByVal TypeOfAnimal As String, ByVal NumberOfAnimalsAffected As Integer, ByVal ReasonsForCondemnations As String, ByVal NumberOfCases As Integer, ByVal IsEstimated As Integer, ByVal MonthlyRecordID As System.Guid, ByVal FormSerialID As String) As appUspQuarterlyIntegratedFillMeatInspectionRow
            Dim rowappUspQuarterlyIntegratedFillMeatInspectionRow As appUspQuarterlyIntegratedFillMeatInspectionRow = CType(Me.NewRow,appUspQuarterlyIntegratedFillMeatInspectionRow)
            Dim columnValuesArray() As Object = New Object() {MeatInspectionID, NameofPlaceForSlaughter, TypeOfAnimal, NumberOfAnimalsAffected, ReasonsForCondemnations, NumberOfCases, IsEstimated, MonthlyRecordID, FormSerialID}
            rowappUspQuarterlyIntegratedFillMeatInspectionRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowappUspQuarterlyIntegratedFillMeatInspectionRow)
            Return rowappUspQuarterlyIntegratedFillMeatInspectionRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByMeatInspectionID(ByVal MeatInspectionID As System.Guid) As appUspQuarterlyIntegratedFillMeatInspectionRow
            Return CType(Me.Rows.Find(New Object() {MeatInspectionID}),appUspQuarterlyIntegratedFillMeatInspectionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As appUspQuarterlyIntegratedFillMeatInspectionDataTable = CType(MyBase.Clone,appUspQuarterlyIntegratedFillMeatInspectionDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New appUspQuarterlyIntegratedFillMeatInspectionDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnMeatInspectionID = MyBase.Columns("MeatInspectionID")
            Me.columnNameofPlaceForSlaughter = MyBase.Columns("NameofPlaceForSlaughter")
            Me.columnTypeOfAnimal = MyBase.Columns("TypeOfAnimal")
            Me.columnNumberOfAnimalsAffected = MyBase.Columns("NumberOfAnimalsAffected")
            Me.columnReasonsForCondemnations = MyBase.Columns("ReasonsForCondemnations")
            Me.columnNumberOfCases = MyBase.Columns("NumberOfCases")
            Me.columnIsEstimated = MyBase.Columns("IsEstimated")
            Me.columnMonthlyRecordID = MyBase.Columns("MonthlyRecordID")
            Me.columnFormSerialID = MyBase.Columns("FormSerialID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnMeatInspectionID = New Global.System.Data.DataColumn("MeatInspectionID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeatInspectionID)
            Me.columnNameofPlaceForSlaughter = New Global.System.Data.DataColumn("NameofPlaceForSlaughter", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNameofPlaceForSlaughter)
            Me.columnTypeOfAnimal = New Global.System.Data.DataColumn("TypeOfAnimal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTypeOfAnimal)
            Me.columnNumberOfAnimalsAffected = New Global.System.Data.DataColumn("NumberOfAnimalsAffected", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfAnimalsAffected)
            Me.columnReasonsForCondemnations = New Global.System.Data.DataColumn("ReasonsForCondemnations", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReasonsForCondemnations)
            Me.columnNumberOfCases = New Global.System.Data.DataColumn("NumberOfCases", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfCases)
            Me.columnIsEstimated = New Global.System.Data.DataColumn("IsEstimated", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsEstimated)
            Me.columnMonthlyRecordID = New Global.System.Data.DataColumn("MonthlyRecordID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonthlyRecordID)
            Me.columnFormSerialID = New Global.System.Data.DataColumn("FormSerialID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFormSerialID)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnMeatInspectionID}, true))
            Me.columnMeatInspectionID.AllowDBNull = false
            Me.columnMeatInspectionID.Unique = true
            Me.columnNameofPlaceForSlaughter.MaxLength = 100
            Me.columnTypeOfAnimal.MaxLength = 20
            Me.columnReasonsForCondemnations.MaxLength = 200
            Me.columnFormSerialID.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewappUspQuarterlyIntegratedFillMeatInspectionRow() As appUspQuarterlyIntegratedFillMeatInspectionRow
            Return CType(Me.NewRow,appUspQuarterlyIntegratedFillMeatInspectionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New appUspQuarterlyIntegratedFillMeatInspectionRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(appUspQuarterlyIntegratedFillMeatInspectionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.appUspQuarterlyIntegratedFillMeatInspectionRowChangedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillMeatInspectionRowChanged(Me, New appUspQuarterlyIntegratedFillMeatInspectionRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillMeatInspectionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.appUspQuarterlyIntegratedFillMeatInspectionRowChangingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillMeatInspectionRowChanging(Me, New appUspQuarterlyIntegratedFillMeatInspectionRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillMeatInspectionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.appUspQuarterlyIntegratedFillMeatInspectionRowDeletedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillMeatInspectionRowDeleted(Me, New appUspQuarterlyIntegratedFillMeatInspectionRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillMeatInspectionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.appUspQuarterlyIntegratedFillMeatInspectionRowDeletingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillMeatInspectionRowDeleting(Me, New appUspQuarterlyIntegratedFillMeatInspectionRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillMeatInspectionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveappUspQuarterlyIntegratedFillMeatInspectionRow(ByVal row As appUspQuarterlyIntegratedFillMeatInspectionRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuarterlyIntegratedDataSet = New QuarterlyIntegratedDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "appUspQuarterlyIntegratedFillMeatInspectionDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class appUspQuarterlyIntegratedFillAcaricidesDataTable
        Inherits Global.System.Data.TypedTableBase(Of appUspQuarterlyIntegratedFillAcaricidesRow)
        
        Private columnListID As Global.System.Data.DataColumn
        
        Private columnListItemSw As Global.System.Data.DataColumn
        
        Private columnListItemEn As Global.System.Data.DataColumn
        
        Private columnListItemType As Global.System.Data.DataColumn
        
        Private columnListItemStatus As Global.System.Data.DataColumn
        
        Private columnAnimalsFeedsID As Global.System.Data.DataColumn
        
        Private columnFeedsID As Global.System.Data.DataColumn
        
        Private columnGenericName As Global.System.Data.DataColumn
        
        Private columnTradeName As Global.System.Data.DataColumn
        
        Private columnSource As Global.System.Data.DataColumn
        
        Private columnMeasurementUnit As Global.System.Data.DataColumn
        
        Private columnQuarterlyRequirement As Global.System.Data.DataColumn
        
        Private columnQuarterlyAmountUsed As Global.System.Data.DataColumn
        
        Private columnLowPrice As Global.System.Data.DataColumn
        
        Private columnHighPrice As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnQuarterlyRecordID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "appUspQuarterlyIntegratedFillAcaricides"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListItemSwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListItemSw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListItemEnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListItemEn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListItemTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListItemType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListItemStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListItemStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnimalsFeedsIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnimalsFeedsID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FeedsIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFeedsID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GenericNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGenericName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TradeNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTradeName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SourceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeasurementUnitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeasurementUnit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuarterlyRequirementColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuarterlyRequirement
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuarterlyAmountUsedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuarterlyAmountUsed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LowPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLowPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HighPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHighPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuarterlyRecordIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuarterlyRecordID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As appUspQuarterlyIntegratedFillAcaricidesRow
            Get
                Return CType(Me.Rows(index),appUspQuarterlyIntegratedFillAcaricidesRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillAcaricidesRowChanging As appUspQuarterlyIntegratedFillAcaricidesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillAcaricidesRowChanged As appUspQuarterlyIntegratedFillAcaricidesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillAcaricidesRowDeleting As appUspQuarterlyIntegratedFillAcaricidesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillAcaricidesRowDeleted As appUspQuarterlyIntegratedFillAcaricidesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddappUspQuarterlyIntegratedFillAcaricidesRow(ByVal row As appUspQuarterlyIntegratedFillAcaricidesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddappUspQuarterlyIntegratedFillAcaricidesRow( _
                    ByVal ListID As System.Guid,  _
                    ByVal ListItemSw As String,  _
                    ByVal ListItemEn As String,  _
                    ByVal ListItemType As String,  _
                    ByVal ListItemStatus As Integer,  _
                    ByVal AnimalsFeedsID As System.Guid,  _
                    ByVal FeedsID As System.Guid,  _
                    ByVal GenericName As String,  _
                    ByVal TradeName As String,  _
                    ByVal Source As String,  _
                    ByVal MeasurementUnit As String,  _
                    ByVal QuarterlyRequirement As Double,  _
                    ByVal QuarterlyAmountUsed As Double,  _
                    ByVal LowPrice As Double,  _
                    ByVal HighPrice As Double,  _
                    ByVal Remarks As String,  _
                    ByVal QuarterlyRecordID As System.Guid) As appUspQuarterlyIntegratedFillAcaricidesRow
            Dim rowappUspQuarterlyIntegratedFillAcaricidesRow As appUspQuarterlyIntegratedFillAcaricidesRow = CType(Me.NewRow,appUspQuarterlyIntegratedFillAcaricidesRow)
            Dim columnValuesArray() As Object = New Object() {ListID, ListItemSw, ListItemEn, ListItemType, ListItemStatus, AnimalsFeedsID, FeedsID, GenericName, TradeName, Source, MeasurementUnit, QuarterlyRequirement, QuarterlyAmountUsed, LowPrice, HighPrice, Remarks, QuarterlyRecordID}
            rowappUspQuarterlyIntegratedFillAcaricidesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowappUspQuarterlyIntegratedFillAcaricidesRow)
            Return rowappUspQuarterlyIntegratedFillAcaricidesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As appUspQuarterlyIntegratedFillAcaricidesDataTable = CType(MyBase.Clone,appUspQuarterlyIntegratedFillAcaricidesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New appUspQuarterlyIntegratedFillAcaricidesDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnListID = MyBase.Columns("ListID")
            Me.columnListItemSw = MyBase.Columns("ListItemSw")
            Me.columnListItemEn = MyBase.Columns("ListItemEn")
            Me.columnListItemType = MyBase.Columns("ListItemType")
            Me.columnListItemStatus = MyBase.Columns("ListItemStatus")
            Me.columnAnimalsFeedsID = MyBase.Columns("AnimalsFeedsID")
            Me.columnFeedsID = MyBase.Columns("FeedsID")
            Me.columnGenericName = MyBase.Columns("GenericName")
            Me.columnTradeName = MyBase.Columns("TradeName")
            Me.columnSource = MyBase.Columns("Source")
            Me.columnMeasurementUnit = MyBase.Columns("MeasurementUnit")
            Me.columnQuarterlyRequirement = MyBase.Columns("QuarterlyRequirement")
            Me.columnQuarterlyAmountUsed = MyBase.Columns("QuarterlyAmountUsed")
            Me.columnLowPrice = MyBase.Columns("LowPrice")
            Me.columnHighPrice = MyBase.Columns("HighPrice")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnQuarterlyRecordID = MyBase.Columns("QuarterlyRecordID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnListID = New Global.System.Data.DataColumn("ListID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListID)
            Me.columnListItemSw = New Global.System.Data.DataColumn("ListItemSw", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListItemSw)
            Me.columnListItemEn = New Global.System.Data.DataColumn("ListItemEn", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListItemEn)
            Me.columnListItemType = New Global.System.Data.DataColumn("ListItemType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListItemType)
            Me.columnListItemStatus = New Global.System.Data.DataColumn("ListItemStatus", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListItemStatus)
            Me.columnAnimalsFeedsID = New Global.System.Data.DataColumn("AnimalsFeedsID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnimalsFeedsID)
            Me.columnFeedsID = New Global.System.Data.DataColumn("FeedsID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFeedsID)
            Me.columnGenericName = New Global.System.Data.DataColumn("GenericName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGenericName)
            Me.columnTradeName = New Global.System.Data.DataColumn("TradeName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTradeName)
            Me.columnSource = New Global.System.Data.DataColumn("Source", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource)
            Me.columnMeasurementUnit = New Global.System.Data.DataColumn("MeasurementUnit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeasurementUnit)
            Me.columnQuarterlyRequirement = New Global.System.Data.DataColumn("QuarterlyRequirement", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuarterlyRequirement)
            Me.columnQuarterlyAmountUsed = New Global.System.Data.DataColumn("QuarterlyAmountUsed", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuarterlyAmountUsed)
            Me.columnLowPrice = New Global.System.Data.DataColumn("LowPrice", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLowPrice)
            Me.columnHighPrice = New Global.System.Data.DataColumn("HighPrice", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHighPrice)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnQuarterlyRecordID = New Global.System.Data.DataColumn("QuarterlyRecordID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuarterlyRecordID)
            Me.columnListID.AllowDBNull = false
            Me.columnListItemSw.MaxLength = 50
            Me.columnListItemEn.MaxLength = 50
            Me.columnListItemType.MaxLength = 50
            Me.columnAnimalsFeedsID.AllowDBNull = false
            Me.columnGenericName.MaxLength = 50
            Me.columnTradeName.MaxLength = 50
            Me.columnSource.MaxLength = 50
            Me.columnMeasurementUnit.MaxLength = 10
            Me.columnRemarks.MaxLength = 200
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewappUspQuarterlyIntegratedFillAcaricidesRow() As appUspQuarterlyIntegratedFillAcaricidesRow
            Return CType(Me.NewRow,appUspQuarterlyIntegratedFillAcaricidesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New appUspQuarterlyIntegratedFillAcaricidesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(appUspQuarterlyIntegratedFillAcaricidesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.appUspQuarterlyIntegratedFillAcaricidesRowChangedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillAcaricidesRowChanged(Me, New appUspQuarterlyIntegratedFillAcaricidesRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillAcaricidesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.appUspQuarterlyIntegratedFillAcaricidesRowChangingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillAcaricidesRowChanging(Me, New appUspQuarterlyIntegratedFillAcaricidesRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillAcaricidesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.appUspQuarterlyIntegratedFillAcaricidesRowDeletedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillAcaricidesRowDeleted(Me, New appUspQuarterlyIntegratedFillAcaricidesRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillAcaricidesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.appUspQuarterlyIntegratedFillAcaricidesRowDeletingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillAcaricidesRowDeleting(Me, New appUspQuarterlyIntegratedFillAcaricidesRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillAcaricidesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveappUspQuarterlyIntegratedFillAcaricidesRow(ByVal row As appUspQuarterlyIntegratedFillAcaricidesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuarterlyIntegratedDataSet = New QuarterlyIntegratedDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "appUspQuarterlyIntegratedFillAcaricidesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class appUspQuarterlyIntegratedFillTreatmentDataTable
        Inherits Global.System.Data.TypedTableBase(Of appUspQuarterlyIntegratedFillTreatmentRow)
        
        Private columnListID As Global.System.Data.DataColumn
        
        Private columnListItemSw As Global.System.Data.DataColumn
        
        Private columnListItemEn As Global.System.Data.DataColumn
        
        Private columnListItemType As Global.System.Data.DataColumn
        
        Private columnListItemStatus As Global.System.Data.DataColumn
        
        Private columnAnimalsFeedsID As Global.System.Data.DataColumn
        
        Private columnFeedsID As Global.System.Data.DataColumn
        
        Private columnGenericName As Global.System.Data.DataColumn
        
        Private columnTradeName As Global.System.Data.DataColumn
        
        Private columnSource As Global.System.Data.DataColumn
        
        Private columnMeasurementUnit As Global.System.Data.DataColumn
        
        Private columnQuarterlyRequirement As Global.System.Data.DataColumn
        
        Private columnQuarterlyAmountUsed As Global.System.Data.DataColumn
        
        Private columnLowPrice As Global.System.Data.DataColumn
        
        Private columnHighPrice As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnQuarterlyRecordID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "appUspQuarterlyIntegratedFillTreatment"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListItemSwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListItemSw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListItemEnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListItemEn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListItemTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListItemType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListItemStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListItemStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnimalsFeedsIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnimalsFeedsID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FeedsIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFeedsID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GenericNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGenericName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TradeNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTradeName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SourceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeasurementUnitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeasurementUnit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuarterlyRequirementColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuarterlyRequirement
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuarterlyAmountUsedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuarterlyAmountUsed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LowPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLowPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HighPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHighPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuarterlyRecordIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuarterlyRecordID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As appUspQuarterlyIntegratedFillTreatmentRow
            Get
                Return CType(Me.Rows(index),appUspQuarterlyIntegratedFillTreatmentRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTreatmentRowChanging As appUspQuarterlyIntegratedFillTreatmentRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTreatmentRowChanged As appUspQuarterlyIntegratedFillTreatmentRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTreatmentRowDeleting As appUspQuarterlyIntegratedFillTreatmentRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTreatmentRowDeleted As appUspQuarterlyIntegratedFillTreatmentRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddappUspQuarterlyIntegratedFillTreatmentRow(ByVal row As appUspQuarterlyIntegratedFillTreatmentRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddappUspQuarterlyIntegratedFillTreatmentRow( _
                    ByVal ListID As System.Guid,  _
                    ByVal ListItemSw As String,  _
                    ByVal ListItemEn As String,  _
                    ByVal ListItemType As String,  _
                    ByVal ListItemStatus As Integer,  _
                    ByVal AnimalsFeedsID As System.Guid,  _
                    ByVal FeedsID As System.Guid,  _
                    ByVal GenericName As String,  _
                    ByVal TradeName As String,  _
                    ByVal Source As String,  _
                    ByVal MeasurementUnit As String,  _
                    ByVal QuarterlyRequirement As Double,  _
                    ByVal QuarterlyAmountUsed As Double,  _
                    ByVal LowPrice As Double,  _
                    ByVal HighPrice As Double,  _
                    ByVal Remarks As String,  _
                    ByVal QuarterlyRecordID As System.Guid) As appUspQuarterlyIntegratedFillTreatmentRow
            Dim rowappUspQuarterlyIntegratedFillTreatmentRow As appUspQuarterlyIntegratedFillTreatmentRow = CType(Me.NewRow,appUspQuarterlyIntegratedFillTreatmentRow)
            Dim columnValuesArray() As Object = New Object() {ListID, ListItemSw, ListItemEn, ListItemType, ListItemStatus, AnimalsFeedsID, FeedsID, GenericName, TradeName, Source, MeasurementUnit, QuarterlyRequirement, QuarterlyAmountUsed, LowPrice, HighPrice, Remarks, QuarterlyRecordID}
            rowappUspQuarterlyIntegratedFillTreatmentRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowappUspQuarterlyIntegratedFillTreatmentRow)
            Return rowappUspQuarterlyIntegratedFillTreatmentRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As appUspQuarterlyIntegratedFillTreatmentDataTable = CType(MyBase.Clone,appUspQuarterlyIntegratedFillTreatmentDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New appUspQuarterlyIntegratedFillTreatmentDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnListID = MyBase.Columns("ListID")
            Me.columnListItemSw = MyBase.Columns("ListItemSw")
            Me.columnListItemEn = MyBase.Columns("ListItemEn")
            Me.columnListItemType = MyBase.Columns("ListItemType")
            Me.columnListItemStatus = MyBase.Columns("ListItemStatus")
            Me.columnAnimalsFeedsID = MyBase.Columns("AnimalsFeedsID")
            Me.columnFeedsID = MyBase.Columns("FeedsID")
            Me.columnGenericName = MyBase.Columns("GenericName")
            Me.columnTradeName = MyBase.Columns("TradeName")
            Me.columnSource = MyBase.Columns("Source")
            Me.columnMeasurementUnit = MyBase.Columns("MeasurementUnit")
            Me.columnQuarterlyRequirement = MyBase.Columns("QuarterlyRequirement")
            Me.columnQuarterlyAmountUsed = MyBase.Columns("QuarterlyAmountUsed")
            Me.columnLowPrice = MyBase.Columns("LowPrice")
            Me.columnHighPrice = MyBase.Columns("HighPrice")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnQuarterlyRecordID = MyBase.Columns("QuarterlyRecordID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnListID = New Global.System.Data.DataColumn("ListID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListID)
            Me.columnListItemSw = New Global.System.Data.DataColumn("ListItemSw", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListItemSw)
            Me.columnListItemEn = New Global.System.Data.DataColumn("ListItemEn", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListItemEn)
            Me.columnListItemType = New Global.System.Data.DataColumn("ListItemType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListItemType)
            Me.columnListItemStatus = New Global.System.Data.DataColumn("ListItemStatus", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListItemStatus)
            Me.columnAnimalsFeedsID = New Global.System.Data.DataColumn("AnimalsFeedsID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnimalsFeedsID)
            Me.columnFeedsID = New Global.System.Data.DataColumn("FeedsID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFeedsID)
            Me.columnGenericName = New Global.System.Data.DataColumn("GenericName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGenericName)
            Me.columnTradeName = New Global.System.Data.DataColumn("TradeName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTradeName)
            Me.columnSource = New Global.System.Data.DataColumn("Source", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource)
            Me.columnMeasurementUnit = New Global.System.Data.DataColumn("MeasurementUnit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeasurementUnit)
            Me.columnQuarterlyRequirement = New Global.System.Data.DataColumn("QuarterlyRequirement", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuarterlyRequirement)
            Me.columnQuarterlyAmountUsed = New Global.System.Data.DataColumn("QuarterlyAmountUsed", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuarterlyAmountUsed)
            Me.columnLowPrice = New Global.System.Data.DataColumn("LowPrice", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLowPrice)
            Me.columnHighPrice = New Global.System.Data.DataColumn("HighPrice", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHighPrice)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnQuarterlyRecordID = New Global.System.Data.DataColumn("QuarterlyRecordID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuarterlyRecordID)
            Me.columnListID.AllowDBNull = false
            Me.columnListItemSw.MaxLength = 50
            Me.columnListItemEn.MaxLength = 50
            Me.columnListItemType.MaxLength = 50
            Me.columnAnimalsFeedsID.AllowDBNull = false
            Me.columnGenericName.MaxLength = 50
            Me.columnTradeName.MaxLength = 50
            Me.columnSource.MaxLength = 50
            Me.columnMeasurementUnit.MaxLength = 10
            Me.columnRemarks.MaxLength = 200
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewappUspQuarterlyIntegratedFillTreatmentRow() As appUspQuarterlyIntegratedFillTreatmentRow
            Return CType(Me.NewRow,appUspQuarterlyIntegratedFillTreatmentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New appUspQuarterlyIntegratedFillTreatmentRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(appUspQuarterlyIntegratedFillTreatmentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTreatmentRowChangedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTreatmentRowChanged(Me, New appUspQuarterlyIntegratedFillTreatmentRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTreatmentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTreatmentRowChangingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTreatmentRowChanging(Me, New appUspQuarterlyIntegratedFillTreatmentRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTreatmentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTreatmentRowDeletedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTreatmentRowDeleted(Me, New appUspQuarterlyIntegratedFillTreatmentRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTreatmentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTreatmentRowDeletingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTreatmentRowDeleting(Me, New appUspQuarterlyIntegratedFillTreatmentRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTreatmentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveappUspQuarterlyIntegratedFillTreatmentRow(ByVal row As appUspQuarterlyIntegratedFillTreatmentRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuarterlyIntegratedDataSet = New QuarterlyIntegratedDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "appUspQuarterlyIntegratedFillTreatmentDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class appUspQuarterlyIntegratedFillVaccinesDataTable
        Inherits Global.System.Data.TypedTableBase(Of appUspQuarterlyIntegratedFillVaccinesRow)
        
        Private columnListID As Global.System.Data.DataColumn
        
        Private columnListItemSw As Global.System.Data.DataColumn
        
        Private columnListItemEn As Global.System.Data.DataColumn
        
        Private columnListItemType As Global.System.Data.DataColumn
        
        Private columnListItemStatus As Global.System.Data.DataColumn
        
        Private columnAnimalsFeedsID As Global.System.Data.DataColumn
        
        Private columnFeedsID As Global.System.Data.DataColumn
        
        Private columnGenericName As Global.System.Data.DataColumn
        
        Private columnTradeName As Global.System.Data.DataColumn
        
        Private columnSource As Global.System.Data.DataColumn
        
        Private columnMeasurementUnit As Global.System.Data.DataColumn
        
        Private columnQuarterlyRequirement As Global.System.Data.DataColumn
        
        Private columnQuarterlyAmountUsed As Global.System.Data.DataColumn
        
        Private columnLowPrice As Global.System.Data.DataColumn
        
        Private columnHighPrice As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnQuarterlyRecordID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "appUspQuarterlyIntegratedFillVaccines"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListItemSwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListItemSw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListItemEnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListItemEn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListItemTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListItemType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListItemStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListItemStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnimalsFeedsIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnimalsFeedsID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FeedsIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFeedsID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GenericNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGenericName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TradeNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTradeName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SourceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeasurementUnitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeasurementUnit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuarterlyRequirementColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuarterlyRequirement
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuarterlyAmountUsedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuarterlyAmountUsed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LowPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLowPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HighPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHighPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuarterlyRecordIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuarterlyRecordID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As appUspQuarterlyIntegratedFillVaccinesRow
            Get
                Return CType(Me.Rows(index),appUspQuarterlyIntegratedFillVaccinesRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillVaccinesRowChanging As appUspQuarterlyIntegratedFillVaccinesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillVaccinesRowChanged As appUspQuarterlyIntegratedFillVaccinesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillVaccinesRowDeleting As appUspQuarterlyIntegratedFillVaccinesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillVaccinesRowDeleted As appUspQuarterlyIntegratedFillVaccinesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddappUspQuarterlyIntegratedFillVaccinesRow(ByVal row As appUspQuarterlyIntegratedFillVaccinesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddappUspQuarterlyIntegratedFillVaccinesRow( _
                    ByVal ListID As System.Guid,  _
                    ByVal ListItemSw As String,  _
                    ByVal ListItemEn As String,  _
                    ByVal ListItemType As String,  _
                    ByVal ListItemStatus As Integer,  _
                    ByVal AnimalsFeedsID As System.Guid,  _
                    ByVal FeedsID As System.Guid,  _
                    ByVal GenericName As String,  _
                    ByVal TradeName As String,  _
                    ByVal Source As String,  _
                    ByVal MeasurementUnit As String,  _
                    ByVal QuarterlyRequirement As Double,  _
                    ByVal QuarterlyAmountUsed As Double,  _
                    ByVal LowPrice As Double,  _
                    ByVal HighPrice As Double,  _
                    ByVal Remarks As String,  _
                    ByVal QuarterlyRecordID As System.Guid) As appUspQuarterlyIntegratedFillVaccinesRow
            Dim rowappUspQuarterlyIntegratedFillVaccinesRow As appUspQuarterlyIntegratedFillVaccinesRow = CType(Me.NewRow,appUspQuarterlyIntegratedFillVaccinesRow)
            Dim columnValuesArray() As Object = New Object() {ListID, ListItemSw, ListItemEn, ListItemType, ListItemStatus, AnimalsFeedsID, FeedsID, GenericName, TradeName, Source, MeasurementUnit, QuarterlyRequirement, QuarterlyAmountUsed, LowPrice, HighPrice, Remarks, QuarterlyRecordID}
            rowappUspQuarterlyIntegratedFillVaccinesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowappUspQuarterlyIntegratedFillVaccinesRow)
            Return rowappUspQuarterlyIntegratedFillVaccinesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As appUspQuarterlyIntegratedFillVaccinesDataTable = CType(MyBase.Clone,appUspQuarterlyIntegratedFillVaccinesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New appUspQuarterlyIntegratedFillVaccinesDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnListID = MyBase.Columns("ListID")
            Me.columnListItemSw = MyBase.Columns("ListItemSw")
            Me.columnListItemEn = MyBase.Columns("ListItemEn")
            Me.columnListItemType = MyBase.Columns("ListItemType")
            Me.columnListItemStatus = MyBase.Columns("ListItemStatus")
            Me.columnAnimalsFeedsID = MyBase.Columns("AnimalsFeedsID")
            Me.columnFeedsID = MyBase.Columns("FeedsID")
            Me.columnGenericName = MyBase.Columns("GenericName")
            Me.columnTradeName = MyBase.Columns("TradeName")
            Me.columnSource = MyBase.Columns("Source")
            Me.columnMeasurementUnit = MyBase.Columns("MeasurementUnit")
            Me.columnQuarterlyRequirement = MyBase.Columns("QuarterlyRequirement")
            Me.columnQuarterlyAmountUsed = MyBase.Columns("QuarterlyAmountUsed")
            Me.columnLowPrice = MyBase.Columns("LowPrice")
            Me.columnHighPrice = MyBase.Columns("HighPrice")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnQuarterlyRecordID = MyBase.Columns("QuarterlyRecordID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnListID = New Global.System.Data.DataColumn("ListID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListID)
            Me.columnListItemSw = New Global.System.Data.DataColumn("ListItemSw", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListItemSw)
            Me.columnListItemEn = New Global.System.Data.DataColumn("ListItemEn", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListItemEn)
            Me.columnListItemType = New Global.System.Data.DataColumn("ListItemType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListItemType)
            Me.columnListItemStatus = New Global.System.Data.DataColumn("ListItemStatus", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListItemStatus)
            Me.columnAnimalsFeedsID = New Global.System.Data.DataColumn("AnimalsFeedsID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnimalsFeedsID)
            Me.columnFeedsID = New Global.System.Data.DataColumn("FeedsID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFeedsID)
            Me.columnGenericName = New Global.System.Data.DataColumn("GenericName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGenericName)
            Me.columnTradeName = New Global.System.Data.DataColumn("TradeName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTradeName)
            Me.columnSource = New Global.System.Data.DataColumn("Source", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource)
            Me.columnMeasurementUnit = New Global.System.Data.DataColumn("MeasurementUnit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeasurementUnit)
            Me.columnQuarterlyRequirement = New Global.System.Data.DataColumn("QuarterlyRequirement", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuarterlyRequirement)
            Me.columnQuarterlyAmountUsed = New Global.System.Data.DataColumn("QuarterlyAmountUsed", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuarterlyAmountUsed)
            Me.columnLowPrice = New Global.System.Data.DataColumn("LowPrice", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLowPrice)
            Me.columnHighPrice = New Global.System.Data.DataColumn("HighPrice", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHighPrice)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnQuarterlyRecordID = New Global.System.Data.DataColumn("QuarterlyRecordID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuarterlyRecordID)
            Me.columnListID.AllowDBNull = false
            Me.columnListItemSw.MaxLength = 50
            Me.columnListItemEn.MaxLength = 50
            Me.columnListItemType.MaxLength = 50
            Me.columnAnimalsFeedsID.AllowDBNull = false
            Me.columnGenericName.MaxLength = 50
            Me.columnTradeName.MaxLength = 50
            Me.columnSource.MaxLength = 50
            Me.columnMeasurementUnit.MaxLength = 10
            Me.columnRemarks.MaxLength = 200
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewappUspQuarterlyIntegratedFillVaccinesRow() As appUspQuarterlyIntegratedFillVaccinesRow
            Return CType(Me.NewRow,appUspQuarterlyIntegratedFillVaccinesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New appUspQuarterlyIntegratedFillVaccinesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(appUspQuarterlyIntegratedFillVaccinesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.appUspQuarterlyIntegratedFillVaccinesRowChangedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillVaccinesRowChanged(Me, New appUspQuarterlyIntegratedFillVaccinesRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillVaccinesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.appUspQuarterlyIntegratedFillVaccinesRowChangingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillVaccinesRowChanging(Me, New appUspQuarterlyIntegratedFillVaccinesRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillVaccinesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.appUspQuarterlyIntegratedFillVaccinesRowDeletedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillVaccinesRowDeleted(Me, New appUspQuarterlyIntegratedFillVaccinesRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillVaccinesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.appUspQuarterlyIntegratedFillVaccinesRowDeletingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillVaccinesRowDeleting(Me, New appUspQuarterlyIntegratedFillVaccinesRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillVaccinesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveappUspQuarterlyIntegratedFillVaccinesRow(ByVal row As appUspQuarterlyIntegratedFillVaccinesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuarterlyIntegratedDataSet = New QuarterlyIntegratedDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "appUspQuarterlyIntegratedFillVaccinesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class appUspQuarterlyIntegratedFillAnimalsFeedsDataTable
        Inherits Global.System.Data.TypedTableBase(Of appUspQuarterlyIntegratedFillAnimalsFeedsRow)
        
        Private columnListID As Global.System.Data.DataColumn
        
        Private columnListItemSw As Global.System.Data.DataColumn
        
        Private columnListItemEn As Global.System.Data.DataColumn
        
        Private columnListItemType As Global.System.Data.DataColumn
        
        Private columnListItemStatus As Global.System.Data.DataColumn
        
        Private columnAnimalsFeedsID As Global.System.Data.DataColumn
        
        Private columnFeedsID As Global.System.Data.DataColumn
        
        Private columnGenericName As Global.System.Data.DataColumn
        
        Private columnTradeName As Global.System.Data.DataColumn
        
        Private columnSource As Global.System.Data.DataColumn
        
        Private columnMeasurementUnit As Global.System.Data.DataColumn
        
        Private columnQuarterlyRequirement As Global.System.Data.DataColumn
        
        Private columnQuarterlyAmountUsed As Global.System.Data.DataColumn
        
        Private columnLowPrice As Global.System.Data.DataColumn
        
        Private columnHighPrice As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnQuarterlyRecordID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "appUspQuarterlyIntegratedFillAnimalsFeeds"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListItemSwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListItemSw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListItemEnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListItemEn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListItemTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListItemType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListItemStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListItemStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnimalsFeedsIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnimalsFeedsID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FeedsIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFeedsID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GenericNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGenericName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TradeNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTradeName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SourceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeasurementUnitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeasurementUnit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuarterlyRequirementColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuarterlyRequirement
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuarterlyAmountUsedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuarterlyAmountUsed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LowPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLowPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HighPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHighPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuarterlyRecordIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuarterlyRecordID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As appUspQuarterlyIntegratedFillAnimalsFeedsRow
            Get
                Return CType(Me.Rows(index),appUspQuarterlyIntegratedFillAnimalsFeedsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillAnimalsFeedsRowChanging As appUspQuarterlyIntegratedFillAnimalsFeedsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillAnimalsFeedsRowChanged As appUspQuarterlyIntegratedFillAnimalsFeedsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillAnimalsFeedsRowDeleting As appUspQuarterlyIntegratedFillAnimalsFeedsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillAnimalsFeedsRowDeleted As appUspQuarterlyIntegratedFillAnimalsFeedsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddappUspQuarterlyIntegratedFillAnimalsFeedsRow(ByVal row As appUspQuarterlyIntegratedFillAnimalsFeedsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddappUspQuarterlyIntegratedFillAnimalsFeedsRow( _
                    ByVal ListID As System.Guid,  _
                    ByVal ListItemSw As String,  _
                    ByVal ListItemEn As String,  _
                    ByVal ListItemType As String,  _
                    ByVal ListItemStatus As Integer,  _
                    ByVal AnimalsFeedsID As System.Guid,  _
                    ByVal FeedsID As System.Guid,  _
                    ByVal GenericName As String,  _
                    ByVal TradeName As String,  _
                    ByVal Source As String,  _
                    ByVal MeasurementUnit As String,  _
                    ByVal QuarterlyRequirement As Double,  _
                    ByVal QuarterlyAmountUsed As Double,  _
                    ByVal LowPrice As Double,  _
                    ByVal HighPrice As Double,  _
                    ByVal Remarks As String,  _
                    ByVal QuarterlyRecordID As System.Guid) As appUspQuarterlyIntegratedFillAnimalsFeedsRow
            Dim rowappUspQuarterlyIntegratedFillAnimalsFeedsRow As appUspQuarterlyIntegratedFillAnimalsFeedsRow = CType(Me.NewRow,appUspQuarterlyIntegratedFillAnimalsFeedsRow)
            Dim columnValuesArray() As Object = New Object() {ListID, ListItemSw, ListItemEn, ListItemType, ListItemStatus, AnimalsFeedsID, FeedsID, GenericName, TradeName, Source, MeasurementUnit, QuarterlyRequirement, QuarterlyAmountUsed, LowPrice, HighPrice, Remarks, QuarterlyRecordID}
            rowappUspQuarterlyIntegratedFillAnimalsFeedsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowappUspQuarterlyIntegratedFillAnimalsFeedsRow)
            Return rowappUspQuarterlyIntegratedFillAnimalsFeedsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As appUspQuarterlyIntegratedFillAnimalsFeedsDataTable = CType(MyBase.Clone,appUspQuarterlyIntegratedFillAnimalsFeedsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New appUspQuarterlyIntegratedFillAnimalsFeedsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnListID = MyBase.Columns("ListID")
            Me.columnListItemSw = MyBase.Columns("ListItemSw")
            Me.columnListItemEn = MyBase.Columns("ListItemEn")
            Me.columnListItemType = MyBase.Columns("ListItemType")
            Me.columnListItemStatus = MyBase.Columns("ListItemStatus")
            Me.columnAnimalsFeedsID = MyBase.Columns("AnimalsFeedsID")
            Me.columnFeedsID = MyBase.Columns("FeedsID")
            Me.columnGenericName = MyBase.Columns("GenericName")
            Me.columnTradeName = MyBase.Columns("TradeName")
            Me.columnSource = MyBase.Columns("Source")
            Me.columnMeasurementUnit = MyBase.Columns("MeasurementUnit")
            Me.columnQuarterlyRequirement = MyBase.Columns("QuarterlyRequirement")
            Me.columnQuarterlyAmountUsed = MyBase.Columns("QuarterlyAmountUsed")
            Me.columnLowPrice = MyBase.Columns("LowPrice")
            Me.columnHighPrice = MyBase.Columns("HighPrice")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnQuarterlyRecordID = MyBase.Columns("QuarterlyRecordID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnListID = New Global.System.Data.DataColumn("ListID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListID)
            Me.columnListItemSw = New Global.System.Data.DataColumn("ListItemSw", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListItemSw)
            Me.columnListItemEn = New Global.System.Data.DataColumn("ListItemEn", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListItemEn)
            Me.columnListItemType = New Global.System.Data.DataColumn("ListItemType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListItemType)
            Me.columnListItemStatus = New Global.System.Data.DataColumn("ListItemStatus", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListItemStatus)
            Me.columnAnimalsFeedsID = New Global.System.Data.DataColumn("AnimalsFeedsID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnimalsFeedsID)
            Me.columnFeedsID = New Global.System.Data.DataColumn("FeedsID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFeedsID)
            Me.columnGenericName = New Global.System.Data.DataColumn("GenericName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGenericName)
            Me.columnTradeName = New Global.System.Data.DataColumn("TradeName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTradeName)
            Me.columnSource = New Global.System.Data.DataColumn("Source", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource)
            Me.columnMeasurementUnit = New Global.System.Data.DataColumn("MeasurementUnit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeasurementUnit)
            Me.columnQuarterlyRequirement = New Global.System.Data.DataColumn("QuarterlyRequirement", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuarterlyRequirement)
            Me.columnQuarterlyAmountUsed = New Global.System.Data.DataColumn("QuarterlyAmountUsed", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuarterlyAmountUsed)
            Me.columnLowPrice = New Global.System.Data.DataColumn("LowPrice", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLowPrice)
            Me.columnHighPrice = New Global.System.Data.DataColumn("HighPrice", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHighPrice)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnQuarterlyRecordID = New Global.System.Data.DataColumn("QuarterlyRecordID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuarterlyRecordID)
            Me.columnListID.AllowDBNull = false
            Me.columnListItemSw.MaxLength = 50
            Me.columnListItemEn.MaxLength = 50
            Me.columnListItemType.MaxLength = 50
            Me.columnAnimalsFeedsID.AllowDBNull = false
            Me.columnGenericName.MaxLength = 50
            Me.columnTradeName.MaxLength = 50
            Me.columnSource.MaxLength = 50
            Me.columnMeasurementUnit.MaxLength = 10
            Me.columnRemarks.MaxLength = 200
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewappUspQuarterlyIntegratedFillAnimalsFeedsRow() As appUspQuarterlyIntegratedFillAnimalsFeedsRow
            Return CType(Me.NewRow,appUspQuarterlyIntegratedFillAnimalsFeedsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New appUspQuarterlyIntegratedFillAnimalsFeedsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(appUspQuarterlyIntegratedFillAnimalsFeedsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.appUspQuarterlyIntegratedFillAnimalsFeedsRowChangedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillAnimalsFeedsRowChanged(Me, New appUspQuarterlyIntegratedFillAnimalsFeedsRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillAnimalsFeedsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.appUspQuarterlyIntegratedFillAnimalsFeedsRowChangingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillAnimalsFeedsRowChanging(Me, New appUspQuarterlyIntegratedFillAnimalsFeedsRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillAnimalsFeedsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.appUspQuarterlyIntegratedFillAnimalsFeedsRowDeletedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillAnimalsFeedsRowDeleted(Me, New appUspQuarterlyIntegratedFillAnimalsFeedsRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillAnimalsFeedsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.appUspQuarterlyIntegratedFillAnimalsFeedsRowDeletingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillAnimalsFeedsRowDeleting(Me, New appUspQuarterlyIntegratedFillAnimalsFeedsRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillAnimalsFeedsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveappUspQuarterlyIntegratedFillAnimalsFeedsRow(ByVal row As appUspQuarterlyIntegratedFillAnimalsFeedsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuarterlyIntegratedDataSet = New QuarterlyIntegratedDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "appUspQuarterlyIntegratedFillAnimalsFeedsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class appUspQuarterlyIntegratedFillReproductionInputDataTable
        Inherits Global.System.Data.TypedTableBase(Of appUspQuarterlyIntegratedFillReproductionInputRow)
        
        Private columnListID As Global.System.Data.DataColumn
        
        Private columnListItemSw As Global.System.Data.DataColumn
        
        Private columnListItemEn As Global.System.Data.DataColumn
        
        Private columnListItemType As Global.System.Data.DataColumn
        
        Private columnListItemStatus As Global.System.Data.DataColumn
        
        Private columnReproductionInputsID As Global.System.Data.DataColumn
        
        Private columnInputID As Global.System.Data.DataColumn
        
        Private columnBreed As Global.System.Data.DataColumn
        
        Private columnAmountRequired As Global.System.Data.DataColumn
        
        Private columnAmountAvailable As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnQuarterlyRecordID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "appUspQuarterlyIntegratedFillReproductionInput"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListItemSwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListItemSw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListItemEnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListItemEn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListItemTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListItemType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListItemStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListItemStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReproductionInputsIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReproductionInputsID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InputIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInputID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BreedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBreed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AmountRequiredColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmountRequired
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AmountAvailableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmountAvailable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuarterlyRecordIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuarterlyRecordID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As appUspQuarterlyIntegratedFillReproductionInputRow
            Get
                Return CType(Me.Rows(index),appUspQuarterlyIntegratedFillReproductionInputRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillReproductionInputRowChanging As appUspQuarterlyIntegratedFillReproductionInputRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillReproductionInputRowChanged As appUspQuarterlyIntegratedFillReproductionInputRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillReproductionInputRowDeleting As appUspQuarterlyIntegratedFillReproductionInputRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillReproductionInputRowDeleted As appUspQuarterlyIntegratedFillReproductionInputRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddappUspQuarterlyIntegratedFillReproductionInputRow(ByVal row As appUspQuarterlyIntegratedFillReproductionInputRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddappUspQuarterlyIntegratedFillReproductionInputRow(ByVal ListID As System.Guid, ByVal ListItemSw As String, ByVal ListItemEn As String, ByVal ListItemType As String, ByVal ListItemStatus As Integer, ByVal ReproductionInputsID As System.Guid, ByVal InputID As System.Guid, ByVal Breed As String, ByVal AmountRequired As Double, ByVal AmountAvailable As Double, ByVal Remarks As String, ByVal QuarterlyRecordID As System.Guid) As appUspQuarterlyIntegratedFillReproductionInputRow
            Dim rowappUspQuarterlyIntegratedFillReproductionInputRow As appUspQuarterlyIntegratedFillReproductionInputRow = CType(Me.NewRow,appUspQuarterlyIntegratedFillReproductionInputRow)
            Dim columnValuesArray() As Object = New Object() {ListID, ListItemSw, ListItemEn, ListItemType, ListItemStatus, ReproductionInputsID, InputID, Breed, AmountRequired, AmountAvailable, Remarks, QuarterlyRecordID}
            rowappUspQuarterlyIntegratedFillReproductionInputRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowappUspQuarterlyIntegratedFillReproductionInputRow)
            Return rowappUspQuarterlyIntegratedFillReproductionInputRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As appUspQuarterlyIntegratedFillReproductionInputDataTable = CType(MyBase.Clone,appUspQuarterlyIntegratedFillReproductionInputDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New appUspQuarterlyIntegratedFillReproductionInputDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnListID = MyBase.Columns("ListID")
            Me.columnListItemSw = MyBase.Columns("ListItemSw")
            Me.columnListItemEn = MyBase.Columns("ListItemEn")
            Me.columnListItemType = MyBase.Columns("ListItemType")
            Me.columnListItemStatus = MyBase.Columns("ListItemStatus")
            Me.columnReproductionInputsID = MyBase.Columns("ReproductionInputsID")
            Me.columnInputID = MyBase.Columns("InputID")
            Me.columnBreed = MyBase.Columns("Breed")
            Me.columnAmountRequired = MyBase.Columns("AmountRequired")
            Me.columnAmountAvailable = MyBase.Columns("AmountAvailable")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnQuarterlyRecordID = MyBase.Columns("QuarterlyRecordID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnListID = New Global.System.Data.DataColumn("ListID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListID)
            Me.columnListItemSw = New Global.System.Data.DataColumn("ListItemSw", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListItemSw)
            Me.columnListItemEn = New Global.System.Data.DataColumn("ListItemEn", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListItemEn)
            Me.columnListItemType = New Global.System.Data.DataColumn("ListItemType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListItemType)
            Me.columnListItemStatus = New Global.System.Data.DataColumn("ListItemStatus", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListItemStatus)
            Me.columnReproductionInputsID = New Global.System.Data.DataColumn("ReproductionInputsID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReproductionInputsID)
            Me.columnInputID = New Global.System.Data.DataColumn("InputID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInputID)
            Me.columnBreed = New Global.System.Data.DataColumn("Breed", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBreed)
            Me.columnAmountRequired = New Global.System.Data.DataColumn("AmountRequired", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmountRequired)
            Me.columnAmountAvailable = New Global.System.Data.DataColumn("AmountAvailable", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmountAvailable)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnQuarterlyRecordID = New Global.System.Data.DataColumn("QuarterlyRecordID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuarterlyRecordID)
            Me.columnListID.AllowDBNull = false
            Me.columnListItemSw.MaxLength = 50
            Me.columnListItemEn.MaxLength = 50
            Me.columnListItemType.MaxLength = 50
            Me.columnReproductionInputsID.AllowDBNull = false
            Me.columnBreed.MaxLength = 50
            Me.columnRemarks.MaxLength = 200
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewappUspQuarterlyIntegratedFillReproductionInputRow() As appUspQuarterlyIntegratedFillReproductionInputRow
            Return CType(Me.NewRow,appUspQuarterlyIntegratedFillReproductionInputRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New appUspQuarterlyIntegratedFillReproductionInputRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(appUspQuarterlyIntegratedFillReproductionInputRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.appUspQuarterlyIntegratedFillReproductionInputRowChangedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillReproductionInputRowChanged(Me, New appUspQuarterlyIntegratedFillReproductionInputRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillReproductionInputRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.appUspQuarterlyIntegratedFillReproductionInputRowChangingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillReproductionInputRowChanging(Me, New appUspQuarterlyIntegratedFillReproductionInputRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillReproductionInputRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.appUspQuarterlyIntegratedFillReproductionInputRowDeletedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillReproductionInputRowDeleted(Me, New appUspQuarterlyIntegratedFillReproductionInputRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillReproductionInputRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.appUspQuarterlyIntegratedFillReproductionInputRowDeletingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillReproductionInputRowDeleting(Me, New appUspQuarterlyIntegratedFillReproductionInputRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillReproductionInputRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveappUspQuarterlyIntegratedFillReproductionInputRow(ByVal row As appUspQuarterlyIntegratedFillReproductionInputRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuarterlyIntegratedDataSet = New QuarterlyIntegratedDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "appUspQuarterlyIntegratedFillReproductionInputDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class rptUspQuarterlyTargettDataTable
        Inherits Global.System.Data.TypedTableBase(Of rptUspQuarterlyTargettRow)
        
        Private columnCropName As Global.System.Data.DataColumn
        
        Private columnGroupID As Global.System.Data.DataColumn
        
        Private columnAI As Global.System.Data.DataColumn
        
        Private columnExpectedArea As Global.System.Data.DataColumn
        
        Private columnExpectedProd As Global.System.Data.DataColumn
        
        Private columnExpectedYield As Global.System.Data.DataColumn
        
        Private columnCropName1 As Global.System.Data.DataColumn
        
        Private columnGroupID1 As Global.System.Data.DataColumn
        
        Private columnAI1 As Global.System.Data.DataColumn
        
        Private columnAreaDone As Global.System.Data.DataColumn
        
        Private columnProdDone As Global.System.Data.DataColumn
        
        Private columnYieldDone As Global.System.Data.DataColumn
        
        Private columnPrice As Global.System.Data.DataColumn
        
        Private columnmaxperiodfrom As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "rptUspQuarterlyTargett"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CropNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCropName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedAreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedProdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedProd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedYieldColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedYield
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CropName1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCropName1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AI1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAI1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AreaDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAreaDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProdDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProdDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YieldDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYieldDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property maxperiodfromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaxperiodfrom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As rptUspQuarterlyTargettRow
            Get
                Return CType(Me.Rows(index),rptUspQuarterlyTargettRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event rptUspQuarterlyTargettRowChanging As rptUspQuarterlyTargettRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event rptUspQuarterlyTargettRowChanged As rptUspQuarterlyTargettRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event rptUspQuarterlyTargettRowDeleting As rptUspQuarterlyTargettRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event rptUspQuarterlyTargettRowDeleted As rptUspQuarterlyTargettRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddrptUspQuarterlyTargettRow(ByVal row As rptUspQuarterlyTargettRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddrptUspQuarterlyTargettRow(ByVal CropName As String, ByVal GroupID As Integer, ByVal AI As Integer, ByVal ExpectedArea As Double, ByVal ExpectedProd As Double, ByVal ExpectedYield As Double, ByVal CropName1 As String, ByVal GroupID1 As Integer, ByVal AI1 As Integer, ByVal AreaDone As Double, ByVal ProdDone As Double, ByVal YieldDone As Double, ByVal Price As Double, ByVal maxperiodfrom As Date) As rptUspQuarterlyTargettRow
            Dim rowrptUspQuarterlyTargettRow As rptUspQuarterlyTargettRow = CType(Me.NewRow,rptUspQuarterlyTargettRow)
            Dim columnValuesArray() As Object = New Object() {CropName, GroupID, AI, ExpectedArea, ExpectedProd, ExpectedYield, CropName1, GroupID1, AI1, AreaDone, ProdDone, YieldDone, Price, maxperiodfrom}
            rowrptUspQuarterlyTargettRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowrptUspQuarterlyTargettRow)
            Return rowrptUspQuarterlyTargettRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As rptUspQuarterlyTargettDataTable = CType(MyBase.Clone,rptUspQuarterlyTargettDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New rptUspQuarterlyTargettDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCropName = MyBase.Columns("CropName")
            Me.columnGroupID = MyBase.Columns("GroupID")
            Me.columnAI = MyBase.Columns("AI")
            Me.columnExpectedArea = MyBase.Columns("ExpectedArea")
            Me.columnExpectedProd = MyBase.Columns("ExpectedProd")
            Me.columnExpectedYield = MyBase.Columns("ExpectedYield")
            Me.columnCropName1 = MyBase.Columns("CropName1")
            Me.columnGroupID1 = MyBase.Columns("GroupID1")
            Me.columnAI1 = MyBase.Columns("AI1")
            Me.columnAreaDone = MyBase.Columns("AreaDone")
            Me.columnProdDone = MyBase.Columns("ProdDone")
            Me.columnYieldDone = MyBase.Columns("YieldDone")
            Me.columnPrice = MyBase.Columns("Price")
            Me.columnmaxperiodfrom = MyBase.Columns("maxperiodfrom")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCropName = New Global.System.Data.DataColumn("CropName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCropName)
            Me.columnGroupID = New Global.System.Data.DataColumn("GroupID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID)
            Me.columnAI = New Global.System.Data.DataColumn("AI", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAI)
            Me.columnExpectedArea = New Global.System.Data.DataColumn("ExpectedArea", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedArea)
            Me.columnExpectedProd = New Global.System.Data.DataColumn("ExpectedProd", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedProd)
            Me.columnExpectedYield = New Global.System.Data.DataColumn("ExpectedYield", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedYield)
            Me.columnCropName1 = New Global.System.Data.DataColumn("CropName1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCropName1)
            Me.columnGroupID1 = New Global.System.Data.DataColumn("GroupID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID1)
            Me.columnAI1 = New Global.System.Data.DataColumn("AI1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAI1)
            Me.columnAreaDone = New Global.System.Data.DataColumn("AreaDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAreaDone)
            Me.columnProdDone = New Global.System.Data.DataColumn("ProdDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProdDone)
            Me.columnYieldDone = New Global.System.Data.DataColumn("YieldDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYieldDone)
            Me.columnPrice = New Global.System.Data.DataColumn("Price", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrice)
            Me.columnmaxperiodfrom = New Global.System.Data.DataColumn("maxperiodfrom", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaxperiodfrom)
            Me.columnCropName.MaxLength = 50
            Me.columnExpectedYield.ReadOnly = true
            Me.columnCropName1.MaxLength = 50
            Me.columnYieldDone.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewrptUspQuarterlyTargettRow() As rptUspQuarterlyTargettRow
            Return CType(Me.NewRow,rptUspQuarterlyTargettRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New rptUspQuarterlyTargettRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(rptUspQuarterlyTargettRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.rptUspQuarterlyTargettRowChangedEvent) Is Nothing) Then
                RaiseEvent rptUspQuarterlyTargettRowChanged(Me, New rptUspQuarterlyTargettRowChangeEvent(CType(e.Row,rptUspQuarterlyTargettRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.rptUspQuarterlyTargettRowChangingEvent) Is Nothing) Then
                RaiseEvent rptUspQuarterlyTargettRowChanging(Me, New rptUspQuarterlyTargettRowChangeEvent(CType(e.Row,rptUspQuarterlyTargettRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.rptUspQuarterlyTargettRowDeletedEvent) Is Nothing) Then
                RaiseEvent rptUspQuarterlyTargettRowDeleted(Me, New rptUspQuarterlyTargettRowChangeEvent(CType(e.Row,rptUspQuarterlyTargettRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.rptUspQuarterlyTargettRowDeletingEvent) Is Nothing) Then
                RaiseEvent rptUspQuarterlyTargettRowDeleting(Me, New rptUspQuarterlyTargettRowChangeEvent(CType(e.Row,rptUspQuarterlyTargettRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoverptUspQuarterlyTargettRow(ByVal row As rptUspQuarterlyTargettRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuarterlyIntegratedDataSet = New QuarterlyIntegratedDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "rptUspQuarterlyTargettDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class appUspQuarterlyIntegratedFillTargetCerealDataTable
        Inherits Global.System.Data.TypedTableBase(Of appUspQuarterlyIntegratedFillTargetCerealRow)
        
        Private columnCropName As Global.System.Data.DataColumn
        
        Private columnGroupID As Global.System.Data.DataColumn
        
        Private columnAI As Global.System.Data.DataColumn
        
        Private columnExpectedArea As Global.System.Data.DataColumn
        
        Private columnExpectedProd As Global.System.Data.DataColumn
        
        Private columnExpectedYield As Global.System.Data.DataColumn
        
        Private columnCropName1 As Global.System.Data.DataColumn
        
        Private columnGroupID1 As Global.System.Data.DataColumn
        
        Private columnAI1 As Global.System.Data.DataColumn
        
        Private columnAreaDone As Global.System.Data.DataColumn
        
        Private columnProdDone As Global.System.Data.DataColumn
        
        Private columnYieldDone As Global.System.Data.DataColumn
        
        Private columnPrice As Global.System.Data.DataColumn
        
        Private columnmaxperiodfrom As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "appUspQuarterlyIntegratedFillTargetCereal"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CropNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCropName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedAreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedProdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedProd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedYieldColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedYield
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CropName1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCropName1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AI1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAI1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AreaDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAreaDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProdDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProdDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YieldDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYieldDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property maxperiodfromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaxperiodfrom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As appUspQuarterlyIntegratedFillTargetCerealRow
            Get
                Return CType(Me.Rows(index),appUspQuarterlyIntegratedFillTargetCerealRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetCerealRowChanging As appUspQuarterlyIntegratedFillTargetCerealRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetCerealRowChanged As appUspQuarterlyIntegratedFillTargetCerealRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetCerealRowDeleting As appUspQuarterlyIntegratedFillTargetCerealRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetCerealRowDeleted As appUspQuarterlyIntegratedFillTargetCerealRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddappUspQuarterlyIntegratedFillTargetCerealRow(ByVal row As appUspQuarterlyIntegratedFillTargetCerealRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddappUspQuarterlyIntegratedFillTargetCerealRow(ByVal CropName As String, ByVal GroupID As Integer, ByVal AI As Integer, ByVal ExpectedArea As Double, ByVal ExpectedProd As Double, ByVal ExpectedYield As Double, ByVal CropName1 As String, ByVal GroupID1 As Integer, ByVal AI1 As Integer, ByVal AreaDone As Double, ByVal ProdDone As Double, ByVal YieldDone As Double, ByVal Price As Double, ByVal maxperiodfrom As Date) As appUspQuarterlyIntegratedFillTargetCerealRow
            Dim rowappUspQuarterlyIntegratedFillTargetCerealRow As appUspQuarterlyIntegratedFillTargetCerealRow = CType(Me.NewRow,appUspQuarterlyIntegratedFillTargetCerealRow)
            Dim columnValuesArray() As Object = New Object() {CropName, GroupID, AI, ExpectedArea, ExpectedProd, ExpectedYield, CropName1, GroupID1, AI1, AreaDone, ProdDone, YieldDone, Price, maxperiodfrom}
            rowappUspQuarterlyIntegratedFillTargetCerealRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowappUspQuarterlyIntegratedFillTargetCerealRow)
            Return rowappUspQuarterlyIntegratedFillTargetCerealRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As appUspQuarterlyIntegratedFillTargetCerealDataTable = CType(MyBase.Clone,appUspQuarterlyIntegratedFillTargetCerealDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New appUspQuarterlyIntegratedFillTargetCerealDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCropName = MyBase.Columns("CropName")
            Me.columnGroupID = MyBase.Columns("GroupID")
            Me.columnAI = MyBase.Columns("AI")
            Me.columnExpectedArea = MyBase.Columns("ExpectedArea")
            Me.columnExpectedProd = MyBase.Columns("ExpectedProd")
            Me.columnExpectedYield = MyBase.Columns("ExpectedYield")
            Me.columnCropName1 = MyBase.Columns("CropName1")
            Me.columnGroupID1 = MyBase.Columns("GroupID1")
            Me.columnAI1 = MyBase.Columns("AI1")
            Me.columnAreaDone = MyBase.Columns("AreaDone")
            Me.columnProdDone = MyBase.Columns("ProdDone")
            Me.columnYieldDone = MyBase.Columns("YieldDone")
            Me.columnPrice = MyBase.Columns("Price")
            Me.columnmaxperiodfrom = MyBase.Columns("maxperiodfrom")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCropName = New Global.System.Data.DataColumn("CropName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCropName)
            Me.columnGroupID = New Global.System.Data.DataColumn("GroupID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID)
            Me.columnAI = New Global.System.Data.DataColumn("AI", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAI)
            Me.columnExpectedArea = New Global.System.Data.DataColumn("ExpectedArea", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedArea)
            Me.columnExpectedProd = New Global.System.Data.DataColumn("ExpectedProd", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedProd)
            Me.columnExpectedYield = New Global.System.Data.DataColumn("ExpectedYield", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedYield)
            Me.columnCropName1 = New Global.System.Data.DataColumn("CropName1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCropName1)
            Me.columnGroupID1 = New Global.System.Data.DataColumn("GroupID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID1)
            Me.columnAI1 = New Global.System.Data.DataColumn("AI1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAI1)
            Me.columnAreaDone = New Global.System.Data.DataColumn("AreaDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAreaDone)
            Me.columnProdDone = New Global.System.Data.DataColumn("ProdDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProdDone)
            Me.columnYieldDone = New Global.System.Data.DataColumn("YieldDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYieldDone)
            Me.columnPrice = New Global.System.Data.DataColumn("Price", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrice)
            Me.columnmaxperiodfrom = New Global.System.Data.DataColumn("maxperiodfrom", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaxperiodfrom)
            Me.columnCropName.MaxLength = 50
            Me.columnExpectedYield.ReadOnly = true
            Me.columnCropName1.MaxLength = 50
            Me.columnYieldDone.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewappUspQuarterlyIntegratedFillTargetCerealRow() As appUspQuarterlyIntegratedFillTargetCerealRow
            Return CType(Me.NewRow,appUspQuarterlyIntegratedFillTargetCerealRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New appUspQuarterlyIntegratedFillTargetCerealRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(appUspQuarterlyIntegratedFillTargetCerealRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetCerealRowChangedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetCerealRowChanged(Me, New appUspQuarterlyIntegratedFillTargetCerealRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetCerealRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetCerealRowChangingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetCerealRowChanging(Me, New appUspQuarterlyIntegratedFillTargetCerealRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetCerealRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetCerealRowDeletedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetCerealRowDeleted(Me, New appUspQuarterlyIntegratedFillTargetCerealRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetCerealRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetCerealRowDeletingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetCerealRowDeleting(Me, New appUspQuarterlyIntegratedFillTargetCerealRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetCerealRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveappUspQuarterlyIntegratedFillTargetCerealRow(ByVal row As appUspQuarterlyIntegratedFillTargetCerealRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuarterlyIntegratedDataSet = New QuarterlyIntegratedDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "appUspQuarterlyIntegratedFillTargetCerealDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class appUspQuarterlyIntegratedFillTargetFlowersDataTable
        Inherits Global.System.Data.TypedTableBase(Of appUspQuarterlyIntegratedFillTargetFlowersRow)
        
        Private columnCropName As Global.System.Data.DataColumn
        
        Private columnGroupID As Global.System.Data.DataColumn
        
        Private columnAI As Global.System.Data.DataColumn
        
        Private columnExpectedArea As Global.System.Data.DataColumn
        
        Private columnExpectedProd As Global.System.Data.DataColumn
        
        Private columnExpectedYield As Global.System.Data.DataColumn
        
        Private columnCropName1 As Global.System.Data.DataColumn
        
        Private columnGroupID1 As Global.System.Data.DataColumn
        
        Private columnAI1 As Global.System.Data.DataColumn
        
        Private columnAreaDone As Global.System.Data.DataColumn
        
        Private columnProdDone As Global.System.Data.DataColumn
        
        Private columnYieldDone As Global.System.Data.DataColumn
        
        Private columnPrice As Global.System.Data.DataColumn
        
        Private columnmaxperiodfrom As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "appUspQuarterlyIntegratedFillTargetFlowers"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CropNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCropName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedAreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedProdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedProd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedYieldColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedYield
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CropName1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCropName1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AI1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAI1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AreaDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAreaDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProdDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProdDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YieldDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYieldDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property maxperiodfromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaxperiodfrom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As appUspQuarterlyIntegratedFillTargetFlowersRow
            Get
                Return CType(Me.Rows(index),appUspQuarterlyIntegratedFillTargetFlowersRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetFlowersRowChanging As appUspQuarterlyIntegratedFillTargetFlowersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetFlowersRowChanged As appUspQuarterlyIntegratedFillTargetFlowersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetFlowersRowDeleting As appUspQuarterlyIntegratedFillTargetFlowersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetFlowersRowDeleted As appUspQuarterlyIntegratedFillTargetFlowersRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddappUspQuarterlyIntegratedFillTargetFlowersRow(ByVal row As appUspQuarterlyIntegratedFillTargetFlowersRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddappUspQuarterlyIntegratedFillTargetFlowersRow(ByVal CropName As String, ByVal GroupID As Integer, ByVal AI As Integer, ByVal ExpectedArea As Double, ByVal ExpectedProd As Double, ByVal ExpectedYield As Double, ByVal CropName1 As String, ByVal GroupID1 As Integer, ByVal AI1 As Integer, ByVal AreaDone As Double, ByVal ProdDone As Double, ByVal YieldDone As Double, ByVal Price As Double, ByVal maxperiodfrom As Date) As appUspQuarterlyIntegratedFillTargetFlowersRow
            Dim rowappUspQuarterlyIntegratedFillTargetFlowersRow As appUspQuarterlyIntegratedFillTargetFlowersRow = CType(Me.NewRow,appUspQuarterlyIntegratedFillTargetFlowersRow)
            Dim columnValuesArray() As Object = New Object() {CropName, GroupID, AI, ExpectedArea, ExpectedProd, ExpectedYield, CropName1, GroupID1, AI1, AreaDone, ProdDone, YieldDone, Price, maxperiodfrom}
            rowappUspQuarterlyIntegratedFillTargetFlowersRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowappUspQuarterlyIntegratedFillTargetFlowersRow)
            Return rowappUspQuarterlyIntegratedFillTargetFlowersRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As appUspQuarterlyIntegratedFillTargetFlowersDataTable = CType(MyBase.Clone,appUspQuarterlyIntegratedFillTargetFlowersDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New appUspQuarterlyIntegratedFillTargetFlowersDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCropName = MyBase.Columns("CropName")
            Me.columnGroupID = MyBase.Columns("GroupID")
            Me.columnAI = MyBase.Columns("AI")
            Me.columnExpectedArea = MyBase.Columns("ExpectedArea")
            Me.columnExpectedProd = MyBase.Columns("ExpectedProd")
            Me.columnExpectedYield = MyBase.Columns("ExpectedYield")
            Me.columnCropName1 = MyBase.Columns("CropName1")
            Me.columnGroupID1 = MyBase.Columns("GroupID1")
            Me.columnAI1 = MyBase.Columns("AI1")
            Me.columnAreaDone = MyBase.Columns("AreaDone")
            Me.columnProdDone = MyBase.Columns("ProdDone")
            Me.columnYieldDone = MyBase.Columns("YieldDone")
            Me.columnPrice = MyBase.Columns("Price")
            Me.columnmaxperiodfrom = MyBase.Columns("maxperiodfrom")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCropName = New Global.System.Data.DataColumn("CropName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCropName)
            Me.columnGroupID = New Global.System.Data.DataColumn("GroupID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID)
            Me.columnAI = New Global.System.Data.DataColumn("AI", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAI)
            Me.columnExpectedArea = New Global.System.Data.DataColumn("ExpectedArea", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedArea)
            Me.columnExpectedProd = New Global.System.Data.DataColumn("ExpectedProd", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedProd)
            Me.columnExpectedYield = New Global.System.Data.DataColumn("ExpectedYield", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedYield)
            Me.columnCropName1 = New Global.System.Data.DataColumn("CropName1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCropName1)
            Me.columnGroupID1 = New Global.System.Data.DataColumn("GroupID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID1)
            Me.columnAI1 = New Global.System.Data.DataColumn("AI1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAI1)
            Me.columnAreaDone = New Global.System.Data.DataColumn("AreaDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAreaDone)
            Me.columnProdDone = New Global.System.Data.DataColumn("ProdDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProdDone)
            Me.columnYieldDone = New Global.System.Data.DataColumn("YieldDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYieldDone)
            Me.columnPrice = New Global.System.Data.DataColumn("Price", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrice)
            Me.columnmaxperiodfrom = New Global.System.Data.DataColumn("maxperiodfrom", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaxperiodfrom)
            Me.columnCropName.MaxLength = 50
            Me.columnExpectedYield.ReadOnly = true
            Me.columnCropName1.MaxLength = 50
            Me.columnYieldDone.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewappUspQuarterlyIntegratedFillTargetFlowersRow() As appUspQuarterlyIntegratedFillTargetFlowersRow
            Return CType(Me.NewRow,appUspQuarterlyIntegratedFillTargetFlowersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New appUspQuarterlyIntegratedFillTargetFlowersRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(appUspQuarterlyIntegratedFillTargetFlowersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetFlowersRowChangedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetFlowersRowChanged(Me, New appUspQuarterlyIntegratedFillTargetFlowersRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetFlowersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetFlowersRowChangingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetFlowersRowChanging(Me, New appUspQuarterlyIntegratedFillTargetFlowersRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetFlowersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetFlowersRowDeletedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetFlowersRowDeleted(Me, New appUspQuarterlyIntegratedFillTargetFlowersRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetFlowersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetFlowersRowDeletingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetFlowersRowDeleting(Me, New appUspQuarterlyIntegratedFillTargetFlowersRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetFlowersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveappUspQuarterlyIntegratedFillTargetFlowersRow(ByVal row As appUspQuarterlyIntegratedFillTargetFlowersRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuarterlyIntegratedDataSet = New QuarterlyIntegratedDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "appUspQuarterlyIntegratedFillTargetFlowersDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class appUspQuarterlyIntegratedFillTargetFruitsDataTable
        Inherits Global.System.Data.TypedTableBase(Of appUspQuarterlyIntegratedFillTargetFruitsRow)
        
        Private columnCropName As Global.System.Data.DataColumn
        
        Private columnGroupID As Global.System.Data.DataColumn
        
        Private columnAI As Global.System.Data.DataColumn
        
        Private columnExpectedArea As Global.System.Data.DataColumn
        
        Private columnExpectedProd As Global.System.Data.DataColumn
        
        Private columnExpectedYield As Global.System.Data.DataColumn
        
        Private columnCropName1 As Global.System.Data.DataColumn
        
        Private columnGroupID1 As Global.System.Data.DataColumn
        
        Private columnAI1 As Global.System.Data.DataColumn
        
        Private columnAreaDone As Global.System.Data.DataColumn
        
        Private columnProdDone As Global.System.Data.DataColumn
        
        Private columnYieldDone As Global.System.Data.DataColumn
        
        Private columnPrice As Global.System.Data.DataColumn
        
        Private columnmaxperiodfrom As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "appUspQuarterlyIntegratedFillTargetFruits"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CropNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCropName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedAreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedProdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedProd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedYieldColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedYield
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CropName1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCropName1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AI1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAI1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AreaDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAreaDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProdDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProdDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YieldDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYieldDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property maxperiodfromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaxperiodfrom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As appUspQuarterlyIntegratedFillTargetFruitsRow
            Get
                Return CType(Me.Rows(index),appUspQuarterlyIntegratedFillTargetFruitsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetFruitsRowChanging As appUspQuarterlyIntegratedFillTargetFruitsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetFruitsRowChanged As appUspQuarterlyIntegratedFillTargetFruitsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetFruitsRowDeleting As appUspQuarterlyIntegratedFillTargetFruitsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetFruitsRowDeleted As appUspQuarterlyIntegratedFillTargetFruitsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddappUspQuarterlyIntegratedFillTargetFruitsRow(ByVal row As appUspQuarterlyIntegratedFillTargetFruitsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddappUspQuarterlyIntegratedFillTargetFruitsRow(ByVal CropName As String, ByVal GroupID As Integer, ByVal AI As Integer, ByVal ExpectedArea As Double, ByVal ExpectedProd As Double, ByVal ExpectedYield As Double, ByVal CropName1 As String, ByVal GroupID1 As Integer, ByVal AI1 As Integer, ByVal AreaDone As Double, ByVal ProdDone As Double, ByVal YieldDone As Double, ByVal Price As Double, ByVal maxperiodfrom As Date) As appUspQuarterlyIntegratedFillTargetFruitsRow
            Dim rowappUspQuarterlyIntegratedFillTargetFruitsRow As appUspQuarterlyIntegratedFillTargetFruitsRow = CType(Me.NewRow,appUspQuarterlyIntegratedFillTargetFruitsRow)
            Dim columnValuesArray() As Object = New Object() {CropName, GroupID, AI, ExpectedArea, ExpectedProd, ExpectedYield, CropName1, GroupID1, AI1, AreaDone, ProdDone, YieldDone, Price, maxperiodfrom}
            rowappUspQuarterlyIntegratedFillTargetFruitsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowappUspQuarterlyIntegratedFillTargetFruitsRow)
            Return rowappUspQuarterlyIntegratedFillTargetFruitsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As appUspQuarterlyIntegratedFillTargetFruitsDataTable = CType(MyBase.Clone,appUspQuarterlyIntegratedFillTargetFruitsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New appUspQuarterlyIntegratedFillTargetFruitsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCropName = MyBase.Columns("CropName")
            Me.columnGroupID = MyBase.Columns("GroupID")
            Me.columnAI = MyBase.Columns("AI")
            Me.columnExpectedArea = MyBase.Columns("ExpectedArea")
            Me.columnExpectedProd = MyBase.Columns("ExpectedProd")
            Me.columnExpectedYield = MyBase.Columns("ExpectedYield")
            Me.columnCropName1 = MyBase.Columns("CropName1")
            Me.columnGroupID1 = MyBase.Columns("GroupID1")
            Me.columnAI1 = MyBase.Columns("AI1")
            Me.columnAreaDone = MyBase.Columns("AreaDone")
            Me.columnProdDone = MyBase.Columns("ProdDone")
            Me.columnYieldDone = MyBase.Columns("YieldDone")
            Me.columnPrice = MyBase.Columns("Price")
            Me.columnmaxperiodfrom = MyBase.Columns("maxperiodfrom")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCropName = New Global.System.Data.DataColumn("CropName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCropName)
            Me.columnGroupID = New Global.System.Data.DataColumn("GroupID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID)
            Me.columnAI = New Global.System.Data.DataColumn("AI", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAI)
            Me.columnExpectedArea = New Global.System.Data.DataColumn("ExpectedArea", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedArea)
            Me.columnExpectedProd = New Global.System.Data.DataColumn("ExpectedProd", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedProd)
            Me.columnExpectedYield = New Global.System.Data.DataColumn("ExpectedYield", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedYield)
            Me.columnCropName1 = New Global.System.Data.DataColumn("CropName1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCropName1)
            Me.columnGroupID1 = New Global.System.Data.DataColumn("GroupID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID1)
            Me.columnAI1 = New Global.System.Data.DataColumn("AI1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAI1)
            Me.columnAreaDone = New Global.System.Data.DataColumn("AreaDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAreaDone)
            Me.columnProdDone = New Global.System.Data.DataColumn("ProdDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProdDone)
            Me.columnYieldDone = New Global.System.Data.DataColumn("YieldDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYieldDone)
            Me.columnPrice = New Global.System.Data.DataColumn("Price", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrice)
            Me.columnmaxperiodfrom = New Global.System.Data.DataColumn("maxperiodfrom", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaxperiodfrom)
            Me.columnCropName.MaxLength = 50
            Me.columnExpectedYield.ReadOnly = true
            Me.columnCropName1.MaxLength = 50
            Me.columnYieldDone.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewappUspQuarterlyIntegratedFillTargetFruitsRow() As appUspQuarterlyIntegratedFillTargetFruitsRow
            Return CType(Me.NewRow,appUspQuarterlyIntegratedFillTargetFruitsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New appUspQuarterlyIntegratedFillTargetFruitsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(appUspQuarterlyIntegratedFillTargetFruitsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetFruitsRowChangedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetFruitsRowChanged(Me, New appUspQuarterlyIntegratedFillTargetFruitsRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetFruitsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetFruitsRowChangingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetFruitsRowChanging(Me, New appUspQuarterlyIntegratedFillTargetFruitsRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetFruitsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetFruitsRowDeletedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetFruitsRowDeleted(Me, New appUspQuarterlyIntegratedFillTargetFruitsRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetFruitsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetFruitsRowDeletingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetFruitsRowDeleting(Me, New appUspQuarterlyIntegratedFillTargetFruitsRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetFruitsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveappUspQuarterlyIntegratedFillTargetFruitsRow(ByVal row As appUspQuarterlyIntegratedFillTargetFruitsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuarterlyIntegratedDataSet = New QuarterlyIntegratedDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "appUspQuarterlyIntegratedFillTargetFruitsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class appUspQuarterlyIntegratedFillTargetIndustrialDataTable
        Inherits Global.System.Data.TypedTableBase(Of appUspQuarterlyIntegratedFillTargetIndustrialRow)
        
        Private columnCropName As Global.System.Data.DataColumn
        
        Private columnGroupID As Global.System.Data.DataColumn
        
        Private columnAI As Global.System.Data.DataColumn
        
        Private columnExpectedArea As Global.System.Data.DataColumn
        
        Private columnExpectedProd As Global.System.Data.DataColumn
        
        Private columnExpectedYield As Global.System.Data.DataColumn
        
        Private columnCropName1 As Global.System.Data.DataColumn
        
        Private columnGroupID1 As Global.System.Data.DataColumn
        
        Private columnAI1 As Global.System.Data.DataColumn
        
        Private columnAreaDone As Global.System.Data.DataColumn
        
        Private columnProdDone As Global.System.Data.DataColumn
        
        Private columnYieldDone As Global.System.Data.DataColumn
        
        Private columnPrice As Global.System.Data.DataColumn
        
        Private columnmaxperiodfrom As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "appUspQuarterlyIntegratedFillTargetIndustrial"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CropNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCropName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedAreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedProdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedProd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedYieldColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedYield
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CropName1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCropName1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AI1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAI1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AreaDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAreaDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProdDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProdDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YieldDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYieldDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property maxperiodfromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaxperiodfrom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As appUspQuarterlyIntegratedFillTargetIndustrialRow
            Get
                Return CType(Me.Rows(index),appUspQuarterlyIntegratedFillTargetIndustrialRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetIndustrialRowChanging As appUspQuarterlyIntegratedFillTargetIndustrialRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetIndustrialRowChanged As appUspQuarterlyIntegratedFillTargetIndustrialRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetIndustrialRowDeleting As appUspQuarterlyIntegratedFillTargetIndustrialRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetIndustrialRowDeleted As appUspQuarterlyIntegratedFillTargetIndustrialRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddappUspQuarterlyIntegratedFillTargetIndustrialRow(ByVal row As appUspQuarterlyIntegratedFillTargetIndustrialRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddappUspQuarterlyIntegratedFillTargetIndustrialRow(ByVal CropName As String, ByVal GroupID As Integer, ByVal AI As Integer, ByVal ExpectedArea As Double, ByVal ExpectedProd As Double, ByVal ExpectedYield As Double, ByVal CropName1 As String, ByVal GroupID1 As Integer, ByVal AI1 As Integer, ByVal AreaDone As Double, ByVal ProdDone As Double, ByVal YieldDone As Double, ByVal Price As Double, ByVal maxperiodfrom As Date) As appUspQuarterlyIntegratedFillTargetIndustrialRow
            Dim rowappUspQuarterlyIntegratedFillTargetIndustrialRow As appUspQuarterlyIntegratedFillTargetIndustrialRow = CType(Me.NewRow,appUspQuarterlyIntegratedFillTargetIndustrialRow)
            Dim columnValuesArray() As Object = New Object() {CropName, GroupID, AI, ExpectedArea, ExpectedProd, ExpectedYield, CropName1, GroupID1, AI1, AreaDone, ProdDone, YieldDone, Price, maxperiodfrom}
            rowappUspQuarterlyIntegratedFillTargetIndustrialRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowappUspQuarterlyIntegratedFillTargetIndustrialRow)
            Return rowappUspQuarterlyIntegratedFillTargetIndustrialRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As appUspQuarterlyIntegratedFillTargetIndustrialDataTable = CType(MyBase.Clone,appUspQuarterlyIntegratedFillTargetIndustrialDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New appUspQuarterlyIntegratedFillTargetIndustrialDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCropName = MyBase.Columns("CropName")
            Me.columnGroupID = MyBase.Columns("GroupID")
            Me.columnAI = MyBase.Columns("AI")
            Me.columnExpectedArea = MyBase.Columns("ExpectedArea")
            Me.columnExpectedProd = MyBase.Columns("ExpectedProd")
            Me.columnExpectedYield = MyBase.Columns("ExpectedYield")
            Me.columnCropName1 = MyBase.Columns("CropName1")
            Me.columnGroupID1 = MyBase.Columns("GroupID1")
            Me.columnAI1 = MyBase.Columns("AI1")
            Me.columnAreaDone = MyBase.Columns("AreaDone")
            Me.columnProdDone = MyBase.Columns("ProdDone")
            Me.columnYieldDone = MyBase.Columns("YieldDone")
            Me.columnPrice = MyBase.Columns("Price")
            Me.columnmaxperiodfrom = MyBase.Columns("maxperiodfrom")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCropName = New Global.System.Data.DataColumn("CropName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCropName)
            Me.columnGroupID = New Global.System.Data.DataColumn("GroupID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID)
            Me.columnAI = New Global.System.Data.DataColumn("AI", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAI)
            Me.columnExpectedArea = New Global.System.Data.DataColumn("ExpectedArea", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedArea)
            Me.columnExpectedProd = New Global.System.Data.DataColumn("ExpectedProd", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedProd)
            Me.columnExpectedYield = New Global.System.Data.DataColumn("ExpectedYield", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedYield)
            Me.columnCropName1 = New Global.System.Data.DataColumn("CropName1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCropName1)
            Me.columnGroupID1 = New Global.System.Data.DataColumn("GroupID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID1)
            Me.columnAI1 = New Global.System.Data.DataColumn("AI1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAI1)
            Me.columnAreaDone = New Global.System.Data.DataColumn("AreaDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAreaDone)
            Me.columnProdDone = New Global.System.Data.DataColumn("ProdDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProdDone)
            Me.columnYieldDone = New Global.System.Data.DataColumn("YieldDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYieldDone)
            Me.columnPrice = New Global.System.Data.DataColumn("Price", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrice)
            Me.columnmaxperiodfrom = New Global.System.Data.DataColumn("maxperiodfrom", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaxperiodfrom)
            Me.columnCropName.MaxLength = 50
            Me.columnExpectedYield.ReadOnly = true
            Me.columnCropName1.MaxLength = 50
            Me.columnYieldDone.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewappUspQuarterlyIntegratedFillTargetIndustrialRow() As appUspQuarterlyIntegratedFillTargetIndustrialRow
            Return CType(Me.NewRow,appUspQuarterlyIntegratedFillTargetIndustrialRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New appUspQuarterlyIntegratedFillTargetIndustrialRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(appUspQuarterlyIntegratedFillTargetIndustrialRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetIndustrialRowChangedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetIndustrialRowChanged(Me, New appUspQuarterlyIntegratedFillTargetIndustrialRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetIndustrialRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetIndustrialRowChangingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetIndustrialRowChanging(Me, New appUspQuarterlyIntegratedFillTargetIndustrialRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetIndustrialRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetIndustrialRowDeletedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetIndustrialRowDeleted(Me, New appUspQuarterlyIntegratedFillTargetIndustrialRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetIndustrialRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetIndustrialRowDeletingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetIndustrialRowDeleting(Me, New appUspQuarterlyIntegratedFillTargetIndustrialRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetIndustrialRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveappUspQuarterlyIntegratedFillTargetIndustrialRow(ByVal row As appUspQuarterlyIntegratedFillTargetIndustrialRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuarterlyIntegratedDataSet = New QuarterlyIntegratedDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "appUspQuarterlyIntegratedFillTargetIndustrialDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class appUspQuarterlyIntegratedFillTargetOilDataTable
        Inherits Global.System.Data.TypedTableBase(Of appUspQuarterlyIntegratedFillTargetOilRow)
        
        Private columnCropName As Global.System.Data.DataColumn
        
        Private columnGroupID As Global.System.Data.DataColumn
        
        Private columnAI As Global.System.Data.DataColumn
        
        Private columnExpectedArea As Global.System.Data.DataColumn
        
        Private columnExpectedProd As Global.System.Data.DataColumn
        
        Private columnExpectedYield As Global.System.Data.DataColumn
        
        Private columnCropName1 As Global.System.Data.DataColumn
        
        Private columnGroupID1 As Global.System.Data.DataColumn
        
        Private columnAI1 As Global.System.Data.DataColumn
        
        Private columnAreaDone As Global.System.Data.DataColumn
        
        Private columnProdDone As Global.System.Data.DataColumn
        
        Private columnYieldDone As Global.System.Data.DataColumn
        
        Private columnPrice As Global.System.Data.DataColumn
        
        Private columnmaxperiodfrom As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "appUspQuarterlyIntegratedFillTargetOil"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CropNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCropName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedAreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedProdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedProd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedYieldColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedYield
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CropName1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCropName1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AI1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAI1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AreaDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAreaDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProdDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProdDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YieldDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYieldDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property maxperiodfromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaxperiodfrom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As appUspQuarterlyIntegratedFillTargetOilRow
            Get
                Return CType(Me.Rows(index),appUspQuarterlyIntegratedFillTargetOilRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetOilRowChanging As appUspQuarterlyIntegratedFillTargetOilRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetOilRowChanged As appUspQuarterlyIntegratedFillTargetOilRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetOilRowDeleting As appUspQuarterlyIntegratedFillTargetOilRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetOilRowDeleted As appUspQuarterlyIntegratedFillTargetOilRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddappUspQuarterlyIntegratedFillTargetOilRow(ByVal row As appUspQuarterlyIntegratedFillTargetOilRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddappUspQuarterlyIntegratedFillTargetOilRow(ByVal CropName As String, ByVal GroupID As Integer, ByVal AI As Integer, ByVal ExpectedArea As Double, ByVal ExpectedProd As Double, ByVal ExpectedYield As Double, ByVal CropName1 As String, ByVal GroupID1 As Integer, ByVal AI1 As Integer, ByVal AreaDone As Double, ByVal ProdDone As Double, ByVal YieldDone As Double, ByVal Price As Double, ByVal maxperiodfrom As Date) As appUspQuarterlyIntegratedFillTargetOilRow
            Dim rowappUspQuarterlyIntegratedFillTargetOilRow As appUspQuarterlyIntegratedFillTargetOilRow = CType(Me.NewRow,appUspQuarterlyIntegratedFillTargetOilRow)
            Dim columnValuesArray() As Object = New Object() {CropName, GroupID, AI, ExpectedArea, ExpectedProd, ExpectedYield, CropName1, GroupID1, AI1, AreaDone, ProdDone, YieldDone, Price, maxperiodfrom}
            rowappUspQuarterlyIntegratedFillTargetOilRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowappUspQuarterlyIntegratedFillTargetOilRow)
            Return rowappUspQuarterlyIntegratedFillTargetOilRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As appUspQuarterlyIntegratedFillTargetOilDataTable = CType(MyBase.Clone,appUspQuarterlyIntegratedFillTargetOilDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New appUspQuarterlyIntegratedFillTargetOilDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCropName = MyBase.Columns("CropName")
            Me.columnGroupID = MyBase.Columns("GroupID")
            Me.columnAI = MyBase.Columns("AI")
            Me.columnExpectedArea = MyBase.Columns("ExpectedArea")
            Me.columnExpectedProd = MyBase.Columns("ExpectedProd")
            Me.columnExpectedYield = MyBase.Columns("ExpectedYield")
            Me.columnCropName1 = MyBase.Columns("CropName1")
            Me.columnGroupID1 = MyBase.Columns("GroupID1")
            Me.columnAI1 = MyBase.Columns("AI1")
            Me.columnAreaDone = MyBase.Columns("AreaDone")
            Me.columnProdDone = MyBase.Columns("ProdDone")
            Me.columnYieldDone = MyBase.Columns("YieldDone")
            Me.columnPrice = MyBase.Columns("Price")
            Me.columnmaxperiodfrom = MyBase.Columns("maxperiodfrom")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCropName = New Global.System.Data.DataColumn("CropName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCropName)
            Me.columnGroupID = New Global.System.Data.DataColumn("GroupID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID)
            Me.columnAI = New Global.System.Data.DataColumn("AI", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAI)
            Me.columnExpectedArea = New Global.System.Data.DataColumn("ExpectedArea", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedArea)
            Me.columnExpectedProd = New Global.System.Data.DataColumn("ExpectedProd", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedProd)
            Me.columnExpectedYield = New Global.System.Data.DataColumn("ExpectedYield", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedYield)
            Me.columnCropName1 = New Global.System.Data.DataColumn("CropName1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCropName1)
            Me.columnGroupID1 = New Global.System.Data.DataColumn("GroupID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID1)
            Me.columnAI1 = New Global.System.Data.DataColumn("AI1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAI1)
            Me.columnAreaDone = New Global.System.Data.DataColumn("AreaDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAreaDone)
            Me.columnProdDone = New Global.System.Data.DataColumn("ProdDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProdDone)
            Me.columnYieldDone = New Global.System.Data.DataColumn("YieldDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYieldDone)
            Me.columnPrice = New Global.System.Data.DataColumn("Price", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrice)
            Me.columnmaxperiodfrom = New Global.System.Data.DataColumn("maxperiodfrom", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaxperiodfrom)
            Me.columnCropName.MaxLength = 50
            Me.columnExpectedYield.ReadOnly = true
            Me.columnCropName1.MaxLength = 50
            Me.columnYieldDone.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewappUspQuarterlyIntegratedFillTargetOilRow() As appUspQuarterlyIntegratedFillTargetOilRow
            Return CType(Me.NewRow,appUspQuarterlyIntegratedFillTargetOilRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New appUspQuarterlyIntegratedFillTargetOilRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(appUspQuarterlyIntegratedFillTargetOilRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetOilRowChangedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetOilRowChanged(Me, New appUspQuarterlyIntegratedFillTargetOilRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetOilRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetOilRowChangingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetOilRowChanging(Me, New appUspQuarterlyIntegratedFillTargetOilRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetOilRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetOilRowDeletedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetOilRowDeleted(Me, New appUspQuarterlyIntegratedFillTargetOilRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetOilRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetOilRowDeletingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetOilRowDeleting(Me, New appUspQuarterlyIntegratedFillTargetOilRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetOilRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveappUspQuarterlyIntegratedFillTargetOilRow(ByVal row As appUspQuarterlyIntegratedFillTargetOilRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuarterlyIntegratedDataSet = New QuarterlyIntegratedDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "appUspQuarterlyIntegratedFillTargetOilDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class appUspQuarterlyIntegratedFillTargetOthersDataTable
        Inherits Global.System.Data.TypedTableBase(Of appUspQuarterlyIntegratedFillTargetOthersRow)
        
        Private columnCropName As Global.System.Data.DataColumn
        
        Private columnGroupID As Global.System.Data.DataColumn
        
        Private columnAI As Global.System.Data.DataColumn
        
        Private columnExpectedArea As Global.System.Data.DataColumn
        
        Private columnExpectedProd As Global.System.Data.DataColumn
        
        Private columnExpectedYield As Global.System.Data.DataColumn
        
        Private columnCropName1 As Global.System.Data.DataColumn
        
        Private columnGroupID1 As Global.System.Data.DataColumn
        
        Private columnAI1 As Global.System.Data.DataColumn
        
        Private columnAreaDone As Global.System.Data.DataColumn
        
        Private columnProdDone As Global.System.Data.DataColumn
        
        Private columnYieldDone As Global.System.Data.DataColumn
        
        Private columnPrice As Global.System.Data.DataColumn
        
        Private columnmaxperiodfrom As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "appUspQuarterlyIntegratedFillTargetOthers"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CropNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCropName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedAreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedProdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedProd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedYieldColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedYield
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CropName1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCropName1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AI1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAI1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AreaDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAreaDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProdDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProdDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YieldDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYieldDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property maxperiodfromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaxperiodfrom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As appUspQuarterlyIntegratedFillTargetOthersRow
            Get
                Return CType(Me.Rows(index),appUspQuarterlyIntegratedFillTargetOthersRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetOthersRowChanging As appUspQuarterlyIntegratedFillTargetOthersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetOthersRowChanged As appUspQuarterlyIntegratedFillTargetOthersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetOthersRowDeleting As appUspQuarterlyIntegratedFillTargetOthersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetOthersRowDeleted As appUspQuarterlyIntegratedFillTargetOthersRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddappUspQuarterlyIntegratedFillTargetOthersRow(ByVal row As appUspQuarterlyIntegratedFillTargetOthersRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddappUspQuarterlyIntegratedFillTargetOthersRow(ByVal CropName As String, ByVal GroupID As Integer, ByVal AI As Integer, ByVal ExpectedArea As Double, ByVal ExpectedProd As Double, ByVal ExpectedYield As Double, ByVal CropName1 As String, ByVal GroupID1 As Integer, ByVal AI1 As Integer, ByVal AreaDone As Double, ByVal ProdDone As Double, ByVal YieldDone As Double, ByVal Price As Double, ByVal maxperiodfrom As Date) As appUspQuarterlyIntegratedFillTargetOthersRow
            Dim rowappUspQuarterlyIntegratedFillTargetOthersRow As appUspQuarterlyIntegratedFillTargetOthersRow = CType(Me.NewRow,appUspQuarterlyIntegratedFillTargetOthersRow)
            Dim columnValuesArray() As Object = New Object() {CropName, GroupID, AI, ExpectedArea, ExpectedProd, ExpectedYield, CropName1, GroupID1, AI1, AreaDone, ProdDone, YieldDone, Price, maxperiodfrom}
            rowappUspQuarterlyIntegratedFillTargetOthersRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowappUspQuarterlyIntegratedFillTargetOthersRow)
            Return rowappUspQuarterlyIntegratedFillTargetOthersRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As appUspQuarterlyIntegratedFillTargetOthersDataTable = CType(MyBase.Clone,appUspQuarterlyIntegratedFillTargetOthersDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New appUspQuarterlyIntegratedFillTargetOthersDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCropName = MyBase.Columns("CropName")
            Me.columnGroupID = MyBase.Columns("GroupID")
            Me.columnAI = MyBase.Columns("AI")
            Me.columnExpectedArea = MyBase.Columns("ExpectedArea")
            Me.columnExpectedProd = MyBase.Columns("ExpectedProd")
            Me.columnExpectedYield = MyBase.Columns("ExpectedYield")
            Me.columnCropName1 = MyBase.Columns("CropName1")
            Me.columnGroupID1 = MyBase.Columns("GroupID1")
            Me.columnAI1 = MyBase.Columns("AI1")
            Me.columnAreaDone = MyBase.Columns("AreaDone")
            Me.columnProdDone = MyBase.Columns("ProdDone")
            Me.columnYieldDone = MyBase.Columns("YieldDone")
            Me.columnPrice = MyBase.Columns("Price")
            Me.columnmaxperiodfrom = MyBase.Columns("maxperiodfrom")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCropName = New Global.System.Data.DataColumn("CropName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCropName)
            Me.columnGroupID = New Global.System.Data.DataColumn("GroupID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID)
            Me.columnAI = New Global.System.Data.DataColumn("AI", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAI)
            Me.columnExpectedArea = New Global.System.Data.DataColumn("ExpectedArea", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedArea)
            Me.columnExpectedProd = New Global.System.Data.DataColumn("ExpectedProd", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedProd)
            Me.columnExpectedYield = New Global.System.Data.DataColumn("ExpectedYield", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedYield)
            Me.columnCropName1 = New Global.System.Data.DataColumn("CropName1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCropName1)
            Me.columnGroupID1 = New Global.System.Data.DataColumn("GroupID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID1)
            Me.columnAI1 = New Global.System.Data.DataColumn("AI1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAI1)
            Me.columnAreaDone = New Global.System.Data.DataColumn("AreaDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAreaDone)
            Me.columnProdDone = New Global.System.Data.DataColumn("ProdDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProdDone)
            Me.columnYieldDone = New Global.System.Data.DataColumn("YieldDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYieldDone)
            Me.columnPrice = New Global.System.Data.DataColumn("Price", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrice)
            Me.columnmaxperiodfrom = New Global.System.Data.DataColumn("maxperiodfrom", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaxperiodfrom)
            Me.columnCropName.MaxLength = 50
            Me.columnExpectedYield.ReadOnly = true
            Me.columnCropName1.MaxLength = 50
            Me.columnYieldDone.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewappUspQuarterlyIntegratedFillTargetOthersRow() As appUspQuarterlyIntegratedFillTargetOthersRow
            Return CType(Me.NewRow,appUspQuarterlyIntegratedFillTargetOthersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New appUspQuarterlyIntegratedFillTargetOthersRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(appUspQuarterlyIntegratedFillTargetOthersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetOthersRowChangedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetOthersRowChanged(Me, New appUspQuarterlyIntegratedFillTargetOthersRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetOthersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetOthersRowChangingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetOthersRowChanging(Me, New appUspQuarterlyIntegratedFillTargetOthersRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetOthersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetOthersRowDeletedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetOthersRowDeleted(Me, New appUspQuarterlyIntegratedFillTargetOthersRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetOthersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetOthersRowDeletingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetOthersRowDeleting(Me, New appUspQuarterlyIntegratedFillTargetOthersRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetOthersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveappUspQuarterlyIntegratedFillTargetOthersRow(ByVal row As appUspQuarterlyIntegratedFillTargetOthersRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuarterlyIntegratedDataSet = New QuarterlyIntegratedDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "appUspQuarterlyIntegratedFillTargetOthersDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class appUspQuarterlyIntegratedFillTargetPulsesDataTable
        Inherits Global.System.Data.TypedTableBase(Of appUspQuarterlyIntegratedFillTargetPulsesRow)
        
        Private columnCropName As Global.System.Data.DataColumn
        
        Private columnGroupID As Global.System.Data.DataColumn
        
        Private columnAI As Global.System.Data.DataColumn
        
        Private columnExpectedArea As Global.System.Data.DataColumn
        
        Private columnExpectedProd As Global.System.Data.DataColumn
        
        Private columnExpectedYield As Global.System.Data.DataColumn
        
        Private columnCropName1 As Global.System.Data.DataColumn
        
        Private columnGroupID1 As Global.System.Data.DataColumn
        
        Private columnAI1 As Global.System.Data.DataColumn
        
        Private columnAreaDone As Global.System.Data.DataColumn
        
        Private columnProdDone As Global.System.Data.DataColumn
        
        Private columnYieldDone As Global.System.Data.DataColumn
        
        Private columnPrice As Global.System.Data.DataColumn
        
        Private columnmaxperiodfrom As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "appUspQuarterlyIntegratedFillTargetPulses"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CropNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCropName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedAreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedProdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedProd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedYieldColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedYield
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CropName1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCropName1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AI1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAI1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AreaDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAreaDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProdDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProdDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YieldDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYieldDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property maxperiodfromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaxperiodfrom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As appUspQuarterlyIntegratedFillTargetPulsesRow
            Get
                Return CType(Me.Rows(index),appUspQuarterlyIntegratedFillTargetPulsesRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetPulsesRowChanging As appUspQuarterlyIntegratedFillTargetPulsesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetPulsesRowChanged As appUspQuarterlyIntegratedFillTargetPulsesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetPulsesRowDeleting As appUspQuarterlyIntegratedFillTargetPulsesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetPulsesRowDeleted As appUspQuarterlyIntegratedFillTargetPulsesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddappUspQuarterlyIntegratedFillTargetPulsesRow(ByVal row As appUspQuarterlyIntegratedFillTargetPulsesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddappUspQuarterlyIntegratedFillTargetPulsesRow(ByVal CropName As String, ByVal GroupID As Integer, ByVal AI As Integer, ByVal ExpectedArea As Double, ByVal ExpectedProd As Double, ByVal ExpectedYield As Double, ByVal CropName1 As String, ByVal GroupID1 As Integer, ByVal AI1 As Integer, ByVal AreaDone As Double, ByVal ProdDone As Double, ByVal YieldDone As Double, ByVal Price As Double, ByVal maxperiodfrom As Date) As appUspQuarterlyIntegratedFillTargetPulsesRow
            Dim rowappUspQuarterlyIntegratedFillTargetPulsesRow As appUspQuarterlyIntegratedFillTargetPulsesRow = CType(Me.NewRow,appUspQuarterlyIntegratedFillTargetPulsesRow)
            Dim columnValuesArray() As Object = New Object() {CropName, GroupID, AI, ExpectedArea, ExpectedProd, ExpectedYield, CropName1, GroupID1, AI1, AreaDone, ProdDone, YieldDone, Price, maxperiodfrom}
            rowappUspQuarterlyIntegratedFillTargetPulsesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowappUspQuarterlyIntegratedFillTargetPulsesRow)
            Return rowappUspQuarterlyIntegratedFillTargetPulsesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As appUspQuarterlyIntegratedFillTargetPulsesDataTable = CType(MyBase.Clone,appUspQuarterlyIntegratedFillTargetPulsesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New appUspQuarterlyIntegratedFillTargetPulsesDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCropName = MyBase.Columns("CropName")
            Me.columnGroupID = MyBase.Columns("GroupID")
            Me.columnAI = MyBase.Columns("AI")
            Me.columnExpectedArea = MyBase.Columns("ExpectedArea")
            Me.columnExpectedProd = MyBase.Columns("ExpectedProd")
            Me.columnExpectedYield = MyBase.Columns("ExpectedYield")
            Me.columnCropName1 = MyBase.Columns("CropName1")
            Me.columnGroupID1 = MyBase.Columns("GroupID1")
            Me.columnAI1 = MyBase.Columns("AI1")
            Me.columnAreaDone = MyBase.Columns("AreaDone")
            Me.columnProdDone = MyBase.Columns("ProdDone")
            Me.columnYieldDone = MyBase.Columns("YieldDone")
            Me.columnPrice = MyBase.Columns("Price")
            Me.columnmaxperiodfrom = MyBase.Columns("maxperiodfrom")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCropName = New Global.System.Data.DataColumn("CropName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCropName)
            Me.columnGroupID = New Global.System.Data.DataColumn("GroupID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID)
            Me.columnAI = New Global.System.Data.DataColumn("AI", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAI)
            Me.columnExpectedArea = New Global.System.Data.DataColumn("ExpectedArea", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedArea)
            Me.columnExpectedProd = New Global.System.Data.DataColumn("ExpectedProd", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedProd)
            Me.columnExpectedYield = New Global.System.Data.DataColumn("ExpectedYield", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedYield)
            Me.columnCropName1 = New Global.System.Data.DataColumn("CropName1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCropName1)
            Me.columnGroupID1 = New Global.System.Data.DataColumn("GroupID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID1)
            Me.columnAI1 = New Global.System.Data.DataColumn("AI1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAI1)
            Me.columnAreaDone = New Global.System.Data.DataColumn("AreaDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAreaDone)
            Me.columnProdDone = New Global.System.Data.DataColumn("ProdDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProdDone)
            Me.columnYieldDone = New Global.System.Data.DataColumn("YieldDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYieldDone)
            Me.columnPrice = New Global.System.Data.DataColumn("Price", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrice)
            Me.columnmaxperiodfrom = New Global.System.Data.DataColumn("maxperiodfrom", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaxperiodfrom)
            Me.columnCropName.MaxLength = 50
            Me.columnExpectedYield.ReadOnly = true
            Me.columnCropName1.MaxLength = 50
            Me.columnYieldDone.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewappUspQuarterlyIntegratedFillTargetPulsesRow() As appUspQuarterlyIntegratedFillTargetPulsesRow
            Return CType(Me.NewRow,appUspQuarterlyIntegratedFillTargetPulsesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New appUspQuarterlyIntegratedFillTargetPulsesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(appUspQuarterlyIntegratedFillTargetPulsesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetPulsesRowChangedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetPulsesRowChanged(Me, New appUspQuarterlyIntegratedFillTargetPulsesRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetPulsesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetPulsesRowChangingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetPulsesRowChanging(Me, New appUspQuarterlyIntegratedFillTargetPulsesRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetPulsesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetPulsesRowDeletedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetPulsesRowDeleted(Me, New appUspQuarterlyIntegratedFillTargetPulsesRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetPulsesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetPulsesRowDeletingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetPulsesRowDeleting(Me, New appUspQuarterlyIntegratedFillTargetPulsesRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetPulsesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveappUspQuarterlyIntegratedFillTargetPulsesRow(ByVal row As appUspQuarterlyIntegratedFillTargetPulsesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuarterlyIntegratedDataSet = New QuarterlyIntegratedDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "appUspQuarterlyIntegratedFillTargetPulsesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class appUspQuarterlyIntegratedFillTargetRootsDataTable
        Inherits Global.System.Data.TypedTableBase(Of appUspQuarterlyIntegratedFillTargetRootsRow)
        
        Private columnCropName As Global.System.Data.DataColumn
        
        Private columnGroupID As Global.System.Data.DataColumn
        
        Private columnAI As Global.System.Data.DataColumn
        
        Private columnExpectedArea As Global.System.Data.DataColumn
        
        Private columnExpectedProd As Global.System.Data.DataColumn
        
        Private columnExpectedYield As Global.System.Data.DataColumn
        
        Private columnCropName1 As Global.System.Data.DataColumn
        
        Private columnGroupID1 As Global.System.Data.DataColumn
        
        Private columnAI1 As Global.System.Data.DataColumn
        
        Private columnAreaDone As Global.System.Data.DataColumn
        
        Private columnProdDone As Global.System.Data.DataColumn
        
        Private columnYieldDone As Global.System.Data.DataColumn
        
        Private columnPrice As Global.System.Data.DataColumn
        
        Private columnmaxperiodfrom As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "appUspQuarterlyIntegratedFillTargetRoots"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CropNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCropName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedAreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedProdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedProd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedYieldColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedYield
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CropName1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCropName1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AI1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAI1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AreaDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAreaDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProdDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProdDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YieldDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYieldDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property maxperiodfromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaxperiodfrom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As appUspQuarterlyIntegratedFillTargetRootsRow
            Get
                Return CType(Me.Rows(index),appUspQuarterlyIntegratedFillTargetRootsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetRootsRowChanging As appUspQuarterlyIntegratedFillTargetRootsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetRootsRowChanged As appUspQuarterlyIntegratedFillTargetRootsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetRootsRowDeleting As appUspQuarterlyIntegratedFillTargetRootsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetRootsRowDeleted As appUspQuarterlyIntegratedFillTargetRootsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddappUspQuarterlyIntegratedFillTargetRootsRow(ByVal row As appUspQuarterlyIntegratedFillTargetRootsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddappUspQuarterlyIntegratedFillTargetRootsRow(ByVal CropName As String, ByVal GroupID As Integer, ByVal AI As Integer, ByVal ExpectedArea As Double, ByVal ExpectedProd As Double, ByVal ExpectedYield As Double, ByVal CropName1 As String, ByVal GroupID1 As Integer, ByVal AI1 As Integer, ByVal AreaDone As Double, ByVal ProdDone As Double, ByVal YieldDone As Double, ByVal Price As Double, ByVal maxperiodfrom As Date) As appUspQuarterlyIntegratedFillTargetRootsRow
            Dim rowappUspQuarterlyIntegratedFillTargetRootsRow As appUspQuarterlyIntegratedFillTargetRootsRow = CType(Me.NewRow,appUspQuarterlyIntegratedFillTargetRootsRow)
            Dim columnValuesArray() As Object = New Object() {CropName, GroupID, AI, ExpectedArea, ExpectedProd, ExpectedYield, CropName1, GroupID1, AI1, AreaDone, ProdDone, YieldDone, Price, maxperiodfrom}
            rowappUspQuarterlyIntegratedFillTargetRootsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowappUspQuarterlyIntegratedFillTargetRootsRow)
            Return rowappUspQuarterlyIntegratedFillTargetRootsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As appUspQuarterlyIntegratedFillTargetRootsDataTable = CType(MyBase.Clone,appUspQuarterlyIntegratedFillTargetRootsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New appUspQuarterlyIntegratedFillTargetRootsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCropName = MyBase.Columns("CropName")
            Me.columnGroupID = MyBase.Columns("GroupID")
            Me.columnAI = MyBase.Columns("AI")
            Me.columnExpectedArea = MyBase.Columns("ExpectedArea")
            Me.columnExpectedProd = MyBase.Columns("ExpectedProd")
            Me.columnExpectedYield = MyBase.Columns("ExpectedYield")
            Me.columnCropName1 = MyBase.Columns("CropName1")
            Me.columnGroupID1 = MyBase.Columns("GroupID1")
            Me.columnAI1 = MyBase.Columns("AI1")
            Me.columnAreaDone = MyBase.Columns("AreaDone")
            Me.columnProdDone = MyBase.Columns("ProdDone")
            Me.columnYieldDone = MyBase.Columns("YieldDone")
            Me.columnPrice = MyBase.Columns("Price")
            Me.columnmaxperiodfrom = MyBase.Columns("maxperiodfrom")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCropName = New Global.System.Data.DataColumn("CropName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCropName)
            Me.columnGroupID = New Global.System.Data.DataColumn("GroupID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID)
            Me.columnAI = New Global.System.Data.DataColumn("AI", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAI)
            Me.columnExpectedArea = New Global.System.Data.DataColumn("ExpectedArea", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedArea)
            Me.columnExpectedProd = New Global.System.Data.DataColumn("ExpectedProd", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedProd)
            Me.columnExpectedYield = New Global.System.Data.DataColumn("ExpectedYield", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedYield)
            Me.columnCropName1 = New Global.System.Data.DataColumn("CropName1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCropName1)
            Me.columnGroupID1 = New Global.System.Data.DataColumn("GroupID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID1)
            Me.columnAI1 = New Global.System.Data.DataColumn("AI1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAI1)
            Me.columnAreaDone = New Global.System.Data.DataColumn("AreaDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAreaDone)
            Me.columnProdDone = New Global.System.Data.DataColumn("ProdDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProdDone)
            Me.columnYieldDone = New Global.System.Data.DataColumn("YieldDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYieldDone)
            Me.columnPrice = New Global.System.Data.DataColumn("Price", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrice)
            Me.columnmaxperiodfrom = New Global.System.Data.DataColumn("maxperiodfrom", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaxperiodfrom)
            Me.columnCropName.MaxLength = 50
            Me.columnExpectedYield.ReadOnly = true
            Me.columnCropName1.MaxLength = 50
            Me.columnYieldDone.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewappUspQuarterlyIntegratedFillTargetRootsRow() As appUspQuarterlyIntegratedFillTargetRootsRow
            Return CType(Me.NewRow,appUspQuarterlyIntegratedFillTargetRootsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New appUspQuarterlyIntegratedFillTargetRootsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(appUspQuarterlyIntegratedFillTargetRootsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetRootsRowChangedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetRootsRowChanged(Me, New appUspQuarterlyIntegratedFillTargetRootsRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetRootsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetRootsRowChangingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetRootsRowChanging(Me, New appUspQuarterlyIntegratedFillTargetRootsRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetRootsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetRootsRowDeletedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetRootsRowDeleted(Me, New appUspQuarterlyIntegratedFillTargetRootsRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetRootsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetRootsRowDeletingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetRootsRowDeleting(Me, New appUspQuarterlyIntegratedFillTargetRootsRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetRootsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveappUspQuarterlyIntegratedFillTargetRootsRow(ByVal row As appUspQuarterlyIntegratedFillTargetRootsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuarterlyIntegratedDataSet = New QuarterlyIntegratedDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "appUspQuarterlyIntegratedFillTargetRootsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class appUspQuarterlyIntegratedFillTargetSpicesDataTable
        Inherits Global.System.Data.TypedTableBase(Of appUspQuarterlyIntegratedFillTargetSpicesRow)
        
        Private columnCropName As Global.System.Data.DataColumn
        
        Private columnGroupID As Global.System.Data.DataColumn
        
        Private columnAI As Global.System.Data.DataColumn
        
        Private columnExpectedArea As Global.System.Data.DataColumn
        
        Private columnExpectedProd As Global.System.Data.DataColumn
        
        Private columnExpectedYield As Global.System.Data.DataColumn
        
        Private columnCropName1 As Global.System.Data.DataColumn
        
        Private columnGroupID1 As Global.System.Data.DataColumn
        
        Private columnAI1 As Global.System.Data.DataColumn
        
        Private columnAreaDone As Global.System.Data.DataColumn
        
        Private columnProdDone As Global.System.Data.DataColumn
        
        Private columnYieldDone As Global.System.Data.DataColumn
        
        Private columnPrice As Global.System.Data.DataColumn
        
        Private columnmaxperiodfrom As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "appUspQuarterlyIntegratedFillTargetSpices"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CropNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCropName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedAreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedProdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedProd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedYieldColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedYield
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CropName1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCropName1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AI1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAI1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AreaDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAreaDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProdDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProdDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YieldDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYieldDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property maxperiodfromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaxperiodfrom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As appUspQuarterlyIntegratedFillTargetSpicesRow
            Get
                Return CType(Me.Rows(index),appUspQuarterlyIntegratedFillTargetSpicesRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetSpicesRowChanging As appUspQuarterlyIntegratedFillTargetSpicesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetSpicesRowChanged As appUspQuarterlyIntegratedFillTargetSpicesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetSpicesRowDeleting As appUspQuarterlyIntegratedFillTargetSpicesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetSpicesRowDeleted As appUspQuarterlyIntegratedFillTargetSpicesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddappUspQuarterlyIntegratedFillTargetSpicesRow(ByVal row As appUspQuarterlyIntegratedFillTargetSpicesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddappUspQuarterlyIntegratedFillTargetSpicesRow(ByVal CropName As String, ByVal GroupID As Integer, ByVal AI As Integer, ByVal ExpectedArea As Double, ByVal ExpectedProd As Double, ByVal ExpectedYield As Double, ByVal CropName1 As String, ByVal GroupID1 As Integer, ByVal AI1 As Integer, ByVal AreaDone As Double, ByVal ProdDone As Double, ByVal YieldDone As Double, ByVal Price As Double, ByVal maxperiodfrom As Date) As appUspQuarterlyIntegratedFillTargetSpicesRow
            Dim rowappUspQuarterlyIntegratedFillTargetSpicesRow As appUspQuarterlyIntegratedFillTargetSpicesRow = CType(Me.NewRow,appUspQuarterlyIntegratedFillTargetSpicesRow)
            Dim columnValuesArray() As Object = New Object() {CropName, GroupID, AI, ExpectedArea, ExpectedProd, ExpectedYield, CropName1, GroupID1, AI1, AreaDone, ProdDone, YieldDone, Price, maxperiodfrom}
            rowappUspQuarterlyIntegratedFillTargetSpicesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowappUspQuarterlyIntegratedFillTargetSpicesRow)
            Return rowappUspQuarterlyIntegratedFillTargetSpicesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As appUspQuarterlyIntegratedFillTargetSpicesDataTable = CType(MyBase.Clone,appUspQuarterlyIntegratedFillTargetSpicesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New appUspQuarterlyIntegratedFillTargetSpicesDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCropName = MyBase.Columns("CropName")
            Me.columnGroupID = MyBase.Columns("GroupID")
            Me.columnAI = MyBase.Columns("AI")
            Me.columnExpectedArea = MyBase.Columns("ExpectedArea")
            Me.columnExpectedProd = MyBase.Columns("ExpectedProd")
            Me.columnExpectedYield = MyBase.Columns("ExpectedYield")
            Me.columnCropName1 = MyBase.Columns("CropName1")
            Me.columnGroupID1 = MyBase.Columns("GroupID1")
            Me.columnAI1 = MyBase.Columns("AI1")
            Me.columnAreaDone = MyBase.Columns("AreaDone")
            Me.columnProdDone = MyBase.Columns("ProdDone")
            Me.columnYieldDone = MyBase.Columns("YieldDone")
            Me.columnPrice = MyBase.Columns("Price")
            Me.columnmaxperiodfrom = MyBase.Columns("maxperiodfrom")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCropName = New Global.System.Data.DataColumn("CropName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCropName)
            Me.columnGroupID = New Global.System.Data.DataColumn("GroupID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID)
            Me.columnAI = New Global.System.Data.DataColumn("AI", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAI)
            Me.columnExpectedArea = New Global.System.Data.DataColumn("ExpectedArea", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedArea)
            Me.columnExpectedProd = New Global.System.Data.DataColumn("ExpectedProd", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedProd)
            Me.columnExpectedYield = New Global.System.Data.DataColumn("ExpectedYield", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedYield)
            Me.columnCropName1 = New Global.System.Data.DataColumn("CropName1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCropName1)
            Me.columnGroupID1 = New Global.System.Data.DataColumn("GroupID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID1)
            Me.columnAI1 = New Global.System.Data.DataColumn("AI1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAI1)
            Me.columnAreaDone = New Global.System.Data.DataColumn("AreaDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAreaDone)
            Me.columnProdDone = New Global.System.Data.DataColumn("ProdDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProdDone)
            Me.columnYieldDone = New Global.System.Data.DataColumn("YieldDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYieldDone)
            Me.columnPrice = New Global.System.Data.DataColumn("Price", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrice)
            Me.columnmaxperiodfrom = New Global.System.Data.DataColumn("maxperiodfrom", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaxperiodfrom)
            Me.columnCropName.MaxLength = 50
            Me.columnExpectedYield.ReadOnly = true
            Me.columnCropName1.MaxLength = 50
            Me.columnYieldDone.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewappUspQuarterlyIntegratedFillTargetSpicesRow() As appUspQuarterlyIntegratedFillTargetSpicesRow
            Return CType(Me.NewRow,appUspQuarterlyIntegratedFillTargetSpicesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New appUspQuarterlyIntegratedFillTargetSpicesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(appUspQuarterlyIntegratedFillTargetSpicesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetSpicesRowChangedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetSpicesRowChanged(Me, New appUspQuarterlyIntegratedFillTargetSpicesRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetSpicesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetSpicesRowChangingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetSpicesRowChanging(Me, New appUspQuarterlyIntegratedFillTargetSpicesRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetSpicesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetSpicesRowDeletedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetSpicesRowDeleted(Me, New appUspQuarterlyIntegratedFillTargetSpicesRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetSpicesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetSpicesRowDeletingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetSpicesRowDeleting(Me, New appUspQuarterlyIntegratedFillTargetSpicesRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetSpicesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveappUspQuarterlyIntegratedFillTargetSpicesRow(ByVal row As appUspQuarterlyIntegratedFillTargetSpicesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuarterlyIntegratedDataSet = New QuarterlyIntegratedDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "appUspQuarterlyIntegratedFillTargetSpicesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class appUspQuarterlyIntegratedFillTargetVegetablesDataTable
        Inherits Global.System.Data.TypedTableBase(Of appUspQuarterlyIntegratedFillTargetVegetablesRow)
        
        Private columnCropName As Global.System.Data.DataColumn
        
        Private columnGroupID As Global.System.Data.DataColumn
        
        Private columnAI As Global.System.Data.DataColumn
        
        Private columnExpectedArea As Global.System.Data.DataColumn
        
        Private columnExpectedProd As Global.System.Data.DataColumn
        
        Private columnExpectedYield As Global.System.Data.DataColumn
        
        Private columnCropName1 As Global.System.Data.DataColumn
        
        Private columnGroupID1 As Global.System.Data.DataColumn
        
        Private columnAI1 As Global.System.Data.DataColumn
        
        Private columnAreaDone As Global.System.Data.DataColumn
        
        Private columnProdDone As Global.System.Data.DataColumn
        
        Private columnYieldDone As Global.System.Data.DataColumn
        
        Private columnPrice As Global.System.Data.DataColumn
        
        Private columnmaxperiodfrom As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "appUspQuarterlyIntegratedFillTargetVegetables"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CropNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCropName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedAreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedProdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedProd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExpectedYieldColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpectedYield
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CropName1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCropName1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AI1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAI1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AreaDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAreaDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProdDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProdDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YieldDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYieldDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property maxperiodfromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaxperiodfrom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As appUspQuarterlyIntegratedFillTargetVegetablesRow
            Get
                Return CType(Me.Rows(index),appUspQuarterlyIntegratedFillTargetVegetablesRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetVegetablesRowChanging As appUspQuarterlyIntegratedFillTargetVegetablesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetVegetablesRowChanged As appUspQuarterlyIntegratedFillTargetVegetablesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetVegetablesRowDeleting As appUspQuarterlyIntegratedFillTargetVegetablesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspQuarterlyIntegratedFillTargetVegetablesRowDeleted As appUspQuarterlyIntegratedFillTargetVegetablesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddappUspQuarterlyIntegratedFillTargetVegetablesRow(ByVal row As appUspQuarterlyIntegratedFillTargetVegetablesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddappUspQuarterlyIntegratedFillTargetVegetablesRow(ByVal CropName As String, ByVal GroupID As Integer, ByVal AI As Integer, ByVal ExpectedArea As Double, ByVal ExpectedProd As Double, ByVal ExpectedYield As Double, ByVal CropName1 As String, ByVal GroupID1 As Integer, ByVal AI1 As Integer, ByVal AreaDone As Double, ByVal ProdDone As Double, ByVal YieldDone As Double, ByVal Price As Double, ByVal maxperiodfrom As Date) As appUspQuarterlyIntegratedFillTargetVegetablesRow
            Dim rowappUspQuarterlyIntegratedFillTargetVegetablesRow As appUspQuarterlyIntegratedFillTargetVegetablesRow = CType(Me.NewRow,appUspQuarterlyIntegratedFillTargetVegetablesRow)
            Dim columnValuesArray() As Object = New Object() {CropName, GroupID, AI, ExpectedArea, ExpectedProd, ExpectedYield, CropName1, GroupID1, AI1, AreaDone, ProdDone, YieldDone, Price, maxperiodfrom}
            rowappUspQuarterlyIntegratedFillTargetVegetablesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowappUspQuarterlyIntegratedFillTargetVegetablesRow)
            Return rowappUspQuarterlyIntegratedFillTargetVegetablesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As appUspQuarterlyIntegratedFillTargetVegetablesDataTable = CType(MyBase.Clone,appUspQuarterlyIntegratedFillTargetVegetablesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New appUspQuarterlyIntegratedFillTargetVegetablesDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCropName = MyBase.Columns("CropName")
            Me.columnGroupID = MyBase.Columns("GroupID")
            Me.columnAI = MyBase.Columns("AI")
            Me.columnExpectedArea = MyBase.Columns("ExpectedArea")
            Me.columnExpectedProd = MyBase.Columns("ExpectedProd")
            Me.columnExpectedYield = MyBase.Columns("ExpectedYield")
            Me.columnCropName1 = MyBase.Columns("CropName1")
            Me.columnGroupID1 = MyBase.Columns("GroupID1")
            Me.columnAI1 = MyBase.Columns("AI1")
            Me.columnAreaDone = MyBase.Columns("AreaDone")
            Me.columnProdDone = MyBase.Columns("ProdDone")
            Me.columnYieldDone = MyBase.Columns("YieldDone")
            Me.columnPrice = MyBase.Columns("Price")
            Me.columnmaxperiodfrom = MyBase.Columns("maxperiodfrom")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCropName = New Global.System.Data.DataColumn("CropName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCropName)
            Me.columnGroupID = New Global.System.Data.DataColumn("GroupID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID)
            Me.columnAI = New Global.System.Data.DataColumn("AI", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAI)
            Me.columnExpectedArea = New Global.System.Data.DataColumn("ExpectedArea", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedArea)
            Me.columnExpectedProd = New Global.System.Data.DataColumn("ExpectedProd", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedProd)
            Me.columnExpectedYield = New Global.System.Data.DataColumn("ExpectedYield", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpectedYield)
            Me.columnCropName1 = New Global.System.Data.DataColumn("CropName1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCropName1)
            Me.columnGroupID1 = New Global.System.Data.DataColumn("GroupID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID1)
            Me.columnAI1 = New Global.System.Data.DataColumn("AI1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAI1)
            Me.columnAreaDone = New Global.System.Data.DataColumn("AreaDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAreaDone)
            Me.columnProdDone = New Global.System.Data.DataColumn("ProdDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProdDone)
            Me.columnYieldDone = New Global.System.Data.DataColumn("YieldDone", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYieldDone)
            Me.columnPrice = New Global.System.Data.DataColumn("Price", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrice)
            Me.columnmaxperiodfrom = New Global.System.Data.DataColumn("maxperiodfrom", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaxperiodfrom)
            Me.columnCropName.MaxLength = 50
            Me.columnExpectedYield.ReadOnly = true
            Me.columnCropName1.MaxLength = 50
            Me.columnYieldDone.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewappUspQuarterlyIntegratedFillTargetVegetablesRow() As appUspQuarterlyIntegratedFillTargetVegetablesRow
            Return CType(Me.NewRow,appUspQuarterlyIntegratedFillTargetVegetablesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New appUspQuarterlyIntegratedFillTargetVegetablesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(appUspQuarterlyIntegratedFillTargetVegetablesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetVegetablesRowChangedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetVegetablesRowChanged(Me, New appUspQuarterlyIntegratedFillTargetVegetablesRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetVegetablesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetVegetablesRowChangingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetVegetablesRowChanging(Me, New appUspQuarterlyIntegratedFillTargetVegetablesRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetVegetablesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetVegetablesRowDeletedEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetVegetablesRowDeleted(Me, New appUspQuarterlyIntegratedFillTargetVegetablesRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetVegetablesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.appUspQuarterlyIntegratedFillTargetVegetablesRowDeletingEvent) Is Nothing) Then
                RaiseEvent appUspQuarterlyIntegratedFillTargetVegetablesRowDeleting(Me, New appUspQuarterlyIntegratedFillTargetVegetablesRowChangeEvent(CType(e.Row,appUspQuarterlyIntegratedFillTargetVegetablesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveappUspQuarterlyIntegratedFillTargetVegetablesRow(ByVal row As appUspQuarterlyIntegratedFillTargetVegetablesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuarterlyIntegratedDataSet = New QuarterlyIntegratedDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "appUspQuarterlyIntegratedFillTargetVegetablesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class rptUspQuarterlyLivestockSlaughteredDataTable
        Inherits Global.System.Data.TypedTableBase(Of rptUspQuarterlyLivestockSlaughteredRow)
        
        Private columnListID As Global.System.Data.DataColumn
        
        Private columnListItemSw As Global.System.Data.DataColumn
        
        Private columnCNThisQtr As Global.System.Data.DataColumn
        
        Private columnCN As Global.System.Data.DataColumn
        
        Private columnCNTotalCarcassWeightThisQtr As Global.System.Data.DataColumn
        
        Private columnCNTotalCarcassWeight As Global.System.Data.DataColumn
        
        Private columnai As Global.System.Data.DataColumn
        
        Private columnai1 As Global.System.Data.DataColumn
        
        Private columnExpr1 As Global.System.Data.DataColumn
        
        Private columnExpr2 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "rptUspQuarterlyLivestockSlaughtered"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListItemSwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListItemSw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CNThisQtrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCNThisQtr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CNTotalCarcassWeightThisQtrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCNTotalCarcassWeightThisQtr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CNTotalCarcassWeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCNTotalCarcassWeight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property aiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnai
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ai1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnai1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Expr1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Expr2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpr2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As rptUspQuarterlyLivestockSlaughteredRow
            Get
                Return CType(Me.Rows(index),rptUspQuarterlyLivestockSlaughteredRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event rptUspQuarterlyLivestockSlaughteredRowChanging As rptUspQuarterlyLivestockSlaughteredRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event rptUspQuarterlyLivestockSlaughteredRowChanged As rptUspQuarterlyLivestockSlaughteredRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event rptUspQuarterlyLivestockSlaughteredRowDeleting As rptUspQuarterlyLivestockSlaughteredRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event rptUspQuarterlyLivestockSlaughteredRowDeleted As rptUspQuarterlyLivestockSlaughteredRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddrptUspQuarterlyLivestockSlaughteredRow(ByVal row As rptUspQuarterlyLivestockSlaughteredRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddrptUspQuarterlyLivestockSlaughteredRow(ByVal ListID As System.Guid, ByVal ListItemSw As String, ByVal CNThisQtr As Integer, ByVal CN As Integer, ByVal CNTotalCarcassWeightThisQtr As Double, ByVal CNTotalCarcassWeight As Double, ByVal ai As Integer, ByVal ai1 As Integer, ByVal Expr1 As Integer, ByVal Expr2 As Integer) As rptUspQuarterlyLivestockSlaughteredRow
            Dim rowrptUspQuarterlyLivestockSlaughteredRow As rptUspQuarterlyLivestockSlaughteredRow = CType(Me.NewRow,rptUspQuarterlyLivestockSlaughteredRow)
            Dim columnValuesArray() As Object = New Object() {ListID, ListItemSw, CNThisQtr, CN, CNTotalCarcassWeightThisQtr, CNTotalCarcassWeight, ai, ai1, Expr1, Expr2}
            rowrptUspQuarterlyLivestockSlaughteredRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowrptUspQuarterlyLivestockSlaughteredRow)
            Return rowrptUspQuarterlyLivestockSlaughteredRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByListID(ByVal ListID As System.Guid) As rptUspQuarterlyLivestockSlaughteredRow
            Return CType(Me.Rows.Find(New Object() {ListID}),rptUspQuarterlyLivestockSlaughteredRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As rptUspQuarterlyLivestockSlaughteredDataTable = CType(MyBase.Clone,rptUspQuarterlyLivestockSlaughteredDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New rptUspQuarterlyLivestockSlaughteredDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnListID = MyBase.Columns("ListID")
            Me.columnListItemSw = MyBase.Columns("ListItemSw")
            Me.columnCNThisQtr = MyBase.Columns("CNThisQtr")
            Me.columnCN = MyBase.Columns("CN")
            Me.columnCNTotalCarcassWeightThisQtr = MyBase.Columns("CNTotalCarcassWeightThisQtr")
            Me.columnCNTotalCarcassWeight = MyBase.Columns("CNTotalCarcassWeight")
            Me.columnai = MyBase.Columns("ai")
            Me.columnai1 = MyBase.Columns("ai1")
            Me.columnExpr1 = MyBase.Columns("Expr1")
            Me.columnExpr2 = MyBase.Columns("Expr2")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnListID = New Global.System.Data.DataColumn("ListID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListID)
            Me.columnListItemSw = New Global.System.Data.DataColumn("ListItemSw", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListItemSw)
            Me.columnCNThisQtr = New Global.System.Data.DataColumn("CNThisQtr", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCNThisQtr)
            Me.columnCN = New Global.System.Data.DataColumn("CN", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCN)
            Me.columnCNTotalCarcassWeightThisQtr = New Global.System.Data.DataColumn("CNTotalCarcassWeightThisQtr", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCNTotalCarcassWeightThisQtr)
            Me.columnCNTotalCarcassWeight = New Global.System.Data.DataColumn("CNTotalCarcassWeight", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCNTotalCarcassWeight)
            Me.columnai = New Global.System.Data.DataColumn("ai", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnai)
            Me.columnai1 = New Global.System.Data.DataColumn("ai1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnai1)
            Me.columnExpr1 = New Global.System.Data.DataColumn("Expr1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr1)
            Me.columnExpr2 = New Global.System.Data.DataColumn("Expr2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr2)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnListID}, true))
            Me.columnListID.AllowDBNull = false
            Me.columnListID.Unique = true
            Me.columnListItemSw.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewrptUspQuarterlyLivestockSlaughteredRow() As rptUspQuarterlyLivestockSlaughteredRow
            Return CType(Me.NewRow,rptUspQuarterlyLivestockSlaughteredRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New rptUspQuarterlyLivestockSlaughteredRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(rptUspQuarterlyLivestockSlaughteredRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.rptUspQuarterlyLivestockSlaughteredRowChangedEvent) Is Nothing) Then
                RaiseEvent rptUspQuarterlyLivestockSlaughteredRowChanged(Me, New rptUspQuarterlyLivestockSlaughteredRowChangeEvent(CType(e.Row,rptUspQuarterlyLivestockSlaughteredRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.rptUspQuarterlyLivestockSlaughteredRowChangingEvent) Is Nothing) Then
                RaiseEvent rptUspQuarterlyLivestockSlaughteredRowChanging(Me, New rptUspQuarterlyLivestockSlaughteredRowChangeEvent(CType(e.Row,rptUspQuarterlyLivestockSlaughteredRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.rptUspQuarterlyLivestockSlaughteredRowDeletedEvent) Is Nothing) Then
                RaiseEvent rptUspQuarterlyLivestockSlaughteredRowDeleted(Me, New rptUspQuarterlyLivestockSlaughteredRowChangeEvent(CType(e.Row,rptUspQuarterlyLivestockSlaughteredRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.rptUspQuarterlyLivestockSlaughteredRowDeletingEvent) Is Nothing) Then
                RaiseEvent rptUspQuarterlyLivestockSlaughteredRowDeleting(Me, New rptUspQuarterlyLivestockSlaughteredRowChangeEvent(CType(e.Row,rptUspQuarterlyLivestockSlaughteredRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoverptUspQuarterlyLivestockSlaughteredRow(ByVal row As rptUspQuarterlyLivestockSlaughteredRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As QuarterlyIntegratedDataSet = New QuarterlyIntegratedDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "rptUspQuarterlyLivestockSlaughteredDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class appUspQuarterlyIntegratedFillPlantHealthRow
        Inherits Global.System.Data.DataRow
        
        Private tableappUspQuarterlyIntegratedFillPlantHealth As appUspQuarterlyIntegratedFillPlantHealthDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableappUspQuarterlyIntegratedFillPlantHealth = CType(Me.Table,appUspQuarterlyIntegratedFillPlantHealthDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ChemicalControlID() As System.Guid
            Get
                Return CType(Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.ChemicalControlIDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.ChemicalControlIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PestID() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.PestIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PestID' in table 'appUspQuarterlyIntegratedFillPlantHealth'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.PestIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CropID() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.CropIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CropID' in table 'appUspQuarterlyIntegratedFillPlantHealth'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.CropIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Severity() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.SeverityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Severity' in table 'appUspQuarterlyIntegratedFillPlantHealt"& _ 
                            "h' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.SeverityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AffectedArea() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.AffectedAreaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AffectedArea' in table 'appUspQuarterlyIntegratedFillPlantH"& _ 
                            "ealth' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.AffectedAreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfVillageAffected() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.NumberOfVillageAffectedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfVillageAffected' in table 'appUspQuarterlyIntegrate"& _ 
                            "dFillPlantHealth' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.NumberOfVillageAffectedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PestcideApplied() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.PestcideAppliedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PestcideApplied' in table 'appUspQuarterlyIntegratedFillPla"& _ 
                            "ntHealth' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.PestcideAppliedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AmountOfPestcideApplied() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.AmountOfPestcideAppliedColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AmountOfPestcideApplied' in table 'appUspQuarterlyIntegrate"& _ 
                            "dFillPlantHealth' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.AmountOfPestcideAppliedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Unit() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.UnitColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Unit' in table 'appUspQuarterlyIntegratedFillPlantHealth' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.UnitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfVillagesServed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.NumberOfVillagesServedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfVillagesServed' in table 'appUspQuarterlyIntegrated"& _ 
                            "FillPlantHealth' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.NumberOfVillagesServedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfHouseHoldServed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.NumberOfHouseHoldServedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfHouseHoldServed' in table 'appUspQuarterlyIntegrate"& _ 
                            "dFillPlantHealth' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.NumberOfHouseHoldServedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AreaRescued() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.AreaRescuedColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AreaRescued' in table 'appUspQuarterlyIntegratedFillPlantHe"& _ 
                            "alth' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.AreaRescuedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'appUspQuarterlyIntegratedFillPlantHealth"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IsEstimated() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.IsEstimatedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsEstimated' in table 'appUspQuarterlyIntegratedFillPlantHe"& _ 
                            "alth' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.IsEstimatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MonthlyRecordID() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.MonthlyRecordIDColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MonthlyRecordID' in table 'appUspQuarterlyIntegratedFillPla"& _ 
                            "ntHealth' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.MonthlyRecordIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FormSerialID() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.FormSerialIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FormSerialID' in table 'appUspQuarterlyIntegratedFillPlantH"& _ 
                            "ealth' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.FormSerialIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPestIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillPlantHealth.PestIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPestIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.PestIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCropIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillPlantHealth.CropIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCropIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.CropIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSeverityNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillPlantHealth.SeverityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSeverityNull()
            Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.SeverityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAffectedAreaNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillPlantHealth.AffectedAreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAffectedAreaNull()
            Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.AffectedAreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfVillageAffectedNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillPlantHealth.NumberOfVillageAffectedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfVillageAffectedNull()
            Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.NumberOfVillageAffectedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPestcideAppliedNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillPlantHealth.PestcideAppliedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPestcideAppliedNull()
            Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.PestcideAppliedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmountOfPestcideAppliedNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillPlantHealth.AmountOfPestcideAppliedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmountOfPestcideAppliedNull()
            Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.AmountOfPestcideAppliedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUnitNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillPlantHealth.UnitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUnitNull()
            Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.UnitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfVillagesServedNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillPlantHealth.NumberOfVillagesServedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfVillagesServedNull()
            Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.NumberOfVillagesServedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfHouseHoldServedNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillPlantHealth.NumberOfHouseHoldServedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfHouseHoldServedNull()
            Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.NumberOfHouseHoldServedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAreaRescuedNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillPlantHealth.AreaRescuedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAreaRescuedNull()
            Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.AreaRescuedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillPlantHealth.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIsEstimatedNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillPlantHealth.IsEstimatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIsEstimatedNull()
            Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.IsEstimatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMonthlyRecordIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillPlantHealth.MonthlyRecordIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMonthlyRecordIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.MonthlyRecordIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFormSerialIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillPlantHealth.FormSerialIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFormSerialIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillPlantHealth.FormSerialIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class appUspQuarterlyIntegratedFillLivestockMovementRow
        Inherits Global.System.Data.DataRow
        
        Private tableappUspQuarterlyIntegratedFillLivestockMovement As appUspQuarterlyIntegratedFillLivestockMovementDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableappUspQuarterlyIntegratedFillLivestockMovement = CType(Me.Table,appUspQuarterlyIntegratedFillLivestockMovementDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListID() As System.Guid
            Get
                Return CType(Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.ListIDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.ListIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListItemSw() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.ListItemSwColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ListItemSw' in table 'appUspQuarterlyIntegratedFillLivestoc"& _ 
                            "kMovement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.ListItemSwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListItemEn() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.ListItemEnColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ListItemEn' in table 'appUspQuarterlyIntegratedFillLivestoc"& _ 
                            "kMovement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.ListItemEnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListItemStatus() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.ListItemStatusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ListItemStatus' in table 'appUspQuarterlyIntegratedFillLive"& _ 
                            "stockMovement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.ListItemStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LivestockMovementID() As System.Guid
            Get
                Return CType(Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.LivestockMovementIDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.LivestockMovementIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LivestockID() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.LivestockIDColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LivestockID' in table 'appUspQuarterlyIntegratedFillLivesto"& _ 
                            "ckMovement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.LivestockIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AnimalsIntoNonTrade() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsIntoNonTradeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnimalsIntoNonTrade' in table 'appUspQuarterlyIntegratedFil"& _ 
                            "lLivestockMovement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsIntoNonTradeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AnimalsIntoTradeFromLGA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsIntoTradeFromLGAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnimalsIntoTradeFromLGA' in table 'appUspQuarterlyIntegrate"& _ 
                            "dFillLivestockMovement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsIntoTradeFromLGAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AnimalsIntoTradeFromCountries() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsIntoTradeFromCountriesColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnimalsIntoTradeFromCountries' in table 'appUspQuarterlyInt"& _ 
                            "egratedFillLivestockMovement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsIntoTradeFromCountriesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AnimalsToNonTrade() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsToNonTradeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnimalsToNonTrade' in table 'appUspQuarterlyIntegratedFillL"& _ 
                            "ivestockMovement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsToNonTradeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AnimalsToTradeLGA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsToTradeLGAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnimalsToTradeLGA' in table 'appUspQuarterlyIntegratedFillL"& _ 
                            "ivestockMovement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsToTradeLGAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AnimalsToTradeCountries() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsToTradeCountriesColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnimalsToTradeCountries' in table 'appUspQuarterlyIntegrate"& _ 
                            "dFillLivestockMovement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsToTradeCountriesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AnimalsTransNonTrade() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsTransNonTradeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnimalsTransNonTrade' in table 'appUspQuarterlyIntegratedFi"& _ 
                            "llLivestockMovement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsTransNonTradeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AnimalsTransTrade() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsTransTradeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnimalsTransTrade' in table 'appUspQuarterlyIntegratedFillL"& _ 
                            "ivestockMovement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsTransTradeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QuarterlyRecordID() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.QuarterlyRecordIDColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QuarterlyRecordID' in table 'appUspQuarterlyIntegratedFillL"& _ 
                            "ivestockMovement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.QuarterlyRecordIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsListItemSwNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.ListItemSwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetListItemSwNull()
            Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.ListItemSwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsListItemEnNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.ListItemEnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetListItemEnNull()
            Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.ListItemEnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsListItemStatusNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.ListItemStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetListItemStatusNull()
            Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.ListItemStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLivestockIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.LivestockIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLivestockIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.LivestockIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAnimalsIntoNonTradeNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsIntoNonTradeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAnimalsIntoNonTradeNull()
            Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsIntoNonTradeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAnimalsIntoTradeFromLGANull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsIntoTradeFromLGAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAnimalsIntoTradeFromLGANull()
            Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsIntoTradeFromLGAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAnimalsIntoTradeFromCountriesNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsIntoTradeFromCountriesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAnimalsIntoTradeFromCountriesNull()
            Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsIntoTradeFromCountriesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAnimalsToNonTradeNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsToNonTradeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAnimalsToNonTradeNull()
            Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsToNonTradeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAnimalsToTradeLGANull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsToTradeLGAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAnimalsToTradeLGANull()
            Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsToTradeLGAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAnimalsToTradeCountriesNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsToTradeCountriesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAnimalsToTradeCountriesNull()
            Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsToTradeCountriesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAnimalsTransNonTradeNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsTransNonTradeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAnimalsTransNonTradeNull()
            Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsTransNonTradeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAnimalsTransTradeNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsTransTradeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAnimalsTransTradeNull()
            Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.AnimalsTransTradeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuarterlyRecordIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.QuarterlyRecordIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuarterlyRecordIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillLivestockMovement.QuarterlyRecordIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class appUspQuarterlyIntegratedFillProductsMovementRow
        Inherits Global.System.Data.DataRow
        
        Private tableappUspQuarterlyIntegratedFillProductsMovement As appUspQuarterlyIntegratedFillProductsMovementDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableappUspQuarterlyIntegratedFillProductsMovement = CType(Me.Table,appUspQuarterlyIntegratedFillProductsMovementDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListID() As System.Guid
            Get
                Return CType(Me(Me.tableappUspQuarterlyIntegratedFillProductsMovement.ListIDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillProductsMovement.ListIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListItemEn() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillProductsMovement.ListItemEnColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ListItemEn' in table 'appUspQuarterlyIntegratedFillProducts"& _ 
                            "Movement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillProductsMovement.ListItemEnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProductMovementID() As System.Guid
            Get
                Return CType(Me(Me.tableappUspQuarterlyIntegratedFillProductsMovement.ProductMovementIDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillProductsMovement.ProductMovementIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProductID() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillProductsMovement.ProductIDColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProductID' in table 'appUspQuarterlyIntegratedFillProductsM"& _ 
                            "ovement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillProductsMovement.ProductIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SoldWithinDistricts() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillProductsMovement.SoldWithinDistrictsColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SoldWithinDistricts' in table 'appUspQuarterlyIntegratedFil"& _ 
                            "lProductsMovement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillProductsMovement.SoldWithinDistrictsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SoldOtherDistricts() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillProductsMovement.SoldOtherDistrictsColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SoldOtherDistricts' in table 'appUspQuarterlyIntegratedFill"& _ 
                            "ProductsMovement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillProductsMovement.SoldOtherDistrictsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SoldOtherCountries() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillProductsMovement.SoldOtherCountriesColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SoldOtherCountries' in table 'appUspQuarterlyIntegratedFill"& _ 
                            "ProductsMovement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillProductsMovement.SoldOtherCountriesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QuarterlyRecordID() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillProductsMovement.QuarterlyRecordIDColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QuarterlyRecordID' in table 'appUspQuarterlyIntegratedFillP"& _ 
                            "roductsMovement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillProductsMovement.QuarterlyRecordIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsListItemEnNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillProductsMovement.ListItemEnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetListItemEnNull()
            Me(Me.tableappUspQuarterlyIntegratedFillProductsMovement.ListItemEnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProductIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillProductsMovement.ProductIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProductIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillProductsMovement.ProductIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSoldWithinDistrictsNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillProductsMovement.SoldWithinDistrictsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSoldWithinDistrictsNull()
            Me(Me.tableappUspQuarterlyIntegratedFillProductsMovement.SoldWithinDistrictsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSoldOtherDistrictsNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillProductsMovement.SoldOtherDistrictsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSoldOtherDistrictsNull()
            Me(Me.tableappUspQuarterlyIntegratedFillProductsMovement.SoldOtherDistrictsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSoldOtherCountriesNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillProductsMovement.SoldOtherCountriesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSoldOtherCountriesNull()
            Me(Me.tableappUspQuarterlyIntegratedFillProductsMovement.SoldOtherCountriesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuarterlyRecordIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillProductsMovement.QuarterlyRecordIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuarterlyRecordIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillProductsMovement.QuarterlyRecordIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class appUspQuarterlyIntegratedFillMeatInspectionRow
        Inherits Global.System.Data.DataRow
        
        Private tableappUspQuarterlyIntegratedFillMeatInspection As appUspQuarterlyIntegratedFillMeatInspectionDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableappUspQuarterlyIntegratedFillMeatInspection = CType(Me.Table,appUspQuarterlyIntegratedFillMeatInspectionDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeatInspectionID() As System.Guid
            Get
                Return CType(Me(Me.tableappUspQuarterlyIntegratedFillMeatInspection.MeatInspectionIDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillMeatInspection.MeatInspectionIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NameofPlaceForSlaughter() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillMeatInspection.NameofPlaceForSlaughterColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NameofPlaceForSlaughter' in table 'appUspQuarterlyIntegrate"& _ 
                            "dFillMeatInspection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillMeatInspection.NameofPlaceForSlaughterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TypeOfAnimal() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillMeatInspection.TypeOfAnimalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TypeOfAnimal' in table 'appUspQuarterlyIntegratedFillMeatIn"& _ 
                            "spection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillMeatInspection.TypeOfAnimalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfAnimalsAffected() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillMeatInspection.NumberOfAnimalsAffectedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfAnimalsAffected' in table 'appUspQuarterlyIntegrate"& _ 
                            "dFillMeatInspection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillMeatInspection.NumberOfAnimalsAffectedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReasonsForCondemnations() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillMeatInspection.ReasonsForCondemnationsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReasonsForCondemnations' in table 'appUspQuarterlyIntegrate"& _ 
                            "dFillMeatInspection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillMeatInspection.ReasonsForCondemnationsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfCases() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillMeatInspection.NumberOfCasesColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfCases' in table 'appUspQuarterlyIntegratedFillMeatI"& _ 
                            "nspection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillMeatInspection.NumberOfCasesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IsEstimated() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillMeatInspection.IsEstimatedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsEstimated' in table 'appUspQuarterlyIntegratedFillMeatIns"& _ 
                            "pection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillMeatInspection.IsEstimatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MonthlyRecordID() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillMeatInspection.MonthlyRecordIDColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MonthlyRecordID' in table 'appUspQuarterlyIntegratedFillMea"& _ 
                            "tInspection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillMeatInspection.MonthlyRecordIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FormSerialID() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillMeatInspection.FormSerialIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FormSerialID' in table 'appUspQuarterlyIntegratedFillMeatIn"& _ 
                            "spection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillMeatInspection.FormSerialIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNameofPlaceForSlaughterNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillMeatInspection.NameofPlaceForSlaughterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNameofPlaceForSlaughterNull()
            Me(Me.tableappUspQuarterlyIntegratedFillMeatInspection.NameofPlaceForSlaughterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTypeOfAnimalNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillMeatInspection.TypeOfAnimalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTypeOfAnimalNull()
            Me(Me.tableappUspQuarterlyIntegratedFillMeatInspection.TypeOfAnimalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfAnimalsAffectedNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillMeatInspection.NumberOfAnimalsAffectedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfAnimalsAffectedNull()
            Me(Me.tableappUspQuarterlyIntegratedFillMeatInspection.NumberOfAnimalsAffectedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReasonsForCondemnationsNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillMeatInspection.ReasonsForCondemnationsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReasonsForCondemnationsNull()
            Me(Me.tableappUspQuarterlyIntegratedFillMeatInspection.ReasonsForCondemnationsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfCasesNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillMeatInspection.NumberOfCasesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfCasesNull()
            Me(Me.tableappUspQuarterlyIntegratedFillMeatInspection.NumberOfCasesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIsEstimatedNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillMeatInspection.IsEstimatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIsEstimatedNull()
            Me(Me.tableappUspQuarterlyIntegratedFillMeatInspection.IsEstimatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMonthlyRecordIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillMeatInspection.MonthlyRecordIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMonthlyRecordIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillMeatInspection.MonthlyRecordIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFormSerialIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillMeatInspection.FormSerialIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFormSerialIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillMeatInspection.FormSerialIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class appUspQuarterlyIntegratedFillAcaricidesRow
        Inherits Global.System.Data.DataRow
        
        Private tableappUspQuarterlyIntegratedFillAcaricides As appUspQuarterlyIntegratedFillAcaricidesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableappUspQuarterlyIntegratedFillAcaricides = CType(Me.Table,appUspQuarterlyIntegratedFillAcaricidesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListID() As System.Guid
            Get
                Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.ListIDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.ListIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListItemSw() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.ListItemSwColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ListItemSw' in table 'appUspQuarterlyIntegratedFillAcaricid"& _ 
                            "es' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.ListItemSwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListItemEn() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.ListItemEnColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ListItemEn' in table 'appUspQuarterlyIntegratedFillAcaricid"& _ 
                            "es' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.ListItemEnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListItemType() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.ListItemTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ListItemType' in table 'appUspQuarterlyIntegratedFillAcaric"& _ 
                            "ides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.ListItemTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListItemStatus() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.ListItemStatusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ListItemStatus' in table 'appUspQuarterlyIntegratedFillAcar"& _ 
                            "icides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.ListItemStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AnimalsFeedsID() As System.Guid
            Get
                Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.AnimalsFeedsIDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.AnimalsFeedsIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FeedsID() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.FeedsIDColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FeedsID' in table 'appUspQuarterlyIntegratedFillAcaricides'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.FeedsIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GenericName() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.GenericNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GenericName' in table 'appUspQuarterlyIntegratedFillAcarici"& _ 
                            "des' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.GenericNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TradeName() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.TradeNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TradeName' in table 'appUspQuarterlyIntegratedFillAcaricide"& _ 
                            "s' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.TradeNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.SourceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Source' in table 'appUspQuarterlyIntegratedFillAcaricides' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.SourceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeasurementUnit() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.MeasurementUnitColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeasurementUnit' in table 'appUspQuarterlyIntegratedFillAca"& _ 
                            "ricides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.MeasurementUnitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QuarterlyRequirement() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.QuarterlyRequirementColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QuarterlyRequirement' in table 'appUspQuarterlyIntegratedFi"& _ 
                            "llAcaricides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.QuarterlyRequirementColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QuarterlyAmountUsed() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.QuarterlyAmountUsedColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QuarterlyAmountUsed' in table 'appUspQuarterlyIntegratedFil"& _ 
                            "lAcaricides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.QuarterlyAmountUsedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LowPrice() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.LowPriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LowPrice' in table 'appUspQuarterlyIntegratedFillAcaricides"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.LowPriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HighPrice() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.HighPriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HighPrice' in table 'appUspQuarterlyIntegratedFillAcaricide"& _ 
                            "s' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.HighPriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'appUspQuarterlyIntegratedFillAcaricides'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QuarterlyRecordID() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.QuarterlyRecordIDColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QuarterlyRecordID' in table 'appUspQuarterlyIntegratedFillA"& _ 
                            "caricides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.QuarterlyRecordIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsListItemSwNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAcaricides.ListItemSwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetListItemSwNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.ListItemSwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsListItemEnNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAcaricides.ListItemEnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetListItemEnNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.ListItemEnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsListItemTypeNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAcaricides.ListItemTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetListItemTypeNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.ListItemTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsListItemStatusNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAcaricides.ListItemStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetListItemStatusNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.ListItemStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFeedsIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAcaricides.FeedsIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFeedsIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.FeedsIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGenericNameNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAcaricides.GenericNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGenericNameNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.GenericNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTradeNameNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAcaricides.TradeNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTradeNameNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.TradeNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSourceNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAcaricides.SourceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSourceNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.SourceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMeasurementUnitNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAcaricides.MeasurementUnitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMeasurementUnitNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.MeasurementUnitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuarterlyRequirementNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAcaricides.QuarterlyRequirementColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuarterlyRequirementNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.QuarterlyRequirementColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuarterlyAmountUsedNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAcaricides.QuarterlyAmountUsedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuarterlyAmountUsedNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.QuarterlyAmountUsedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLowPriceNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAcaricides.LowPriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLowPriceNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.LowPriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHighPriceNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAcaricides.HighPriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHighPriceNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.HighPriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAcaricides.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuarterlyRecordIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAcaricides.QuarterlyRecordIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuarterlyRecordIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAcaricides.QuarterlyRecordIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class appUspQuarterlyIntegratedFillTreatmentRow
        Inherits Global.System.Data.DataRow
        
        Private tableappUspQuarterlyIntegratedFillTreatment As appUspQuarterlyIntegratedFillTreatmentDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableappUspQuarterlyIntegratedFillTreatment = CType(Me.Table,appUspQuarterlyIntegratedFillTreatmentDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListID() As System.Guid
            Get
                Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTreatment.ListIDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTreatment.ListIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListItemSw() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTreatment.ListItemSwColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ListItemSw' in table 'appUspQuarterlyIntegratedFillTreatmen"& _ 
                            "t' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTreatment.ListItemSwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListItemEn() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTreatment.ListItemEnColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ListItemEn' in table 'appUspQuarterlyIntegratedFillTreatmen"& _ 
                            "t' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTreatment.ListItemEnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListItemType() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTreatment.ListItemTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ListItemType' in table 'appUspQuarterlyIntegratedFillTreatm"& _ 
                            "ent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTreatment.ListItemTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListItemStatus() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTreatment.ListItemStatusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ListItemStatus' in table 'appUspQuarterlyIntegratedFillTrea"& _ 
                            "tment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTreatment.ListItemStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AnimalsFeedsID() As System.Guid
            Get
                Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTreatment.AnimalsFeedsIDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTreatment.AnimalsFeedsIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FeedsID() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTreatment.FeedsIDColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FeedsID' in table 'appUspQuarterlyIntegratedFillTreatment' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTreatment.FeedsIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GenericName() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTreatment.GenericNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GenericName' in table 'appUspQuarterlyIntegratedFillTreatme"& _ 
                            "nt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTreatment.GenericNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TradeName() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTreatment.TradeNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TradeName' in table 'appUspQuarterlyIntegratedFillTreatment"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTreatment.TradeNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTreatment.SourceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Source' in table 'appUspQuarterlyIntegratedFillTreatment' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTreatment.SourceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeasurementUnit() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTreatment.MeasurementUnitColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeasurementUnit' in table 'appUspQuarterlyIntegratedFillTre"& _ 
                            "atment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTreatment.MeasurementUnitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QuarterlyRequirement() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTreatment.QuarterlyRequirementColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QuarterlyRequirement' in table 'appUspQuarterlyIntegratedFi"& _ 
                            "llTreatment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTreatment.QuarterlyRequirementColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QuarterlyAmountUsed() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTreatment.QuarterlyAmountUsedColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QuarterlyAmountUsed' in table 'appUspQuarterlyIntegratedFil"& _ 
                            "lTreatment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTreatment.QuarterlyAmountUsedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LowPrice() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTreatment.LowPriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LowPrice' in table 'appUspQuarterlyIntegratedFillTreatment'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTreatment.LowPriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HighPrice() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTreatment.HighPriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HighPrice' in table 'appUspQuarterlyIntegratedFillTreatment"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTreatment.HighPriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTreatment.RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'appUspQuarterlyIntegratedFillTreatment' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTreatment.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QuarterlyRecordID() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTreatment.QuarterlyRecordIDColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QuarterlyRecordID' in table 'appUspQuarterlyIntegratedFillT"& _ 
                            "reatment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTreatment.QuarterlyRecordIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsListItemSwNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTreatment.ListItemSwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetListItemSwNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTreatment.ListItemSwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsListItemEnNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTreatment.ListItemEnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetListItemEnNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTreatment.ListItemEnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsListItemTypeNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTreatment.ListItemTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetListItemTypeNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTreatment.ListItemTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsListItemStatusNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTreatment.ListItemStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetListItemStatusNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTreatment.ListItemStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFeedsIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTreatment.FeedsIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFeedsIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTreatment.FeedsIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGenericNameNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTreatment.GenericNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGenericNameNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTreatment.GenericNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTradeNameNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTreatment.TradeNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTradeNameNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTreatment.TradeNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSourceNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTreatment.SourceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSourceNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTreatment.SourceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMeasurementUnitNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTreatment.MeasurementUnitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMeasurementUnitNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTreatment.MeasurementUnitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuarterlyRequirementNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTreatment.QuarterlyRequirementColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuarterlyRequirementNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTreatment.QuarterlyRequirementColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuarterlyAmountUsedNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTreatment.QuarterlyAmountUsedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuarterlyAmountUsedNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTreatment.QuarterlyAmountUsedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLowPriceNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTreatment.LowPriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLowPriceNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTreatment.LowPriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHighPriceNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTreatment.HighPriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHighPriceNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTreatment.HighPriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTreatment.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTreatment.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuarterlyRecordIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTreatment.QuarterlyRecordIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuarterlyRecordIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTreatment.QuarterlyRecordIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class appUspQuarterlyIntegratedFillVaccinesRow
        Inherits Global.System.Data.DataRow
        
        Private tableappUspQuarterlyIntegratedFillVaccines As appUspQuarterlyIntegratedFillVaccinesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableappUspQuarterlyIntegratedFillVaccines = CType(Me.Table,appUspQuarterlyIntegratedFillVaccinesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListID() As System.Guid
            Get
                Return CType(Me(Me.tableappUspQuarterlyIntegratedFillVaccines.ListIDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillVaccines.ListIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListItemSw() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillVaccines.ListItemSwColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ListItemSw' in table 'appUspQuarterlyIntegratedFillVaccines"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillVaccines.ListItemSwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListItemEn() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillVaccines.ListItemEnColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ListItemEn' in table 'appUspQuarterlyIntegratedFillVaccines"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillVaccines.ListItemEnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListItemType() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillVaccines.ListItemTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ListItemType' in table 'appUspQuarterlyIntegratedFillVaccin"& _ 
                            "es' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillVaccines.ListItemTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListItemStatus() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillVaccines.ListItemStatusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ListItemStatus' in table 'appUspQuarterlyIntegratedFillVacc"& _ 
                            "ines' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillVaccines.ListItemStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AnimalsFeedsID() As System.Guid
            Get
                Return CType(Me(Me.tableappUspQuarterlyIntegratedFillVaccines.AnimalsFeedsIDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillVaccines.AnimalsFeedsIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FeedsID() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillVaccines.FeedsIDColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FeedsID' in table 'appUspQuarterlyIntegratedFillVaccines' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillVaccines.FeedsIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GenericName() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillVaccines.GenericNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GenericName' in table 'appUspQuarterlyIntegratedFillVaccine"& _ 
                            "s' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillVaccines.GenericNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TradeName() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillVaccines.TradeNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TradeName' in table 'appUspQuarterlyIntegratedFillVaccines'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillVaccines.TradeNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillVaccines.SourceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Source' in table 'appUspQuarterlyIntegratedFillVaccines' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillVaccines.SourceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeasurementUnit() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillVaccines.MeasurementUnitColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeasurementUnit' in table 'appUspQuarterlyIntegratedFillVac"& _ 
                            "cines' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillVaccines.MeasurementUnitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QuarterlyRequirement() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillVaccines.QuarterlyRequirementColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QuarterlyRequirement' in table 'appUspQuarterlyIntegratedFi"& _ 
                            "llVaccines' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillVaccines.QuarterlyRequirementColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QuarterlyAmountUsed() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillVaccines.QuarterlyAmountUsedColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QuarterlyAmountUsed' in table 'appUspQuarterlyIntegratedFil"& _ 
                            "lVaccines' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillVaccines.QuarterlyAmountUsedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LowPrice() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillVaccines.LowPriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LowPrice' in table 'appUspQuarterlyIntegratedFillVaccines' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillVaccines.LowPriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HighPrice() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillVaccines.HighPriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HighPrice' in table 'appUspQuarterlyIntegratedFillVaccines'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillVaccines.HighPriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillVaccines.RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'appUspQuarterlyIntegratedFillVaccines' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillVaccines.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QuarterlyRecordID() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillVaccines.QuarterlyRecordIDColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QuarterlyRecordID' in table 'appUspQuarterlyIntegratedFillV"& _ 
                            "accines' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillVaccines.QuarterlyRecordIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsListItemSwNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillVaccines.ListItemSwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetListItemSwNull()
            Me(Me.tableappUspQuarterlyIntegratedFillVaccines.ListItemSwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsListItemEnNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillVaccines.ListItemEnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetListItemEnNull()
            Me(Me.tableappUspQuarterlyIntegratedFillVaccines.ListItemEnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsListItemTypeNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillVaccines.ListItemTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetListItemTypeNull()
            Me(Me.tableappUspQuarterlyIntegratedFillVaccines.ListItemTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsListItemStatusNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillVaccines.ListItemStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetListItemStatusNull()
            Me(Me.tableappUspQuarterlyIntegratedFillVaccines.ListItemStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFeedsIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillVaccines.FeedsIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFeedsIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillVaccines.FeedsIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGenericNameNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillVaccines.GenericNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGenericNameNull()
            Me(Me.tableappUspQuarterlyIntegratedFillVaccines.GenericNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTradeNameNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillVaccines.TradeNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTradeNameNull()
            Me(Me.tableappUspQuarterlyIntegratedFillVaccines.TradeNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSourceNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillVaccines.SourceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSourceNull()
            Me(Me.tableappUspQuarterlyIntegratedFillVaccines.SourceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMeasurementUnitNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillVaccines.MeasurementUnitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMeasurementUnitNull()
            Me(Me.tableappUspQuarterlyIntegratedFillVaccines.MeasurementUnitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuarterlyRequirementNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillVaccines.QuarterlyRequirementColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuarterlyRequirementNull()
            Me(Me.tableappUspQuarterlyIntegratedFillVaccines.QuarterlyRequirementColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuarterlyAmountUsedNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillVaccines.QuarterlyAmountUsedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuarterlyAmountUsedNull()
            Me(Me.tableappUspQuarterlyIntegratedFillVaccines.QuarterlyAmountUsedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLowPriceNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillVaccines.LowPriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLowPriceNull()
            Me(Me.tableappUspQuarterlyIntegratedFillVaccines.LowPriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHighPriceNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillVaccines.HighPriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHighPriceNull()
            Me(Me.tableappUspQuarterlyIntegratedFillVaccines.HighPriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillVaccines.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tableappUspQuarterlyIntegratedFillVaccines.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuarterlyRecordIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillVaccines.QuarterlyRecordIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuarterlyRecordIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillVaccines.QuarterlyRecordIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class appUspQuarterlyIntegratedFillAnimalsFeedsRow
        Inherits Global.System.Data.DataRow
        
        Private tableappUspQuarterlyIntegratedFillAnimalsFeeds As appUspQuarterlyIntegratedFillAnimalsFeedsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds = CType(Me.Table,appUspQuarterlyIntegratedFillAnimalsFeedsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListID() As System.Guid
            Get
                Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.ListIDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.ListIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListItemSw() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.ListItemSwColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ListItemSw' in table 'appUspQuarterlyIntegratedFillAnimalsF"& _ 
                            "eeds' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.ListItemSwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListItemEn() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.ListItemEnColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ListItemEn' in table 'appUspQuarterlyIntegratedFillAnimalsF"& _ 
                            "eeds' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.ListItemEnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListItemType() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.ListItemTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ListItemType' in table 'appUspQuarterlyIntegratedFillAnimal"& _ 
                            "sFeeds' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.ListItemTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListItemStatus() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.ListItemStatusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ListItemStatus' in table 'appUspQuarterlyIntegratedFillAnim"& _ 
                            "alsFeeds' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.ListItemStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AnimalsFeedsID() As System.Guid
            Get
                Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.AnimalsFeedsIDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.AnimalsFeedsIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FeedsID() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.FeedsIDColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FeedsID' in table 'appUspQuarterlyIntegratedFillAnimalsFeed"& _ 
                            "s' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.FeedsIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GenericName() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.GenericNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GenericName' in table 'appUspQuarterlyIntegratedFillAnimals"& _ 
                            "Feeds' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.GenericNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TradeName() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.TradeNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TradeName' in table 'appUspQuarterlyIntegratedFillAnimalsFe"& _ 
                            "eds' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.TradeNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.SourceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Source' in table 'appUspQuarterlyIntegratedFillAnimalsFeeds"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.SourceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeasurementUnit() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.MeasurementUnitColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeasurementUnit' in table 'appUspQuarterlyIntegratedFillAni"& _ 
                            "malsFeeds' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.MeasurementUnitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QuarterlyRequirement() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.QuarterlyRequirementColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QuarterlyRequirement' in table 'appUspQuarterlyIntegratedFi"& _ 
                            "llAnimalsFeeds' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.QuarterlyRequirementColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QuarterlyAmountUsed() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.QuarterlyAmountUsedColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QuarterlyAmountUsed' in table 'appUspQuarterlyIntegratedFil"& _ 
                            "lAnimalsFeeds' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.QuarterlyAmountUsedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LowPrice() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.LowPriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LowPrice' in table 'appUspQuarterlyIntegratedFillAnimalsFee"& _ 
                            "ds' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.LowPriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HighPrice() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.HighPriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HighPrice' in table 'appUspQuarterlyIntegratedFillAnimalsFe"& _ 
                            "eds' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.HighPriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'appUspQuarterlyIntegratedFillAnimalsFeed"& _ 
                            "s' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QuarterlyRecordID() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.QuarterlyRecordIDColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QuarterlyRecordID' in table 'appUspQuarterlyIntegratedFillA"& _ 
                            "nimalsFeeds' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.QuarterlyRecordIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsListItemSwNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.ListItemSwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetListItemSwNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.ListItemSwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsListItemEnNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.ListItemEnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetListItemEnNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.ListItemEnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsListItemTypeNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.ListItemTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetListItemTypeNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.ListItemTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsListItemStatusNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.ListItemStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetListItemStatusNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.ListItemStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFeedsIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.FeedsIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFeedsIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.FeedsIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGenericNameNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.GenericNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGenericNameNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.GenericNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTradeNameNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.TradeNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTradeNameNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.TradeNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSourceNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.SourceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSourceNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.SourceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMeasurementUnitNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.MeasurementUnitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMeasurementUnitNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.MeasurementUnitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuarterlyRequirementNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.QuarterlyRequirementColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuarterlyRequirementNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.QuarterlyRequirementColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuarterlyAmountUsedNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.QuarterlyAmountUsedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuarterlyAmountUsedNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.QuarterlyAmountUsedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLowPriceNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.LowPriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLowPriceNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.LowPriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHighPriceNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.HighPriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHighPriceNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.HighPriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuarterlyRecordIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.QuarterlyRecordIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuarterlyRecordIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillAnimalsFeeds.QuarterlyRecordIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class appUspQuarterlyIntegratedFillReproductionInputRow
        Inherits Global.System.Data.DataRow
        
        Private tableappUspQuarterlyIntegratedFillReproductionInput As appUspQuarterlyIntegratedFillReproductionInputDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableappUspQuarterlyIntegratedFillReproductionInput = CType(Me.Table,appUspQuarterlyIntegratedFillReproductionInputDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListID() As System.Guid
            Get
                Return CType(Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.ListIDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.ListIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListItemSw() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.ListItemSwColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ListItemSw' in table 'appUspQuarterlyIntegratedFillReproduc"& _ 
                            "tionInput' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.ListItemSwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListItemEn() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.ListItemEnColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ListItemEn' in table 'appUspQuarterlyIntegratedFillReproduc"& _ 
                            "tionInput' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.ListItemEnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListItemType() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.ListItemTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ListItemType' in table 'appUspQuarterlyIntegratedFillReprod"& _ 
                            "uctionInput' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.ListItemTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListItemStatus() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.ListItemStatusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ListItemStatus' in table 'appUspQuarterlyIntegratedFillRepr"& _ 
                            "oductionInput' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.ListItemStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReproductionInputsID() As System.Guid
            Get
                Return CType(Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.ReproductionInputsIDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.ReproductionInputsIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property InputID() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.InputIDColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InputID' in table 'appUspQuarterlyIntegratedFillReproductio"& _ 
                            "nInput' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.InputIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Breed() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.BreedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Breed' in table 'appUspQuarterlyIntegratedFillReproductionI"& _ 
                            "nput' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.BreedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AmountRequired() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.AmountRequiredColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AmountRequired' in table 'appUspQuarterlyIntegratedFillRepr"& _ 
                            "oductionInput' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.AmountRequiredColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AmountAvailable() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.AmountAvailableColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AmountAvailable' in table 'appUspQuarterlyIntegratedFillRep"& _ 
                            "roductionInput' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.AmountAvailableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'appUspQuarterlyIntegratedFillReproductio"& _ 
                            "nInput' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QuarterlyRecordID() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.QuarterlyRecordIDColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QuarterlyRecordID' in table 'appUspQuarterlyIntegratedFillR"& _ 
                            "eproductionInput' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.QuarterlyRecordIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsListItemSwNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillReproductionInput.ListItemSwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetListItemSwNull()
            Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.ListItemSwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsListItemEnNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillReproductionInput.ListItemEnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetListItemEnNull()
            Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.ListItemEnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsListItemTypeNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillReproductionInput.ListItemTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetListItemTypeNull()
            Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.ListItemTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsListItemStatusNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillReproductionInput.ListItemStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetListItemStatusNull()
            Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.ListItemStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInputIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillReproductionInput.InputIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInputIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.InputIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBreedNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillReproductionInput.BreedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBreedNull()
            Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.BreedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmountRequiredNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillReproductionInput.AmountRequiredColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmountRequiredNull()
            Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.AmountRequiredColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmountAvailableNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillReproductionInput.AmountAvailableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmountAvailableNull()
            Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.AmountAvailableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillReproductionInput.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuarterlyRecordIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillReproductionInput.QuarterlyRecordIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuarterlyRecordIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillReproductionInput.QuarterlyRecordIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class rptUspQuarterlyTargettRow
        Inherits Global.System.Data.DataRow
        
        Private tablerptUspQuarterlyTargett As rptUspQuarterlyTargettDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablerptUspQuarterlyTargett = CType(Me.Table,rptUspQuarterlyTargettDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CropName() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptUspQuarterlyTargett.CropNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CropName' in table 'rptUspQuarterlyTargett' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptUspQuarterlyTargett.CropNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablerptUspQuarterlyTargett.GroupIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupID' in table 'rptUspQuarterlyTargett' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptUspQuarterlyTargett.GroupIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AI() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablerptUspQuarterlyTargett.AIColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AI' in table 'rptUspQuarterlyTargett' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptUspQuarterlyTargett.AIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedArea() As Double
            Get
                Try 
                    Return CType(Me(Me.tablerptUspQuarterlyTargett.ExpectedAreaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedArea' in table 'rptUspQuarterlyTargett' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptUspQuarterlyTargett.ExpectedAreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedProd() As Double
            Get
                Try 
                    Return CType(Me(Me.tablerptUspQuarterlyTargett.ExpectedProdColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedProd' in table 'rptUspQuarterlyTargett' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptUspQuarterlyTargett.ExpectedProdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedYield() As Double
            Get
                Try 
                    Return CType(Me(Me.tablerptUspQuarterlyTargett.ExpectedYieldColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedYield' in table 'rptUspQuarterlyTargett' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablerptUspQuarterlyTargett.ExpectedYieldColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CropName1() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptUspQuarterlyTargett.CropName1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CropName1' in table 'rptUspQuarterlyTargett' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptUspQuarterlyTargett.CropName1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablerptUspQuarterlyTargett.GroupID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupID1' in table 'rptUspQuarterlyTargett' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptUspQuarterlyTargett.GroupID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AI1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablerptUspQuarterlyTargett.AI1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AI1' in table 'rptUspQuarterlyTargett' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptUspQuarterlyTargett.AI1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AreaDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tablerptUspQuarterlyTargett.AreaDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AreaDone' in table 'rptUspQuarterlyTargett' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptUspQuarterlyTargett.AreaDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProdDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tablerptUspQuarterlyTargett.ProdDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProdDone' in table 'rptUspQuarterlyTargett' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptUspQuarterlyTargett.ProdDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property YieldDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tablerptUspQuarterlyTargett.YieldDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YieldDone' in table 'rptUspQuarterlyTargett' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptUspQuarterlyTargett.YieldDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Price() As Double
            Get
                Try 
                    Return CType(Me(Me.tablerptUspQuarterlyTargett.PriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Price' in table 'rptUspQuarterlyTargett' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptUspQuarterlyTargett.PriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property maxperiodfrom() As Date
            Get
                Try 
                    Return CType(Me(Me.tablerptUspQuarterlyTargett.maxperiodfromColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'maxperiodfrom' in table 'rptUspQuarterlyTargett' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablerptUspQuarterlyTargett.maxperiodfromColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCropNameNull() As Boolean
            Return Me.IsNull(Me.tablerptUspQuarterlyTargett.CropNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCropNameNull()
            Me(Me.tablerptUspQuarterlyTargett.CropNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupIDNull() As Boolean
            Return Me.IsNull(Me.tablerptUspQuarterlyTargett.GroupIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupIDNull()
            Me(Me.tablerptUspQuarterlyTargett.GroupIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAINull() As Boolean
            Return Me.IsNull(Me.tablerptUspQuarterlyTargett.AIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAINull()
            Me(Me.tablerptUspQuarterlyTargett.AIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedAreaNull() As Boolean
            Return Me.IsNull(Me.tablerptUspQuarterlyTargett.ExpectedAreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedAreaNull()
            Me(Me.tablerptUspQuarterlyTargett.ExpectedAreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedProdNull() As Boolean
            Return Me.IsNull(Me.tablerptUspQuarterlyTargett.ExpectedProdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedProdNull()
            Me(Me.tablerptUspQuarterlyTargett.ExpectedProdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedYieldNull() As Boolean
            Return Me.IsNull(Me.tablerptUspQuarterlyTargett.ExpectedYieldColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedYieldNull()
            Me(Me.tablerptUspQuarterlyTargett.ExpectedYieldColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCropName1Null() As Boolean
            Return Me.IsNull(Me.tablerptUspQuarterlyTargett.CropName1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCropName1Null()
            Me(Me.tablerptUspQuarterlyTargett.CropName1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupID1Null() As Boolean
            Return Me.IsNull(Me.tablerptUspQuarterlyTargett.GroupID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupID1Null()
            Me(Me.tablerptUspQuarterlyTargett.GroupID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAI1Null() As Boolean
            Return Me.IsNull(Me.tablerptUspQuarterlyTargett.AI1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAI1Null()
            Me(Me.tablerptUspQuarterlyTargett.AI1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAreaDoneNull() As Boolean
            Return Me.IsNull(Me.tablerptUspQuarterlyTargett.AreaDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAreaDoneNull()
            Me(Me.tablerptUspQuarterlyTargett.AreaDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProdDoneNull() As Boolean
            Return Me.IsNull(Me.tablerptUspQuarterlyTargett.ProdDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProdDoneNull()
            Me(Me.tablerptUspQuarterlyTargett.ProdDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsYieldDoneNull() As Boolean
            Return Me.IsNull(Me.tablerptUspQuarterlyTargett.YieldDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetYieldDoneNull()
            Me(Me.tablerptUspQuarterlyTargett.YieldDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPriceNull() As Boolean
            Return Me.IsNull(Me.tablerptUspQuarterlyTargett.PriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPriceNull()
            Me(Me.tablerptUspQuarterlyTargett.PriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmaxperiodfromNull() As Boolean
            Return Me.IsNull(Me.tablerptUspQuarterlyTargett.maxperiodfromColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmaxperiodfromNull()
            Me(Me.tablerptUspQuarterlyTargett.maxperiodfromColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class appUspQuarterlyIntegratedFillTargetCerealRow
        Inherits Global.System.Data.DataRow
        
        Private tableappUspQuarterlyIntegratedFillTargetCereal As appUspQuarterlyIntegratedFillTargetCerealDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableappUspQuarterlyIntegratedFillTargetCereal = CType(Me.Table,appUspQuarterlyIntegratedFillTargetCerealDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CropName() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.CropNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CropName' in table 'appUspQuarterlyIntegratedFillTargetCere"& _ 
                            "al' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.CropNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.GroupIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupID' in table 'appUspQuarterlyIntegratedFillTargetCerea"& _ 
                            "l' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.GroupIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AI() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.AIColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AI' in table 'appUspQuarterlyIntegratedFillTargetCereal' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.AIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedArea() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.ExpectedAreaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedArea' in table 'appUspQuarterlyIntegratedFillTarget"& _ 
                            "Cereal' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.ExpectedAreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedProd() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.ExpectedProdColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedProd' in table 'appUspQuarterlyIntegratedFillTarget"& _ 
                            "Cereal' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.ExpectedProdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedYield() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.ExpectedYieldColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedYield' in table 'appUspQuarterlyIntegratedFillTarge"& _ 
                            "tCereal' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.ExpectedYieldColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CropName1() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.CropName1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CropName1' in table 'appUspQuarterlyIntegratedFillTargetCer"& _ 
                            "eal' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.CropName1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.GroupID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupID1' in table 'appUspQuarterlyIntegratedFillTargetCere"& _ 
                            "al' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.GroupID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AI1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.AI1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AI1' in table 'appUspQuarterlyIntegratedFillTargetCereal' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.AI1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AreaDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.AreaDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AreaDone' in table 'appUspQuarterlyIntegratedFillTargetCere"& _ 
                            "al' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.AreaDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProdDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.ProdDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProdDone' in table 'appUspQuarterlyIntegratedFillTargetCere"& _ 
                            "al' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.ProdDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property YieldDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.YieldDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YieldDone' in table 'appUspQuarterlyIntegratedFillTargetCer"& _ 
                            "eal' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.YieldDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Price() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.PriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Price' in table 'appUspQuarterlyIntegratedFillTargetCereal'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.PriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property maxperiodfrom() As Date
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.maxperiodfromColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'maxperiodfrom' in table 'appUspQuarterlyIntegratedFillTarge"& _ 
                            "tCereal' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.maxperiodfromColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCropNameNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetCereal.CropNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCropNameNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.CropNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetCereal.GroupIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.GroupIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAINull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetCereal.AIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAINull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.AIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedAreaNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetCereal.ExpectedAreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedAreaNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.ExpectedAreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedProdNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetCereal.ExpectedProdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedProdNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.ExpectedProdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedYieldNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetCereal.ExpectedYieldColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedYieldNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.ExpectedYieldColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCropName1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetCereal.CropName1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCropName1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.CropName1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupID1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetCereal.GroupID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupID1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.GroupID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAI1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetCereal.AI1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAI1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.AI1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAreaDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetCereal.AreaDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAreaDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.AreaDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProdDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetCereal.ProdDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProdDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.ProdDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsYieldDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetCereal.YieldDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetYieldDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.YieldDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPriceNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetCereal.PriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPriceNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.PriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmaxperiodfromNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetCereal.maxperiodfromColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmaxperiodfromNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetCereal.maxperiodfromColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class appUspQuarterlyIntegratedFillTargetFlowersRow
        Inherits Global.System.Data.DataRow
        
        Private tableappUspQuarterlyIntegratedFillTargetFlowers As appUspQuarterlyIntegratedFillTargetFlowersDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableappUspQuarterlyIntegratedFillTargetFlowers = CType(Me.Table,appUspQuarterlyIntegratedFillTargetFlowersDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CropName() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.CropNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CropName' in table 'appUspQuarterlyIntegratedFillTargetFlow"& _ 
                            "ers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.CropNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.GroupIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupID' in table 'appUspQuarterlyIntegratedFillTargetFlowe"& _ 
                            "rs' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.GroupIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AI() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.AIColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AI' in table 'appUspQuarterlyIntegratedFillTargetFlowers' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.AIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedArea() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.ExpectedAreaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedArea' in table 'appUspQuarterlyIntegratedFillTarget"& _ 
                            "Flowers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.ExpectedAreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedProd() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.ExpectedProdColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedProd' in table 'appUspQuarterlyIntegratedFillTarget"& _ 
                            "Flowers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.ExpectedProdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedYield() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.ExpectedYieldColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedYield' in table 'appUspQuarterlyIntegratedFillTarge"& _ 
                            "tFlowers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.ExpectedYieldColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CropName1() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.CropName1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CropName1' in table 'appUspQuarterlyIntegratedFillTargetFlo"& _ 
                            "wers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.CropName1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.GroupID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupID1' in table 'appUspQuarterlyIntegratedFillTargetFlow"& _ 
                            "ers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.GroupID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AI1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.AI1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AI1' in table 'appUspQuarterlyIntegratedFillTargetFlowers' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.AI1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AreaDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.AreaDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AreaDone' in table 'appUspQuarterlyIntegratedFillTargetFlow"& _ 
                            "ers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.AreaDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProdDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.ProdDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProdDone' in table 'appUspQuarterlyIntegratedFillTargetFlow"& _ 
                            "ers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.ProdDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property YieldDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.YieldDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YieldDone' in table 'appUspQuarterlyIntegratedFillTargetFlo"& _ 
                            "wers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.YieldDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Price() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.PriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Price' in table 'appUspQuarterlyIntegratedFillTargetFlowers"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.PriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property maxperiodfrom() As Date
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.maxperiodfromColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'maxperiodfrom' in table 'appUspQuarterlyIntegratedFillTarge"& _ 
                            "tFlowers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.maxperiodfromColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCropNameNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.CropNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCropNameNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.CropNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.GroupIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.GroupIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAINull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.AIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAINull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.AIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedAreaNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.ExpectedAreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedAreaNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.ExpectedAreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedProdNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.ExpectedProdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedProdNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.ExpectedProdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedYieldNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.ExpectedYieldColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedYieldNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.ExpectedYieldColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCropName1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.CropName1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCropName1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.CropName1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupID1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.GroupID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupID1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.GroupID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAI1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.AI1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAI1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.AI1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAreaDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.AreaDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAreaDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.AreaDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProdDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.ProdDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProdDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.ProdDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsYieldDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.YieldDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetYieldDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.YieldDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPriceNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.PriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPriceNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.PriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmaxperiodfromNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.maxperiodfromColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmaxperiodfromNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFlowers.maxperiodfromColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class appUspQuarterlyIntegratedFillTargetFruitsRow
        Inherits Global.System.Data.DataRow
        
        Private tableappUspQuarterlyIntegratedFillTargetFruits As appUspQuarterlyIntegratedFillTargetFruitsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableappUspQuarterlyIntegratedFillTargetFruits = CType(Me.Table,appUspQuarterlyIntegratedFillTargetFruitsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CropName() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.CropNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CropName' in table 'appUspQuarterlyIntegratedFillTargetFrui"& _ 
                            "ts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.CropNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.GroupIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupID' in table 'appUspQuarterlyIntegratedFillTargetFruit"& _ 
                            "s' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.GroupIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AI() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.AIColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AI' in table 'appUspQuarterlyIntegratedFillTargetFruits' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.AIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedArea() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.ExpectedAreaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedArea' in table 'appUspQuarterlyIntegratedFillTarget"& _ 
                            "Fruits' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.ExpectedAreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedProd() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.ExpectedProdColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedProd' in table 'appUspQuarterlyIntegratedFillTarget"& _ 
                            "Fruits' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.ExpectedProdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedYield() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.ExpectedYieldColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedYield' in table 'appUspQuarterlyIntegratedFillTarge"& _ 
                            "tFruits' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.ExpectedYieldColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CropName1() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.CropName1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CropName1' in table 'appUspQuarterlyIntegratedFillTargetFru"& _ 
                            "its' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.CropName1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.GroupID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupID1' in table 'appUspQuarterlyIntegratedFillTargetFrui"& _ 
                            "ts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.GroupID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AI1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.AI1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AI1' in table 'appUspQuarterlyIntegratedFillTargetFruits' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.AI1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AreaDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.AreaDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AreaDone' in table 'appUspQuarterlyIntegratedFillTargetFrui"& _ 
                            "ts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.AreaDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProdDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.ProdDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProdDone' in table 'appUspQuarterlyIntegratedFillTargetFrui"& _ 
                            "ts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.ProdDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property YieldDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.YieldDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YieldDone' in table 'appUspQuarterlyIntegratedFillTargetFru"& _ 
                            "its' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.YieldDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Price() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.PriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Price' in table 'appUspQuarterlyIntegratedFillTargetFruits'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.PriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property maxperiodfrom() As Date
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.maxperiodfromColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'maxperiodfrom' in table 'appUspQuarterlyIntegratedFillTarge"& _ 
                            "tFruits' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.maxperiodfromColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCropNameNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFruits.CropNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCropNameNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.CropNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFruits.GroupIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.GroupIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAINull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFruits.AIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAINull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.AIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedAreaNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFruits.ExpectedAreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedAreaNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.ExpectedAreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedProdNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFruits.ExpectedProdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedProdNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.ExpectedProdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedYieldNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFruits.ExpectedYieldColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedYieldNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.ExpectedYieldColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCropName1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFruits.CropName1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCropName1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.CropName1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupID1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFruits.GroupID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupID1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.GroupID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAI1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFruits.AI1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAI1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.AI1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAreaDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFruits.AreaDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAreaDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.AreaDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProdDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFruits.ProdDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProdDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.ProdDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsYieldDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFruits.YieldDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetYieldDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.YieldDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPriceNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFruits.PriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPriceNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.PriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmaxperiodfromNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetFruits.maxperiodfromColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmaxperiodfromNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetFruits.maxperiodfromColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class appUspQuarterlyIntegratedFillTargetIndustrialRow
        Inherits Global.System.Data.DataRow
        
        Private tableappUspQuarterlyIntegratedFillTargetIndustrial As appUspQuarterlyIntegratedFillTargetIndustrialDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableappUspQuarterlyIntegratedFillTargetIndustrial = CType(Me.Table,appUspQuarterlyIntegratedFillTargetIndustrialDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CropName() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.CropNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CropName' in table 'appUspQuarterlyIntegratedFillTargetIndu"& _ 
                            "strial' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.CropNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.GroupIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupID' in table 'appUspQuarterlyIntegratedFillTargetIndus"& _ 
                            "trial' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.GroupIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AI() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.AIColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AI' in table 'appUspQuarterlyIntegratedFillTargetIndustrial"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.AIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedArea() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.ExpectedAreaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedArea' in table 'appUspQuarterlyIntegratedFillTarget"& _ 
                            "Industrial' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.ExpectedAreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedProd() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.ExpectedProdColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedProd' in table 'appUspQuarterlyIntegratedFillTarget"& _ 
                            "Industrial' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.ExpectedProdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedYield() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.ExpectedYieldColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedYield' in table 'appUspQuarterlyIntegratedFillTarge"& _ 
                            "tIndustrial' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.ExpectedYieldColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CropName1() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.CropName1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CropName1' in table 'appUspQuarterlyIntegratedFillTargetInd"& _ 
                            "ustrial' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.CropName1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.GroupID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupID1' in table 'appUspQuarterlyIntegratedFillTargetIndu"& _ 
                            "strial' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.GroupID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AI1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.AI1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AI1' in table 'appUspQuarterlyIntegratedFillTargetIndustria"& _ 
                            "l' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.AI1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AreaDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.AreaDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AreaDone' in table 'appUspQuarterlyIntegratedFillTargetIndu"& _ 
                            "strial' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.AreaDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProdDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.ProdDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProdDone' in table 'appUspQuarterlyIntegratedFillTargetIndu"& _ 
                            "strial' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.ProdDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property YieldDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.YieldDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YieldDone' in table 'appUspQuarterlyIntegratedFillTargetInd"& _ 
                            "ustrial' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.YieldDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Price() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.PriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Price' in table 'appUspQuarterlyIntegratedFillTargetIndustr"& _ 
                            "ial' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.PriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property maxperiodfrom() As Date
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.maxperiodfromColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'maxperiodfrom' in table 'appUspQuarterlyIntegratedFillTarge"& _ 
                            "tIndustrial' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.maxperiodfromColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCropNameNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.CropNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCropNameNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.CropNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.GroupIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.GroupIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAINull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.AIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAINull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.AIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedAreaNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.ExpectedAreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedAreaNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.ExpectedAreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedProdNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.ExpectedProdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedProdNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.ExpectedProdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedYieldNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.ExpectedYieldColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedYieldNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.ExpectedYieldColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCropName1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.CropName1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCropName1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.CropName1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupID1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.GroupID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupID1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.GroupID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAI1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.AI1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAI1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.AI1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAreaDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.AreaDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAreaDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.AreaDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProdDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.ProdDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProdDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.ProdDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsYieldDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.YieldDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetYieldDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.YieldDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPriceNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.PriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPriceNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.PriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmaxperiodfromNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.maxperiodfromColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmaxperiodfromNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetIndustrial.maxperiodfromColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class appUspQuarterlyIntegratedFillTargetOilRow
        Inherits Global.System.Data.DataRow
        
        Private tableappUspQuarterlyIntegratedFillTargetOil As appUspQuarterlyIntegratedFillTargetOilDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableappUspQuarterlyIntegratedFillTargetOil = CType(Me.Table,appUspQuarterlyIntegratedFillTargetOilDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CropName() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.CropNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CropName' in table 'appUspQuarterlyIntegratedFillTargetOil'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.CropNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.GroupIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupID' in table 'appUspQuarterlyIntegratedFillTargetOil' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.GroupIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AI() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.AIColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AI' in table 'appUspQuarterlyIntegratedFillTargetOil' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.AIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedArea() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.ExpectedAreaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedArea' in table 'appUspQuarterlyIntegratedFillTarget"& _ 
                            "Oil' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.ExpectedAreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedProd() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.ExpectedProdColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedProd' in table 'appUspQuarterlyIntegratedFillTarget"& _ 
                            "Oil' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.ExpectedProdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedYield() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.ExpectedYieldColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedYield' in table 'appUspQuarterlyIntegratedFillTarge"& _ 
                            "tOil' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.ExpectedYieldColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CropName1() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.CropName1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CropName1' in table 'appUspQuarterlyIntegratedFillTargetOil"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.CropName1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.GroupID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupID1' in table 'appUspQuarterlyIntegratedFillTargetOil'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.GroupID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AI1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.AI1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AI1' in table 'appUspQuarterlyIntegratedFillTargetOil' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.AI1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AreaDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.AreaDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AreaDone' in table 'appUspQuarterlyIntegratedFillTargetOil'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.AreaDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProdDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.ProdDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProdDone' in table 'appUspQuarterlyIntegratedFillTargetOil'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.ProdDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property YieldDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.YieldDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YieldDone' in table 'appUspQuarterlyIntegratedFillTargetOil"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.YieldDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Price() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.PriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Price' in table 'appUspQuarterlyIntegratedFillTargetOil' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.PriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property maxperiodfrom() As Date
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.maxperiodfromColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'maxperiodfrom' in table 'appUspQuarterlyIntegratedFillTarge"& _ 
                            "tOil' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.maxperiodfromColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCropNameNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOil.CropNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCropNameNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.CropNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOil.GroupIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.GroupIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAINull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOil.AIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAINull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.AIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedAreaNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOil.ExpectedAreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedAreaNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.ExpectedAreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedProdNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOil.ExpectedProdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedProdNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.ExpectedProdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedYieldNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOil.ExpectedYieldColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedYieldNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.ExpectedYieldColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCropName1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOil.CropName1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCropName1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.CropName1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupID1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOil.GroupID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupID1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.GroupID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAI1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOil.AI1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAI1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.AI1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAreaDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOil.AreaDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAreaDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.AreaDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProdDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOil.ProdDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProdDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.ProdDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsYieldDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOil.YieldDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetYieldDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.YieldDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPriceNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOil.PriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPriceNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.PriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmaxperiodfromNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOil.maxperiodfromColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmaxperiodfromNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOil.maxperiodfromColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class appUspQuarterlyIntegratedFillTargetOthersRow
        Inherits Global.System.Data.DataRow
        
        Private tableappUspQuarterlyIntegratedFillTargetOthers As appUspQuarterlyIntegratedFillTargetOthersDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableappUspQuarterlyIntegratedFillTargetOthers = CType(Me.Table,appUspQuarterlyIntegratedFillTargetOthersDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CropName() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.CropNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CropName' in table 'appUspQuarterlyIntegratedFillTargetOthe"& _ 
                            "rs' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.CropNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.GroupIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupID' in table 'appUspQuarterlyIntegratedFillTargetOther"& _ 
                            "s' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.GroupIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AI() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.AIColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AI' in table 'appUspQuarterlyIntegratedFillTargetOthers' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.AIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedArea() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.ExpectedAreaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedArea' in table 'appUspQuarterlyIntegratedFillTarget"& _ 
                            "Others' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.ExpectedAreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedProd() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.ExpectedProdColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedProd' in table 'appUspQuarterlyIntegratedFillTarget"& _ 
                            "Others' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.ExpectedProdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedYield() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.ExpectedYieldColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedYield' in table 'appUspQuarterlyIntegratedFillTarge"& _ 
                            "tOthers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.ExpectedYieldColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CropName1() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.CropName1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CropName1' in table 'appUspQuarterlyIntegratedFillTargetOth"& _ 
                            "ers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.CropName1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.GroupID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupID1' in table 'appUspQuarterlyIntegratedFillTargetOthe"& _ 
                            "rs' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.GroupID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AI1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.AI1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AI1' in table 'appUspQuarterlyIntegratedFillTargetOthers' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.AI1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AreaDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.AreaDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AreaDone' in table 'appUspQuarterlyIntegratedFillTargetOthe"& _ 
                            "rs' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.AreaDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProdDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.ProdDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProdDone' in table 'appUspQuarterlyIntegratedFillTargetOthe"& _ 
                            "rs' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.ProdDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property YieldDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.YieldDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YieldDone' in table 'appUspQuarterlyIntegratedFillTargetOth"& _ 
                            "ers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.YieldDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Price() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.PriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Price' in table 'appUspQuarterlyIntegratedFillTargetOthers'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.PriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property maxperiodfrom() As Date
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.maxperiodfromColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'maxperiodfrom' in table 'appUspQuarterlyIntegratedFillTarge"& _ 
                            "tOthers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.maxperiodfromColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCropNameNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOthers.CropNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCropNameNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.CropNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOthers.GroupIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.GroupIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAINull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOthers.AIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAINull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.AIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedAreaNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOthers.ExpectedAreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedAreaNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.ExpectedAreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedProdNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOthers.ExpectedProdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedProdNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.ExpectedProdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedYieldNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOthers.ExpectedYieldColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedYieldNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.ExpectedYieldColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCropName1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOthers.CropName1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCropName1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.CropName1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupID1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOthers.GroupID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupID1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.GroupID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAI1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOthers.AI1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAI1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.AI1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAreaDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOthers.AreaDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAreaDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.AreaDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProdDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOthers.ProdDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProdDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.ProdDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsYieldDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOthers.YieldDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetYieldDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.YieldDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPriceNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOthers.PriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPriceNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.PriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmaxperiodfromNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetOthers.maxperiodfromColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmaxperiodfromNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetOthers.maxperiodfromColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class appUspQuarterlyIntegratedFillTargetPulsesRow
        Inherits Global.System.Data.DataRow
        
        Private tableappUspQuarterlyIntegratedFillTargetPulses As appUspQuarterlyIntegratedFillTargetPulsesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableappUspQuarterlyIntegratedFillTargetPulses = CType(Me.Table,appUspQuarterlyIntegratedFillTargetPulsesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CropName() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.CropNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CropName' in table 'appUspQuarterlyIntegratedFillTargetPuls"& _ 
                            "es' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.CropNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.GroupIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupID' in table 'appUspQuarterlyIntegratedFillTargetPulse"& _ 
                            "s' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.GroupIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AI() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.AIColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AI' in table 'appUspQuarterlyIntegratedFillTargetPulses' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.AIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedArea() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.ExpectedAreaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedArea' in table 'appUspQuarterlyIntegratedFillTarget"& _ 
                            "Pulses' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.ExpectedAreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedProd() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.ExpectedProdColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedProd' in table 'appUspQuarterlyIntegratedFillTarget"& _ 
                            "Pulses' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.ExpectedProdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedYield() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.ExpectedYieldColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedYield' in table 'appUspQuarterlyIntegratedFillTarge"& _ 
                            "tPulses' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.ExpectedYieldColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CropName1() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.CropName1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CropName1' in table 'appUspQuarterlyIntegratedFillTargetPul"& _ 
                            "ses' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.CropName1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.GroupID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupID1' in table 'appUspQuarterlyIntegratedFillTargetPuls"& _ 
                            "es' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.GroupID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AI1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.AI1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AI1' in table 'appUspQuarterlyIntegratedFillTargetPulses' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.AI1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AreaDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.AreaDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AreaDone' in table 'appUspQuarterlyIntegratedFillTargetPuls"& _ 
                            "es' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.AreaDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProdDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.ProdDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProdDone' in table 'appUspQuarterlyIntegratedFillTargetPuls"& _ 
                            "es' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.ProdDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property YieldDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.YieldDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YieldDone' in table 'appUspQuarterlyIntegratedFillTargetPul"& _ 
                            "ses' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.YieldDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Price() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.PriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Price' in table 'appUspQuarterlyIntegratedFillTargetPulses'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.PriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property maxperiodfrom() As Date
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.maxperiodfromColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'maxperiodfrom' in table 'appUspQuarterlyIntegratedFillTarge"& _ 
                            "tPulses' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.maxperiodfromColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCropNameNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetPulses.CropNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCropNameNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.CropNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetPulses.GroupIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.GroupIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAINull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetPulses.AIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAINull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.AIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedAreaNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetPulses.ExpectedAreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedAreaNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.ExpectedAreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedProdNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetPulses.ExpectedProdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedProdNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.ExpectedProdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedYieldNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetPulses.ExpectedYieldColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedYieldNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.ExpectedYieldColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCropName1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetPulses.CropName1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCropName1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.CropName1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupID1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetPulses.GroupID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupID1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.GroupID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAI1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetPulses.AI1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAI1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.AI1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAreaDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetPulses.AreaDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAreaDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.AreaDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProdDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetPulses.ProdDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProdDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.ProdDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsYieldDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetPulses.YieldDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetYieldDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.YieldDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPriceNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetPulses.PriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPriceNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.PriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmaxperiodfromNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetPulses.maxperiodfromColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmaxperiodfromNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetPulses.maxperiodfromColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class appUspQuarterlyIntegratedFillTargetRootsRow
        Inherits Global.System.Data.DataRow
        
        Private tableappUspQuarterlyIntegratedFillTargetRoots As appUspQuarterlyIntegratedFillTargetRootsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableappUspQuarterlyIntegratedFillTargetRoots = CType(Me.Table,appUspQuarterlyIntegratedFillTargetRootsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CropName() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.CropNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CropName' in table 'appUspQuarterlyIntegratedFillTargetRoot"& _ 
                            "s' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.CropNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.GroupIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupID' in table 'appUspQuarterlyIntegratedFillTargetRoots"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.GroupIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AI() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.AIColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AI' in table 'appUspQuarterlyIntegratedFillTargetRoots' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.AIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedArea() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.ExpectedAreaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedArea' in table 'appUspQuarterlyIntegratedFillTarget"& _ 
                            "Roots' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.ExpectedAreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedProd() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.ExpectedProdColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedProd' in table 'appUspQuarterlyIntegratedFillTarget"& _ 
                            "Roots' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.ExpectedProdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedYield() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.ExpectedYieldColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedYield' in table 'appUspQuarterlyIntegratedFillTarge"& _ 
                            "tRoots' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.ExpectedYieldColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CropName1() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.CropName1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CropName1' in table 'appUspQuarterlyIntegratedFillTargetRoo"& _ 
                            "ts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.CropName1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.GroupID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupID1' in table 'appUspQuarterlyIntegratedFillTargetRoot"& _ 
                            "s' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.GroupID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AI1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.AI1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AI1' in table 'appUspQuarterlyIntegratedFillTargetRoots' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.AI1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AreaDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.AreaDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AreaDone' in table 'appUspQuarterlyIntegratedFillTargetRoot"& _ 
                            "s' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.AreaDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProdDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.ProdDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProdDone' in table 'appUspQuarterlyIntegratedFillTargetRoot"& _ 
                            "s' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.ProdDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property YieldDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.YieldDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YieldDone' in table 'appUspQuarterlyIntegratedFillTargetRoo"& _ 
                            "ts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.YieldDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Price() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.PriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Price' in table 'appUspQuarterlyIntegratedFillTargetRoots' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.PriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property maxperiodfrom() As Date
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.maxperiodfromColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'maxperiodfrom' in table 'appUspQuarterlyIntegratedFillTarge"& _ 
                            "tRoots' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.maxperiodfromColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCropNameNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetRoots.CropNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCropNameNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.CropNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetRoots.GroupIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.GroupIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAINull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetRoots.AIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAINull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.AIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedAreaNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetRoots.ExpectedAreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedAreaNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.ExpectedAreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedProdNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetRoots.ExpectedProdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedProdNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.ExpectedProdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedYieldNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetRoots.ExpectedYieldColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedYieldNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.ExpectedYieldColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCropName1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetRoots.CropName1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCropName1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.CropName1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupID1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetRoots.GroupID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupID1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.GroupID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAI1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetRoots.AI1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAI1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.AI1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAreaDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetRoots.AreaDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAreaDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.AreaDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProdDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetRoots.ProdDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProdDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.ProdDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsYieldDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetRoots.YieldDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetYieldDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.YieldDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPriceNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetRoots.PriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPriceNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.PriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmaxperiodfromNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetRoots.maxperiodfromColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmaxperiodfromNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetRoots.maxperiodfromColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class appUspQuarterlyIntegratedFillTargetSpicesRow
        Inherits Global.System.Data.DataRow
        
        Private tableappUspQuarterlyIntegratedFillTargetSpices As appUspQuarterlyIntegratedFillTargetSpicesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableappUspQuarterlyIntegratedFillTargetSpices = CType(Me.Table,appUspQuarterlyIntegratedFillTargetSpicesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CropName() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.CropNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CropName' in table 'appUspQuarterlyIntegratedFillTargetSpic"& _ 
                            "es' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.CropNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.GroupIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupID' in table 'appUspQuarterlyIntegratedFillTargetSpice"& _ 
                            "s' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.GroupIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AI() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.AIColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AI' in table 'appUspQuarterlyIntegratedFillTargetSpices' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.AIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedArea() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.ExpectedAreaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedArea' in table 'appUspQuarterlyIntegratedFillTarget"& _ 
                            "Spices' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.ExpectedAreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedProd() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.ExpectedProdColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedProd' in table 'appUspQuarterlyIntegratedFillTarget"& _ 
                            "Spices' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.ExpectedProdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedYield() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.ExpectedYieldColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedYield' in table 'appUspQuarterlyIntegratedFillTarge"& _ 
                            "tSpices' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.ExpectedYieldColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CropName1() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.CropName1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CropName1' in table 'appUspQuarterlyIntegratedFillTargetSpi"& _ 
                            "ces' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.CropName1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.GroupID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupID1' in table 'appUspQuarterlyIntegratedFillTargetSpic"& _ 
                            "es' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.GroupID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AI1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.AI1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AI1' in table 'appUspQuarterlyIntegratedFillTargetSpices' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.AI1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AreaDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.AreaDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AreaDone' in table 'appUspQuarterlyIntegratedFillTargetSpic"& _ 
                            "es' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.AreaDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProdDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.ProdDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProdDone' in table 'appUspQuarterlyIntegratedFillTargetSpic"& _ 
                            "es' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.ProdDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property YieldDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.YieldDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YieldDone' in table 'appUspQuarterlyIntegratedFillTargetSpi"& _ 
                            "ces' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.YieldDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Price() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.PriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Price' in table 'appUspQuarterlyIntegratedFillTargetSpices'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.PriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property maxperiodfrom() As Date
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.maxperiodfromColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'maxperiodfrom' in table 'appUspQuarterlyIntegratedFillTarge"& _ 
                            "tSpices' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.maxperiodfromColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCropNameNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetSpices.CropNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCropNameNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.CropNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetSpices.GroupIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.GroupIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAINull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetSpices.AIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAINull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.AIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedAreaNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetSpices.ExpectedAreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedAreaNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.ExpectedAreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedProdNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetSpices.ExpectedProdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedProdNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.ExpectedProdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedYieldNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetSpices.ExpectedYieldColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedYieldNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.ExpectedYieldColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCropName1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetSpices.CropName1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCropName1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.CropName1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupID1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetSpices.GroupID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupID1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.GroupID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAI1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetSpices.AI1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAI1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.AI1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAreaDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetSpices.AreaDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAreaDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.AreaDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProdDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetSpices.ProdDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProdDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.ProdDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsYieldDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetSpices.YieldDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetYieldDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.YieldDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPriceNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetSpices.PriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPriceNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.PriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmaxperiodfromNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetSpices.maxperiodfromColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmaxperiodfromNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetSpices.maxperiodfromColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class appUspQuarterlyIntegratedFillTargetVegetablesRow
        Inherits Global.System.Data.DataRow
        
        Private tableappUspQuarterlyIntegratedFillTargetVegetables As appUspQuarterlyIntegratedFillTargetVegetablesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableappUspQuarterlyIntegratedFillTargetVegetables = CType(Me.Table,appUspQuarterlyIntegratedFillTargetVegetablesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CropName() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.CropNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CropName' in table 'appUspQuarterlyIntegratedFillTargetVege"& _ 
                            "tables' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.CropNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.GroupIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupID' in table 'appUspQuarterlyIntegratedFillTargetVeget"& _ 
                            "ables' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.GroupIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AI() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.AIColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AI' in table 'appUspQuarterlyIntegratedFillTargetVegetables"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.AIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedArea() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.ExpectedAreaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedArea' in table 'appUspQuarterlyIntegratedFillTarget"& _ 
                            "Vegetables' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.ExpectedAreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedProd() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.ExpectedProdColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedProd' in table 'appUspQuarterlyIntegratedFillTarget"& _ 
                            "Vegetables' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.ExpectedProdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExpectedYield() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.ExpectedYieldColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpectedYield' in table 'appUspQuarterlyIntegratedFillTarge"& _ 
                            "tVegetables' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.ExpectedYieldColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CropName1() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.CropName1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CropName1' in table 'appUspQuarterlyIntegratedFillTargetVeg"& _ 
                            "etables' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.CropName1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.GroupID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupID1' in table 'appUspQuarterlyIntegratedFillTargetVege"& _ 
                            "tables' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.GroupID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AI1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.AI1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AI1' in table 'appUspQuarterlyIntegratedFillTargetVegetable"& _ 
                            "s' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.AI1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AreaDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.AreaDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AreaDone' in table 'appUspQuarterlyIntegratedFillTargetVege"& _ 
                            "tables' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.AreaDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProdDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.ProdDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProdDone' in table 'appUspQuarterlyIntegratedFillTargetVege"& _ 
                            "tables' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.ProdDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property YieldDone() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.YieldDoneColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YieldDone' in table 'appUspQuarterlyIntegratedFillTargetVeg"& _ 
                            "etables' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.YieldDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Price() As Double
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.PriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Price' in table 'appUspQuarterlyIntegratedFillTargetVegetab"& _ 
                            "les' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.PriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property maxperiodfrom() As Date
            Get
                Try 
                    Return CType(Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.maxperiodfromColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'maxperiodfrom' in table 'appUspQuarterlyIntegratedFillTarge"& _ 
                            "tVegetables' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.maxperiodfromColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCropNameNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.CropNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCropNameNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.CropNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.GroupIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupIDNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.GroupIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAINull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.AIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAINull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.AIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedAreaNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.ExpectedAreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedAreaNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.ExpectedAreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedProdNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.ExpectedProdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedProdNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.ExpectedProdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpectedYieldNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.ExpectedYieldColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpectedYieldNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.ExpectedYieldColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCropName1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.CropName1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCropName1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.CropName1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupID1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.GroupID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupID1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.GroupID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAI1Null() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.AI1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAI1Null()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.AI1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAreaDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.AreaDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAreaDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.AreaDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProdDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.ProdDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProdDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.ProdDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsYieldDoneNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.YieldDoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetYieldDoneNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.YieldDoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPriceNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.PriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPriceNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.PriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmaxperiodfromNull() As Boolean
            Return Me.IsNull(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.maxperiodfromColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmaxperiodfromNull()
            Me(Me.tableappUspQuarterlyIntegratedFillTargetVegetables.maxperiodfromColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class rptUspQuarterlyLivestockSlaughteredRow
        Inherits Global.System.Data.DataRow
        
        Private tablerptUspQuarterlyLivestockSlaughtered As rptUspQuarterlyLivestockSlaughteredDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablerptUspQuarterlyLivestockSlaughtered = CType(Me.Table,rptUspQuarterlyLivestockSlaughteredDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListID() As System.Guid
            Get
                Return CType(Me(Me.tablerptUspQuarterlyLivestockSlaughtered.ListIDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tablerptUspQuarterlyLivestockSlaughtered.ListIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListItemSw() As String
            Get
                Try 
                    Return CType(Me(Me.tablerptUspQuarterlyLivestockSlaughtered.ListItemSwColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ListItemSw' in table 'rptUspQuarterlyLivestockSlaughtered' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptUspQuarterlyLivestockSlaughtered.ListItemSwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CNThisQtr() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablerptUspQuarterlyLivestockSlaughtered.CNThisQtrColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CNThisQtr' in table 'rptUspQuarterlyLivestockSlaughtered' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptUspQuarterlyLivestockSlaughtered.CNThisQtrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CN() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablerptUspQuarterlyLivestockSlaughtered.CNColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CN' in table 'rptUspQuarterlyLivestockSlaughtered' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptUspQuarterlyLivestockSlaughtered.CNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CNTotalCarcassWeightThisQtr() As Double
            Get
                Try 
                    Return CType(Me(Me.tablerptUspQuarterlyLivestockSlaughtered.CNTotalCarcassWeightThisQtrColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CNTotalCarcassWeightThisQtr' in table 'rptUspQuarterlyLives"& _ 
                            "tockSlaughtered' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptUspQuarterlyLivestockSlaughtered.CNTotalCarcassWeightThisQtrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CNTotalCarcassWeight() As Double
            Get
                Try 
                    Return CType(Me(Me.tablerptUspQuarterlyLivestockSlaughtered.CNTotalCarcassWeightColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CNTotalCarcassWeight' in table 'rptUspQuarterlyLivestockSla"& _ 
                            "ughtered' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptUspQuarterlyLivestockSlaughtered.CNTotalCarcassWeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ai() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablerptUspQuarterlyLivestockSlaughtered.aiColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ai' in table 'rptUspQuarterlyLivestockSlaughtered' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptUspQuarterlyLivestockSlaughtered.aiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ai1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablerptUspQuarterlyLivestockSlaughtered.ai1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ai1' in table 'rptUspQuarterlyLivestockSlaughtered' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptUspQuarterlyLivestockSlaughtered.ai1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Expr1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablerptUspQuarterlyLivestockSlaughtered.Expr1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Expr1' in table 'rptUspQuarterlyLivestockSlaughtered' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptUspQuarterlyLivestockSlaughtered.Expr1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Expr2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablerptUspQuarterlyLivestockSlaughtered.Expr2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Expr2' in table 'rptUspQuarterlyLivestockSlaughtered' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablerptUspQuarterlyLivestockSlaughtered.Expr2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsListItemSwNull() As Boolean
            Return Me.IsNull(Me.tablerptUspQuarterlyLivestockSlaughtered.ListItemSwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetListItemSwNull()
            Me(Me.tablerptUspQuarterlyLivestockSlaughtered.ListItemSwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCNThisQtrNull() As Boolean
            Return Me.IsNull(Me.tablerptUspQuarterlyLivestockSlaughtered.CNThisQtrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCNThisQtrNull()
            Me(Me.tablerptUspQuarterlyLivestockSlaughtered.CNThisQtrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCNNull() As Boolean
            Return Me.IsNull(Me.tablerptUspQuarterlyLivestockSlaughtered.CNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCNNull()
            Me(Me.tablerptUspQuarterlyLivestockSlaughtered.CNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCNTotalCarcassWeightThisQtrNull() As Boolean
            Return Me.IsNull(Me.tablerptUspQuarterlyLivestockSlaughtered.CNTotalCarcassWeightThisQtrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCNTotalCarcassWeightThisQtrNull()
            Me(Me.tablerptUspQuarterlyLivestockSlaughtered.CNTotalCarcassWeightThisQtrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCNTotalCarcassWeightNull() As Boolean
            Return Me.IsNull(Me.tablerptUspQuarterlyLivestockSlaughtered.CNTotalCarcassWeightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCNTotalCarcassWeightNull()
            Me(Me.tablerptUspQuarterlyLivestockSlaughtered.CNTotalCarcassWeightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsaiNull() As Boolean
            Return Me.IsNull(Me.tablerptUspQuarterlyLivestockSlaughtered.aiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetaiNull()
            Me(Me.tablerptUspQuarterlyLivestockSlaughtered.aiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isai1Null() As Boolean
            Return Me.IsNull(Me.tablerptUspQuarterlyLivestockSlaughtered.ai1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setai1Null()
            Me(Me.tablerptUspQuarterlyLivestockSlaughtered.ai1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpr1Null() As Boolean
            Return Me.IsNull(Me.tablerptUspQuarterlyLivestockSlaughtered.Expr1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpr1Null()
            Me(Me.tablerptUspQuarterlyLivestockSlaughtered.Expr1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpr2Null() As Boolean
            Return Me.IsNull(Me.tablerptUspQuarterlyLivestockSlaughtered.Expr2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpr2Null()
            Me(Me.tablerptUspQuarterlyLivestockSlaughtered.Expr2Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class appUspQuarterlyIntegratedFillPlantHealthRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As appUspQuarterlyIntegratedFillPlantHealthRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As appUspQuarterlyIntegratedFillPlantHealthRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As appUspQuarterlyIntegratedFillPlantHealthRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class appUspQuarterlyIntegratedFillLivestockMovementRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As appUspQuarterlyIntegratedFillLivestockMovementRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As appUspQuarterlyIntegratedFillLivestockMovementRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As appUspQuarterlyIntegratedFillLivestockMovementRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class appUspQuarterlyIntegratedFillProductsMovementRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As appUspQuarterlyIntegratedFillProductsMovementRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As appUspQuarterlyIntegratedFillProductsMovementRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As appUspQuarterlyIntegratedFillProductsMovementRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class appUspQuarterlyIntegratedFillMeatInspectionRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As appUspQuarterlyIntegratedFillMeatInspectionRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As appUspQuarterlyIntegratedFillMeatInspectionRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As appUspQuarterlyIntegratedFillMeatInspectionRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class appUspQuarterlyIntegratedFillAcaricidesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As appUspQuarterlyIntegratedFillAcaricidesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As appUspQuarterlyIntegratedFillAcaricidesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As appUspQuarterlyIntegratedFillAcaricidesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class appUspQuarterlyIntegratedFillTreatmentRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As appUspQuarterlyIntegratedFillTreatmentRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As appUspQuarterlyIntegratedFillTreatmentRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As appUspQuarterlyIntegratedFillTreatmentRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class appUspQuarterlyIntegratedFillVaccinesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As appUspQuarterlyIntegratedFillVaccinesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As appUspQuarterlyIntegratedFillVaccinesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As appUspQuarterlyIntegratedFillVaccinesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class appUspQuarterlyIntegratedFillAnimalsFeedsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As appUspQuarterlyIntegratedFillAnimalsFeedsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As appUspQuarterlyIntegratedFillAnimalsFeedsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As appUspQuarterlyIntegratedFillAnimalsFeedsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class appUspQuarterlyIntegratedFillReproductionInputRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As appUspQuarterlyIntegratedFillReproductionInputRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As appUspQuarterlyIntegratedFillReproductionInputRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As appUspQuarterlyIntegratedFillReproductionInputRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class rptUspQuarterlyTargettRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As rptUspQuarterlyTargettRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As rptUspQuarterlyTargettRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As rptUspQuarterlyTargettRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class appUspQuarterlyIntegratedFillTargetCerealRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As appUspQuarterlyIntegratedFillTargetCerealRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As appUspQuarterlyIntegratedFillTargetCerealRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As appUspQuarterlyIntegratedFillTargetCerealRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class appUspQuarterlyIntegratedFillTargetFlowersRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As appUspQuarterlyIntegratedFillTargetFlowersRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As appUspQuarterlyIntegratedFillTargetFlowersRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As appUspQuarterlyIntegratedFillTargetFlowersRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class appUspQuarterlyIntegratedFillTargetFruitsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As appUspQuarterlyIntegratedFillTargetFruitsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As appUspQuarterlyIntegratedFillTargetFruitsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As appUspQuarterlyIntegratedFillTargetFruitsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class appUspQuarterlyIntegratedFillTargetIndustrialRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As appUspQuarterlyIntegratedFillTargetIndustrialRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As appUspQuarterlyIntegratedFillTargetIndustrialRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As appUspQuarterlyIntegratedFillTargetIndustrialRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class appUspQuarterlyIntegratedFillTargetOilRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As appUspQuarterlyIntegratedFillTargetOilRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As appUspQuarterlyIntegratedFillTargetOilRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As appUspQuarterlyIntegratedFillTargetOilRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class appUspQuarterlyIntegratedFillTargetOthersRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As appUspQuarterlyIntegratedFillTargetOthersRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As appUspQuarterlyIntegratedFillTargetOthersRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As appUspQuarterlyIntegratedFillTargetOthersRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class appUspQuarterlyIntegratedFillTargetPulsesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As appUspQuarterlyIntegratedFillTargetPulsesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As appUspQuarterlyIntegratedFillTargetPulsesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As appUspQuarterlyIntegratedFillTargetPulsesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class appUspQuarterlyIntegratedFillTargetRootsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As appUspQuarterlyIntegratedFillTargetRootsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As appUspQuarterlyIntegratedFillTargetRootsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As appUspQuarterlyIntegratedFillTargetRootsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class appUspQuarterlyIntegratedFillTargetSpicesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As appUspQuarterlyIntegratedFillTargetSpicesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As appUspQuarterlyIntegratedFillTargetSpicesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As appUspQuarterlyIntegratedFillTargetSpicesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class appUspQuarterlyIntegratedFillTargetVegetablesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As appUspQuarterlyIntegratedFillTargetVegetablesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As appUspQuarterlyIntegratedFillTargetVegetablesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As appUspQuarterlyIntegratedFillTargetVegetablesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class rptUspQuarterlyLivestockSlaughteredRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As rptUspQuarterlyLivestockSlaughteredRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As rptUspQuarterlyLivestockSlaughteredRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As rptUspQuarterlyLivestockSlaughteredRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace QuarterlyIntegratedDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class appUspQuarterlyIntegratedFillPlantHealthTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "appUspQuarterlyIntegratedFillPlantHealth"
            tableMapping.ColumnMappings.Add("ChemicalControlID", "ChemicalControlID")
            tableMapping.ColumnMappings.Add("PestID", "PestID")
            tableMapping.ColumnMappings.Add("CropID", "CropID")
            tableMapping.ColumnMappings.Add("Severity", "Severity")
            tableMapping.ColumnMappings.Add("AffectedArea", "AffectedArea")
            tableMapping.ColumnMappings.Add("NumberOfVillageAffected", "NumberOfVillageAffected")
            tableMapping.ColumnMappings.Add("PestcideApplied", "PestcideApplied")
            tableMapping.ColumnMappings.Add("AmountOfPestcideApplied", "AmountOfPestcideApplied")
            tableMapping.ColumnMappings.Add("Unit", "Unit")
            tableMapping.ColumnMappings.Add("NumberOfVillagesServed", "NumberOfVillagesServed")
            tableMapping.ColumnMappings.Add("NumberOfHouseHoldServed", "NumberOfHouseHoldServed")
            tableMapping.ColumnMappings.Add("AreaRescued", "AreaRescued")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            tableMapping.ColumnMappings.Add("IsEstimated", "IsEstimated")
            tableMapping.ColumnMappings.Add("MonthlyRecordID", "MonthlyRecordID")
            tableMapping.ColumnMappings.Add("FormSerialID", "FormSerialID")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "appUspQuarterlyIntegratedFillPlantHealth"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FormSerialNumberIQ", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillPlantHealthDataTable, ByVal FormSerialNumberIQ As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumberIQ Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumberIQ, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal FormSerialNumberIQ As String) As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillPlantHealthDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumberIQ Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumberIQ, String)
            End If
            Dim dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillPlantHealthDataTable = New QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillPlantHealthDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class appUspQuarterlyIntegratedFillLivestockMovementTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "appUspQuarterlyIntegratedFillLivestockMovement"
            tableMapping.ColumnMappings.Add("ListID", "ListID")
            tableMapping.ColumnMappings.Add("ListItemSw", "ListItemSw")
            tableMapping.ColumnMappings.Add("ListItemEn", "ListItemEn")
            tableMapping.ColumnMappings.Add("ListItemStatus", "ListItemStatus")
            tableMapping.ColumnMappings.Add("LivestockMovementID", "LivestockMovementID")
            tableMapping.ColumnMappings.Add("LivestockID", "LivestockID")
            tableMapping.ColumnMappings.Add("AnimalsIntoNonTrade", "AnimalsIntoNonTrade")
            tableMapping.ColumnMappings.Add("AnimalsIntoTradeFromLGA", "AnimalsIntoTradeFromLGA")
            tableMapping.ColumnMappings.Add("AnimalsIntoTradeFromCountries", "AnimalsIntoTradeFromCountries")
            tableMapping.ColumnMappings.Add("AnimalsToNonTrade", "AnimalsToNonTrade")
            tableMapping.ColumnMappings.Add("AnimalsToTradeLGA", "AnimalsToTradeLGA")
            tableMapping.ColumnMappings.Add("AnimalsToTradeCountries", "AnimalsToTradeCountries")
            tableMapping.ColumnMappings.Add("AnimalsTransNonTrade", "AnimalsTransNonTrade")
            tableMapping.ColumnMappings.Add("AnimalsTransTrade", "AnimalsTransTrade")
            tableMapping.ColumnMappings.Add("QuarterlyRecordID", "QuarterlyRecordID")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.appUspQuarterlyIntegratedFillLivestockMovement"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FormSerialNumberIQ", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillLivestockMovementDataTable, ByVal FormSerialNumberIQ As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumberIQ Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumberIQ, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal FormSerialNumberIQ As String) As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillLivestockMovementDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumberIQ Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumberIQ, String)
            End If
            Dim dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillLivestockMovementDataTable = New QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillLivestockMovementDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class appUspQuarterlyIntegratedFillProductsMovementTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "appUspQuarterlyIntegratedFillProductsMovement"
            tableMapping.ColumnMappings.Add("ListID", "ListID")
            tableMapping.ColumnMappings.Add("ListItemEn", "ListItemEn")
            tableMapping.ColumnMappings.Add("ProductMovementID", "ProductMovementID")
            tableMapping.ColumnMappings.Add("ProductID", "ProductID")
            tableMapping.ColumnMappings.Add("SoldWithinDistricts", "SoldWithinDistricts")
            tableMapping.ColumnMappings.Add("SoldOtherDistricts", "SoldOtherDistricts")
            tableMapping.ColumnMappings.Add("SoldOtherCountries", "SoldOtherCountries")
            tableMapping.ColumnMappings.Add("QuarterlyRecordID", "QuarterlyRecordID")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.appUspQuarterlyIntegratedFillProductsMovement"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FormSerialNumberIQ", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillProductsMovementDataTable, ByVal FormSerialNumberIQ As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumberIQ Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumberIQ, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal FormSerialNumberIQ As String) As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillProductsMovementDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumberIQ Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumberIQ, String)
            End If
            Dim dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillProductsMovementDataTable = New QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillProductsMovementDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class appUspQuarterlyIntegratedFillMeatInspectionTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "appUspQuarterlyIntegratedFillMeatInspection"
            tableMapping.ColumnMappings.Add("MeatInspectionID", "MeatInspectionID")
            tableMapping.ColumnMappings.Add("NameofPlaceForSlaughter", "NameofPlaceForSlaughter")
            tableMapping.ColumnMappings.Add("TypeOfAnimal", "TypeOfAnimal")
            tableMapping.ColumnMappings.Add("NumberOfAnimalsAffected", "NumberOfAnimalsAffected")
            tableMapping.ColumnMappings.Add("ReasonsForCondemnations", "ReasonsForCondemnations")
            tableMapping.ColumnMappings.Add("NumberOfCases", "NumberOfCases")
            tableMapping.ColumnMappings.Add("IsEstimated", "IsEstimated")
            tableMapping.ColumnMappings.Add("MonthlyRecordID", "MonthlyRecordID")
            tableMapping.ColumnMappings.Add("FormSerialID", "FormSerialID")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.appUspQuarterlyIntegratedFillMeatInspection"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FormSerialNumberIQ", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillMeatInspectionDataTable, ByVal FormSerialNumberIQ As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumberIQ Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumberIQ, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal FormSerialNumberIQ As String) As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillMeatInspectionDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumberIQ Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumberIQ, String)
            End If
            Dim dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillMeatInspectionDataTable = New QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillMeatInspectionDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class appUspQuarterlyIntegratedFillAcaricidesTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "appUspQuarterlyIntegratedFillAcaricides"
            tableMapping.ColumnMappings.Add("ListID", "ListID")
            tableMapping.ColumnMappings.Add("ListItemSw", "ListItemSw")
            tableMapping.ColumnMappings.Add("ListItemEn", "ListItemEn")
            tableMapping.ColumnMappings.Add("ListItemType", "ListItemType")
            tableMapping.ColumnMappings.Add("ListItemStatus", "ListItemStatus")
            tableMapping.ColumnMappings.Add("AnimalsFeedsID", "AnimalsFeedsID")
            tableMapping.ColumnMappings.Add("FeedsID", "FeedsID")
            tableMapping.ColumnMappings.Add("GenericName", "GenericName")
            tableMapping.ColumnMappings.Add("TradeName", "TradeName")
            tableMapping.ColumnMappings.Add("Source", "Source")
            tableMapping.ColumnMappings.Add("MeasurementUnit", "MeasurementUnit")
            tableMapping.ColumnMappings.Add("QuarterlyRequirement", "QuarterlyRequirement")
            tableMapping.ColumnMappings.Add("QuarterlyAmountUsed", "QuarterlyAmountUsed")
            tableMapping.ColumnMappings.Add("LowPrice", "LowPrice")
            tableMapping.ColumnMappings.Add("HighPrice", "HighPrice")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            tableMapping.ColumnMappings.Add("QuarterlyRecordID", "QuarterlyRecordID")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.appUspQuarterlyIntegratedFillAcaricides"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FormSerialNumberIQ", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillAcaricidesDataTable, ByVal FormSerialNumberIQ As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumberIQ Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumberIQ, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal FormSerialNumberIQ As String) As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillAcaricidesDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumberIQ Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumberIQ, String)
            End If
            Dim dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillAcaricidesDataTable = New QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillAcaricidesDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class appUspQuarterlyIntegratedFillTreatmentTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "appUspQuarterlyIntegratedFillTreatment"
            tableMapping.ColumnMappings.Add("ListID", "ListID")
            tableMapping.ColumnMappings.Add("ListItemSw", "ListItemSw")
            tableMapping.ColumnMappings.Add("ListItemEn", "ListItemEn")
            tableMapping.ColumnMappings.Add("ListItemType", "ListItemType")
            tableMapping.ColumnMappings.Add("ListItemStatus", "ListItemStatus")
            tableMapping.ColumnMappings.Add("AnimalsFeedsID", "AnimalsFeedsID")
            tableMapping.ColumnMappings.Add("FeedsID", "FeedsID")
            tableMapping.ColumnMappings.Add("GenericName", "GenericName")
            tableMapping.ColumnMappings.Add("TradeName", "TradeName")
            tableMapping.ColumnMappings.Add("Source", "Source")
            tableMapping.ColumnMappings.Add("MeasurementUnit", "MeasurementUnit")
            tableMapping.ColumnMappings.Add("QuarterlyRequirement", "QuarterlyRequirement")
            tableMapping.ColumnMappings.Add("QuarterlyAmountUsed", "QuarterlyAmountUsed")
            tableMapping.ColumnMappings.Add("LowPrice", "LowPrice")
            tableMapping.ColumnMappings.Add("HighPrice", "HighPrice")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            tableMapping.ColumnMappings.Add("QuarterlyRecordID", "QuarterlyRecordID")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.appUspQuarterlyIntegratedFillTreatment"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FormSerialNumberIQ", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTreatmentDataTable, ByVal FormSerialNumberIQ As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumberIQ Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumberIQ, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal FormSerialNumberIQ As String) As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTreatmentDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumberIQ Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumberIQ, String)
            End If
            Dim dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTreatmentDataTable = New QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTreatmentDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class appUspQuarterlyIntegratedFillVaccinesTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "appUspQuarterlyIntegratedFillVaccines"
            tableMapping.ColumnMappings.Add("ListID", "ListID")
            tableMapping.ColumnMappings.Add("ListItemSw", "ListItemSw")
            tableMapping.ColumnMappings.Add("ListItemEn", "ListItemEn")
            tableMapping.ColumnMappings.Add("ListItemType", "ListItemType")
            tableMapping.ColumnMappings.Add("ListItemStatus", "ListItemStatus")
            tableMapping.ColumnMappings.Add("AnimalsFeedsID", "AnimalsFeedsID")
            tableMapping.ColumnMappings.Add("FeedsID", "FeedsID")
            tableMapping.ColumnMappings.Add("GenericName", "GenericName")
            tableMapping.ColumnMappings.Add("TradeName", "TradeName")
            tableMapping.ColumnMappings.Add("Source", "Source")
            tableMapping.ColumnMappings.Add("MeasurementUnit", "MeasurementUnit")
            tableMapping.ColumnMappings.Add("QuarterlyRequirement", "QuarterlyRequirement")
            tableMapping.ColumnMappings.Add("QuarterlyAmountUsed", "QuarterlyAmountUsed")
            tableMapping.ColumnMappings.Add("LowPrice", "LowPrice")
            tableMapping.ColumnMappings.Add("HighPrice", "HighPrice")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            tableMapping.ColumnMappings.Add("QuarterlyRecordID", "QuarterlyRecordID")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.appUspQuarterlyIntegratedFillVaccines"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FormSerialNumberIQ", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillVaccinesDataTable, ByVal FormSerialNumberIQ As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumberIQ Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumberIQ, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal FormSerialNumberIQ As String) As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillVaccinesDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumberIQ Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumberIQ, String)
            End If
            Dim dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillVaccinesDataTable = New QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillVaccinesDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class appUspQuarterlyIntegratedFillAnimalsFeedsTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "appUspQuarterlyIntegratedFillAnimalsFeeds"
            tableMapping.ColumnMappings.Add("ListID", "ListID")
            tableMapping.ColumnMappings.Add("ListItemSw", "ListItemSw")
            tableMapping.ColumnMappings.Add("ListItemEn", "ListItemEn")
            tableMapping.ColumnMappings.Add("ListItemType", "ListItemType")
            tableMapping.ColumnMappings.Add("ListItemStatus", "ListItemStatus")
            tableMapping.ColumnMappings.Add("AnimalsFeedsID", "AnimalsFeedsID")
            tableMapping.ColumnMappings.Add("FeedsID", "FeedsID")
            tableMapping.ColumnMappings.Add("GenericName", "GenericName")
            tableMapping.ColumnMappings.Add("TradeName", "TradeName")
            tableMapping.ColumnMappings.Add("Source", "Source")
            tableMapping.ColumnMappings.Add("MeasurementUnit", "MeasurementUnit")
            tableMapping.ColumnMappings.Add("QuarterlyRequirement", "QuarterlyRequirement")
            tableMapping.ColumnMappings.Add("QuarterlyAmountUsed", "QuarterlyAmountUsed")
            tableMapping.ColumnMappings.Add("LowPrice", "LowPrice")
            tableMapping.ColumnMappings.Add("HighPrice", "HighPrice")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            tableMapping.ColumnMappings.Add("QuarterlyRecordID", "QuarterlyRecordID")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.appUspQuarterlyIntegratedFillAnimalsFeeds"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FormSerialNumberIQ", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillAnimalsFeedsDataTable, ByVal FormSerialNumberIQ As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumberIQ Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumberIQ, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal FormSerialNumberIQ As String) As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillAnimalsFeedsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumberIQ Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumberIQ, String)
            End If
            Dim dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillAnimalsFeedsDataTable = New QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillAnimalsFeedsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class appUspQuarterlyIntegratedFillReproductionInputTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "appUspQuarterlyIntegratedFillReproductionInput"
            tableMapping.ColumnMappings.Add("ListID", "ListID")
            tableMapping.ColumnMappings.Add("ListItemSw", "ListItemSw")
            tableMapping.ColumnMappings.Add("ListItemEn", "ListItemEn")
            tableMapping.ColumnMappings.Add("ListItemType", "ListItemType")
            tableMapping.ColumnMappings.Add("ListItemStatus", "ListItemStatus")
            tableMapping.ColumnMappings.Add("ReproductionInputsID", "ReproductionInputsID")
            tableMapping.ColumnMappings.Add("InputID", "InputID")
            tableMapping.ColumnMappings.Add("Breed", "Breed")
            tableMapping.ColumnMappings.Add("AmountRequired", "AmountRequired")
            tableMapping.ColumnMappings.Add("AmountAvailable", "AmountAvailable")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            tableMapping.ColumnMappings.Add("QuarterlyRecordID", "QuarterlyRecordID")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.appUspQuarterlyIntegratedFillReproductionInput"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FormSerialNumberIQ", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillReproductionInputDataTable, ByVal FormSerialNumberIQ As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumberIQ Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumberIQ, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal FormSerialNumberIQ As String) As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillReproductionInputDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumberIQ Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumberIQ, String)
            End If
            Dim dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillReproductionInputDataTable = New QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillReproductionInputDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class rptUspQuarterlyTargettTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "rptUspQuarterlyTargett"
            tableMapping.ColumnMappings.Add("CropName", "CropName")
            tableMapping.ColumnMappings.Add("GroupID", "GroupID")
            tableMapping.ColumnMappings.Add("AI", "AI")
            tableMapping.ColumnMappings.Add("ExpectedArea", "ExpectedArea")
            tableMapping.ColumnMappings.Add("ExpectedProd", "ExpectedProd")
            tableMapping.ColumnMappings.Add("ExpectedYield", "ExpectedYield")
            tableMapping.ColumnMappings.Add("CropName1", "CropName1")
            tableMapping.ColumnMappings.Add("GroupID1", "GroupID1")
            tableMapping.ColumnMappings.Add("AI1", "AI1")
            tableMapping.ColumnMappings.Add("AreaDone", "AreaDone")
            tableMapping.ColumnMappings.Add("ProdDone", "ProdDone")
            tableMapping.ColumnMappings.Add("YieldDone", "YieldDone")
            tableMapping.ColumnMappings.Add("Price", "Price")
            tableMapping.ColumnMappings.Add("maxperiodfrom", "maxperiodfrom")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.rptUspQuarterlyTargett"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FormSerialNumber", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As QuarterlyIntegratedDataSet.rptUspQuarterlyTargettDataTable, ByVal FormSerialNumber As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumber, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal FormSerialNumber As String) As QuarterlyIntegratedDataSet.rptUspQuarterlyTargettDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumber, String)
            End If
            Dim dataTable As QuarterlyIntegratedDataSet.rptUspQuarterlyTargettDataTable = New QuarterlyIntegratedDataSet.rptUspQuarterlyTargettDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class appUspQuarterlyIntegratedFillTargetCerealTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "appUspQuarterlyIntegratedFillTargetCereal"
            tableMapping.ColumnMappings.Add("CropName", "CropName")
            tableMapping.ColumnMappings.Add("GroupID", "GroupID")
            tableMapping.ColumnMappings.Add("AI", "AI")
            tableMapping.ColumnMappings.Add("ExpectedArea", "ExpectedArea")
            tableMapping.ColumnMappings.Add("ExpectedProd", "ExpectedProd")
            tableMapping.ColumnMappings.Add("ExpectedYield", "ExpectedYield")
            tableMapping.ColumnMappings.Add("CropName1", "CropName1")
            tableMapping.ColumnMappings.Add("GroupID1", "GroupID1")
            tableMapping.ColumnMappings.Add("AI1", "AI1")
            tableMapping.ColumnMappings.Add("AreaDone", "AreaDone")
            tableMapping.ColumnMappings.Add("ProdDone", "ProdDone")
            tableMapping.ColumnMappings.Add("YieldDone", "YieldDone")
            tableMapping.ColumnMappings.Add("Price", "Price")
            tableMapping.ColumnMappings.Add("maxperiodfrom", "maxperiodfrom")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.appUspQuarterlyIntegratedFillTargetCereal"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FormSerialNumber", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetCerealDataTable, ByVal FormSerialNumber As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumber, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal FormSerialNumber As String) As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetCerealDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumber, String)
            End If
            Dim dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetCerealDataTable = New QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetCerealDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class appUspQuarterlyIntegratedFillTargetFlowersTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "appUspQuarterlyIntegratedFillTargetFlowers"
            tableMapping.ColumnMappings.Add("CropName", "CropName")
            tableMapping.ColumnMappings.Add("GroupID", "GroupID")
            tableMapping.ColumnMappings.Add("AI", "AI")
            tableMapping.ColumnMappings.Add("ExpectedArea", "ExpectedArea")
            tableMapping.ColumnMappings.Add("ExpectedProd", "ExpectedProd")
            tableMapping.ColumnMappings.Add("ExpectedYield", "ExpectedYield")
            tableMapping.ColumnMappings.Add("CropName1", "CropName1")
            tableMapping.ColumnMappings.Add("GroupID1", "GroupID1")
            tableMapping.ColumnMappings.Add("AI1", "AI1")
            tableMapping.ColumnMappings.Add("AreaDone", "AreaDone")
            tableMapping.ColumnMappings.Add("ProdDone", "ProdDone")
            tableMapping.ColumnMappings.Add("YieldDone", "YieldDone")
            tableMapping.ColumnMappings.Add("Price", "Price")
            tableMapping.ColumnMappings.Add("maxperiodfrom", "maxperiodfrom")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.appUspQuarterlyIntegratedFillTargetFlowers"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FormSerialNumber", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetFlowersDataTable, ByVal FormSerialNumber As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumber, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal FormSerialNumber As String) As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetFlowersDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumber, String)
            End If
            Dim dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetFlowersDataTable = New QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetFlowersDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class appUspQuarterlyIntegratedFillTargetFruitsTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "appUspQuarterlyIntegratedFillTargetFruits"
            tableMapping.ColumnMappings.Add("CropName", "CropName")
            tableMapping.ColumnMappings.Add("GroupID", "GroupID")
            tableMapping.ColumnMappings.Add("AI", "AI")
            tableMapping.ColumnMappings.Add("ExpectedArea", "ExpectedArea")
            tableMapping.ColumnMappings.Add("ExpectedProd", "ExpectedProd")
            tableMapping.ColumnMappings.Add("ExpectedYield", "ExpectedYield")
            tableMapping.ColumnMappings.Add("CropName1", "CropName1")
            tableMapping.ColumnMappings.Add("GroupID1", "GroupID1")
            tableMapping.ColumnMappings.Add("AI1", "AI1")
            tableMapping.ColumnMappings.Add("AreaDone", "AreaDone")
            tableMapping.ColumnMappings.Add("ProdDone", "ProdDone")
            tableMapping.ColumnMappings.Add("YieldDone", "YieldDone")
            tableMapping.ColumnMappings.Add("Price", "Price")
            tableMapping.ColumnMappings.Add("maxperiodfrom", "maxperiodfrom")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.appUspQuarterlyIntegratedFillTargetFruits"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FormSerialNumber", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetFruitsDataTable, ByVal FormSerialNumber As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumber, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal FormSerialNumber As String) As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetFruitsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumber, String)
            End If
            Dim dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetFruitsDataTable = New QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetFruitsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class appUspQuarterlyIntegratedFillTargetIndustrialTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "appUspQuarterlyIntegratedFillTargetIndustrial"
            tableMapping.ColumnMappings.Add("CropName", "CropName")
            tableMapping.ColumnMappings.Add("GroupID", "GroupID")
            tableMapping.ColumnMappings.Add("AI", "AI")
            tableMapping.ColumnMappings.Add("ExpectedArea", "ExpectedArea")
            tableMapping.ColumnMappings.Add("ExpectedProd", "ExpectedProd")
            tableMapping.ColumnMappings.Add("ExpectedYield", "ExpectedYield")
            tableMapping.ColumnMappings.Add("CropName1", "CropName1")
            tableMapping.ColumnMappings.Add("GroupID1", "GroupID1")
            tableMapping.ColumnMappings.Add("AI1", "AI1")
            tableMapping.ColumnMappings.Add("AreaDone", "AreaDone")
            tableMapping.ColumnMappings.Add("ProdDone", "ProdDone")
            tableMapping.ColumnMappings.Add("YieldDone", "YieldDone")
            tableMapping.ColumnMappings.Add("Price", "Price")
            tableMapping.ColumnMappings.Add("maxperiodfrom", "maxperiodfrom")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.appUspQuarterlyIntegratedFillTargetIndustrial"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FormSerialNumber", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetIndustrialDataTable, ByVal FormSerialNumber As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumber, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal FormSerialNumber As String) As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetIndustrialDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumber, String)
            End If
            Dim dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetIndustrialDataTable = New QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetIndustrialDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class appUspQuarterlyIntegratedFillTargetOilTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "appUspQuarterlyIntegratedFillTargetOil"
            tableMapping.ColumnMappings.Add("CropName", "CropName")
            tableMapping.ColumnMappings.Add("GroupID", "GroupID")
            tableMapping.ColumnMappings.Add("AI", "AI")
            tableMapping.ColumnMappings.Add("ExpectedArea", "ExpectedArea")
            tableMapping.ColumnMappings.Add("ExpectedProd", "ExpectedProd")
            tableMapping.ColumnMappings.Add("ExpectedYield", "ExpectedYield")
            tableMapping.ColumnMappings.Add("CropName1", "CropName1")
            tableMapping.ColumnMappings.Add("GroupID1", "GroupID1")
            tableMapping.ColumnMappings.Add("AI1", "AI1")
            tableMapping.ColumnMappings.Add("AreaDone", "AreaDone")
            tableMapping.ColumnMappings.Add("ProdDone", "ProdDone")
            tableMapping.ColumnMappings.Add("YieldDone", "YieldDone")
            tableMapping.ColumnMappings.Add("Price", "Price")
            tableMapping.ColumnMappings.Add("maxperiodfrom", "maxperiodfrom")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.appUspQuarterlyIntegratedFillTargetOil"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FormSerialNumber", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetOilDataTable, ByVal FormSerialNumber As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumber, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal FormSerialNumber As String) As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetOilDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumber, String)
            End If
            Dim dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetOilDataTable = New QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetOilDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class appUspQuarterlyIntegratedFillTargetOthersTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "appUspQuarterlyIntegratedFillTargetOthers"
            tableMapping.ColumnMappings.Add("CropName", "CropName")
            tableMapping.ColumnMappings.Add("GroupID", "GroupID")
            tableMapping.ColumnMappings.Add("AI", "AI")
            tableMapping.ColumnMappings.Add("ExpectedArea", "ExpectedArea")
            tableMapping.ColumnMappings.Add("ExpectedProd", "ExpectedProd")
            tableMapping.ColumnMappings.Add("ExpectedYield", "ExpectedYield")
            tableMapping.ColumnMappings.Add("CropName1", "CropName1")
            tableMapping.ColumnMappings.Add("GroupID1", "GroupID1")
            tableMapping.ColumnMappings.Add("AI1", "AI1")
            tableMapping.ColumnMappings.Add("AreaDone", "AreaDone")
            tableMapping.ColumnMappings.Add("ProdDone", "ProdDone")
            tableMapping.ColumnMappings.Add("YieldDone", "YieldDone")
            tableMapping.ColumnMappings.Add("Price", "Price")
            tableMapping.ColumnMappings.Add("maxperiodfrom", "maxperiodfrom")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.appUspQuarterlyIntegratedFillTargetOthers"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FormSerialNumber", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetOthersDataTable, ByVal FormSerialNumber As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumber, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal FormSerialNumber As String) As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetOthersDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumber, String)
            End If
            Dim dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetOthersDataTable = New QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetOthersDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class appUspQuarterlyIntegratedFillTargetPulsesTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "appUspQuarterlyIntegratedFillTargetPulses"
            tableMapping.ColumnMappings.Add("CropName", "CropName")
            tableMapping.ColumnMappings.Add("GroupID", "GroupID")
            tableMapping.ColumnMappings.Add("AI", "AI")
            tableMapping.ColumnMappings.Add("ExpectedArea", "ExpectedArea")
            tableMapping.ColumnMappings.Add("ExpectedProd", "ExpectedProd")
            tableMapping.ColumnMappings.Add("ExpectedYield", "ExpectedYield")
            tableMapping.ColumnMappings.Add("CropName1", "CropName1")
            tableMapping.ColumnMappings.Add("GroupID1", "GroupID1")
            tableMapping.ColumnMappings.Add("AI1", "AI1")
            tableMapping.ColumnMappings.Add("AreaDone", "AreaDone")
            tableMapping.ColumnMappings.Add("ProdDone", "ProdDone")
            tableMapping.ColumnMappings.Add("YieldDone", "YieldDone")
            tableMapping.ColumnMappings.Add("Price", "Price")
            tableMapping.ColumnMappings.Add("maxperiodfrom", "maxperiodfrom")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.appUspQuarterlyIntegratedFillTargetPulses"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FormSerialNumber", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetPulsesDataTable, ByVal FormSerialNumber As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumber, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal FormSerialNumber As String) As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetPulsesDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumber, String)
            End If
            Dim dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetPulsesDataTable = New QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetPulsesDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class appUspQuarterlyIntegratedFillTargetRootsTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "appUspQuarterlyIntegratedFillTargetRoots"
            tableMapping.ColumnMappings.Add("CropName", "CropName")
            tableMapping.ColumnMappings.Add("GroupID", "GroupID")
            tableMapping.ColumnMappings.Add("AI", "AI")
            tableMapping.ColumnMappings.Add("ExpectedArea", "ExpectedArea")
            tableMapping.ColumnMappings.Add("ExpectedProd", "ExpectedProd")
            tableMapping.ColumnMappings.Add("ExpectedYield", "ExpectedYield")
            tableMapping.ColumnMappings.Add("CropName1", "CropName1")
            tableMapping.ColumnMappings.Add("GroupID1", "GroupID1")
            tableMapping.ColumnMappings.Add("AI1", "AI1")
            tableMapping.ColumnMappings.Add("AreaDone", "AreaDone")
            tableMapping.ColumnMappings.Add("ProdDone", "ProdDone")
            tableMapping.ColumnMappings.Add("YieldDone", "YieldDone")
            tableMapping.ColumnMappings.Add("Price", "Price")
            tableMapping.ColumnMappings.Add("maxperiodfrom", "maxperiodfrom")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.appUspQuarterlyIntegratedFillTargetRoots"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FormSerialNumber", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetRootsDataTable, ByVal FormSerialNumber As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumber, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal FormSerialNumber As String) As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetRootsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumber, String)
            End If
            Dim dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetRootsDataTable = New QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetRootsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class appUspQuarterlyIntegratedFillTargetSpicesTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "appUspQuarterlyIntegratedFillTargetSpices"
            tableMapping.ColumnMappings.Add("CropName", "CropName")
            tableMapping.ColumnMappings.Add("GroupID", "GroupID")
            tableMapping.ColumnMappings.Add("AI", "AI")
            tableMapping.ColumnMappings.Add("ExpectedArea", "ExpectedArea")
            tableMapping.ColumnMappings.Add("ExpectedProd", "ExpectedProd")
            tableMapping.ColumnMappings.Add("ExpectedYield", "ExpectedYield")
            tableMapping.ColumnMappings.Add("CropName1", "CropName1")
            tableMapping.ColumnMappings.Add("GroupID1", "GroupID1")
            tableMapping.ColumnMappings.Add("AI1", "AI1")
            tableMapping.ColumnMappings.Add("AreaDone", "AreaDone")
            tableMapping.ColumnMappings.Add("ProdDone", "ProdDone")
            tableMapping.ColumnMappings.Add("YieldDone", "YieldDone")
            tableMapping.ColumnMappings.Add("Price", "Price")
            tableMapping.ColumnMappings.Add("maxperiodfrom", "maxperiodfrom")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.appUspQuarterlyIntegratedFillTargetSpices"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FormSerialNumber", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetSpicesDataTable, ByVal FormSerialNumber As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumber, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal FormSerialNumber As String) As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetSpicesDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumber, String)
            End If
            Dim dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetSpicesDataTable = New QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetSpicesDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class appUspQuarterlyIntegratedFillTargetVegetablesTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "appUspQuarterlyIntegratedFillTargetVegetables"
            tableMapping.ColumnMappings.Add("CropName", "CropName")
            tableMapping.ColumnMappings.Add("GroupID", "GroupID")
            tableMapping.ColumnMappings.Add("AI", "AI")
            tableMapping.ColumnMappings.Add("ExpectedArea", "ExpectedArea")
            tableMapping.ColumnMappings.Add("ExpectedProd", "ExpectedProd")
            tableMapping.ColumnMappings.Add("ExpectedYield", "ExpectedYield")
            tableMapping.ColumnMappings.Add("CropName1", "CropName1")
            tableMapping.ColumnMappings.Add("GroupID1", "GroupID1")
            tableMapping.ColumnMappings.Add("AI1", "AI1")
            tableMapping.ColumnMappings.Add("AreaDone", "AreaDone")
            tableMapping.ColumnMappings.Add("ProdDone", "ProdDone")
            tableMapping.ColumnMappings.Add("YieldDone", "YieldDone")
            tableMapping.ColumnMappings.Add("Price", "Price")
            tableMapping.ColumnMappings.Add("maxperiodfrom", "maxperiodfrom")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.appUspQuarterlyIntegratedFillTargetVegetables"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FormSerialNumber", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetVegetablesDataTable, ByVal FormSerialNumber As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumber, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal FormSerialNumber As String) As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetVegetablesDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumber, String)
            End If
            Dim dataTable As QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetVegetablesDataTable = New QuarterlyIntegratedDataSet.appUspQuarterlyIntegratedFillTargetVegetablesDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class rptUspQuarterlyLivestockSlaughteredTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "rptUspQuarterlyLivestockSlaughtered"
            tableMapping.ColumnMappings.Add("ListID", "ListID")
            tableMapping.ColumnMappings.Add("ListItemSw", "ListItemSw")
            tableMapping.ColumnMappings.Add("CNThisQtr", "CNThisQtr")
            tableMapping.ColumnMappings.Add("CN", "CN")
            tableMapping.ColumnMappings.Add("CNTotalCarcassWeightThisQtr", "CNTotalCarcassWeightThisQtr")
            tableMapping.ColumnMappings.Add("CNTotalCarcassWeight", "CNTotalCarcassWeight")
            tableMapping.ColumnMappings.Add("ai", "ai")
            tableMapping.ColumnMappings.Add("ai1", "ai1")
            tableMapping.ColumnMappings.Add("Expr1", "Expr1")
            tableMapping.ColumnMappings.Add("Expr2", "Expr2")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.rptUspQuarterlyLivestockSlaughtered"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FormSerialNumber", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As QuarterlyIntegratedDataSet.rptUspQuarterlyLivestockSlaughteredDataTable, ByVal FormSerialNumber As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumber, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal FormSerialNumber As String) As QuarterlyIntegratedDataSet.rptUspQuarterlyLivestockSlaughteredDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FormSerialNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FormSerialNumber, String)
            End If
            Dim dataTable As QuarterlyIntegratedDataSet.rptUspQuarterlyLivestockSlaughteredDataTable = New QuarterlyIntegratedDataSet.rptUspQuarterlyLivestockSlaughteredDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As QuarterlyIntegratedDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As QuarterlyIntegratedDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As QuarterlyIntegratedDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As QuarterlyIntegratedDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
