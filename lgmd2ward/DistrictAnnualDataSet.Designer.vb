'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18331
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DistrictAnnualDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DistrictAnnualDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableExtensionOfficersTrained05 As ExtensionOfficersTrained05DataTable
    
    Private tableFFSGroup As FFSGroupDataTable
    
    Private tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop As appUspDistrictAnnualFillExtensionOfficersTrainedCropDataTable
    
    Private tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery As appUspDistrictAnnualFillExtensionOfficersTrainedFisheryDataTable
    
    Private tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation As appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationDataTable
    
    Private tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock As appUspDistrictAnnualFillExtensionOfficersTrainedLivestockDataTable
    
    Private tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing As appUspDistrictAnnualFillExtensionOfficersTrainedMarketingDataTable
    
    Private tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers As appUspDistrictAnnualFillExtensionOfficersTrainedOthersDataTable
    
    Private relationFK_ExtensionOfficersTrained05_FFSGroup As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("ExtensionOfficersTrained05")) Is Nothing) Then
                MyBase.Tables.Add(New ExtensionOfficersTrained05DataTable(ds.Tables("ExtensionOfficersTrained05")))
            End If
            If (Not (ds.Tables("FFSGroup")) Is Nothing) Then
                MyBase.Tables.Add(New FFSGroupDataTable(ds.Tables("FFSGroup")))
            End If
            If (Not (ds.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedCrop")) Is Nothing) Then
                MyBase.Tables.Add(New appUspDistrictAnnualFillExtensionOfficersTrainedCropDataTable(ds.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedCrop")))
            End If
            If (Not (ds.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedFishery")) Is Nothing) Then
                MyBase.Tables.Add(New appUspDistrictAnnualFillExtensionOfficersTrainedFisheryDataTable(ds.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedFishery")))
            End If
            If (Not (ds.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedIrrigation")) Is Nothing) Then
                MyBase.Tables.Add(New appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationDataTable(ds.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedIrrigation")))
            End If
            If (Not (ds.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedLivestock")) Is Nothing) Then
                MyBase.Tables.Add(New appUspDistrictAnnualFillExtensionOfficersTrainedLivestockDataTable(ds.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedLivestock")))
            End If
            If (Not (ds.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedMarketing")) Is Nothing) Then
                MyBase.Tables.Add(New appUspDistrictAnnualFillExtensionOfficersTrainedMarketingDataTable(ds.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedMarketing")))
            End If
            If (Not (ds.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedOthers")) Is Nothing) Then
                MyBase.Tables.Add(New appUspDistrictAnnualFillExtensionOfficersTrainedOthersDataTable(ds.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedOthers")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ExtensionOfficersTrained05() As ExtensionOfficersTrained05DataTable
        Get
            Return Me.tableExtensionOfficersTrained05
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FFSGroup() As FFSGroupDataTable
        Get
            Return Me.tableFFSGroup
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property appUspDistrictAnnualFillExtensionOfficersTrainedCrop() As appUspDistrictAnnualFillExtensionOfficersTrainedCropDataTable
        Get
            Return Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property appUspDistrictAnnualFillExtensionOfficersTrainedFishery() As appUspDistrictAnnualFillExtensionOfficersTrainedFisheryDataTable
        Get
            Return Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property appUspDistrictAnnualFillExtensionOfficersTrainedIrrigation() As appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationDataTable
        Get
            Return Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property appUspDistrictAnnualFillExtensionOfficersTrainedLivestock() As appUspDistrictAnnualFillExtensionOfficersTrainedLivestockDataTable
        Get
            Return Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property appUspDistrictAnnualFillExtensionOfficersTrainedMarketing() As appUspDistrictAnnualFillExtensionOfficersTrainedMarketingDataTable
        Get
            Return Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property appUspDistrictAnnualFillExtensionOfficersTrainedOthers() As appUspDistrictAnnualFillExtensionOfficersTrainedOthersDataTable
        Get
            Return Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DistrictAnnualDataSet = CType(MyBase.Clone,DistrictAnnualDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("ExtensionOfficersTrained05")) Is Nothing) Then
                MyBase.Tables.Add(New ExtensionOfficersTrained05DataTable(ds.Tables("ExtensionOfficersTrained05")))
            End If
            If (Not (ds.Tables("FFSGroup")) Is Nothing) Then
                MyBase.Tables.Add(New FFSGroupDataTable(ds.Tables("FFSGroup")))
            End If
            If (Not (ds.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedCrop")) Is Nothing) Then
                MyBase.Tables.Add(New appUspDistrictAnnualFillExtensionOfficersTrainedCropDataTable(ds.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedCrop")))
            End If
            If (Not (ds.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedFishery")) Is Nothing) Then
                MyBase.Tables.Add(New appUspDistrictAnnualFillExtensionOfficersTrainedFisheryDataTable(ds.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedFishery")))
            End If
            If (Not (ds.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedIrrigation")) Is Nothing) Then
                MyBase.Tables.Add(New appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationDataTable(ds.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedIrrigation")))
            End If
            If (Not (ds.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedLivestock")) Is Nothing) Then
                MyBase.Tables.Add(New appUspDistrictAnnualFillExtensionOfficersTrainedLivestockDataTable(ds.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedLivestock")))
            End If
            If (Not (ds.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedMarketing")) Is Nothing) Then
                MyBase.Tables.Add(New appUspDistrictAnnualFillExtensionOfficersTrainedMarketingDataTable(ds.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedMarketing")))
            End If
            If (Not (ds.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedOthers")) Is Nothing) Then
                MyBase.Tables.Add(New appUspDistrictAnnualFillExtensionOfficersTrainedOthersDataTable(ds.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedOthers")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableExtensionOfficersTrained05 = CType(MyBase.Tables("ExtensionOfficersTrained05"),ExtensionOfficersTrained05DataTable)
        If (initTable = true) Then
            If (Not (Me.tableExtensionOfficersTrained05) Is Nothing) Then
                Me.tableExtensionOfficersTrained05.InitVars
            End If
        End If
        Me.tableFFSGroup = CType(MyBase.Tables("FFSGroup"),FFSGroupDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFFSGroup) Is Nothing) Then
                Me.tableFFSGroup.InitVars
            End If
        End If
        Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop = CType(MyBase.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedCrop"),appUspDistrictAnnualFillExtensionOfficersTrainedCropDataTable)
        If (initTable = true) Then
            If (Not (Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop) Is Nothing) Then
                Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.InitVars
            End If
        End If
        Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery = CType(MyBase.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedFishery"),appUspDistrictAnnualFillExtensionOfficersTrainedFisheryDataTable)
        If (initTable = true) Then
            If (Not (Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery) Is Nothing) Then
                Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.InitVars
            End If
        End If
        Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation = CType(MyBase.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedIrrigation"),appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationDataTable)
        If (initTable = true) Then
            If (Not (Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation) Is Nothing) Then
                Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.InitVars
            End If
        End If
        Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock = CType(MyBase.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedLivestock"),appUspDistrictAnnualFillExtensionOfficersTrainedLivestockDataTable)
        If (initTable = true) Then
            If (Not (Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock) Is Nothing) Then
                Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.InitVars
            End If
        End If
        Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing = CType(MyBase.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedMarketing"),appUspDistrictAnnualFillExtensionOfficersTrainedMarketingDataTable)
        If (initTable = true) Then
            If (Not (Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing) Is Nothing) Then
                Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.InitVars
            End If
        End If
        Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers = CType(MyBase.Tables("appUspDistrictAnnualFillExtensionOfficersTrainedOthers"),appUspDistrictAnnualFillExtensionOfficersTrainedOthersDataTable)
        If (initTable = true) Then
            If (Not (Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers) Is Nothing) Then
                Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.InitVars
            End If
        End If
        Me.relationFK_ExtensionOfficersTrained05_FFSGroup = Me.Relations("FK_ExtensionOfficersTrained05_FFSGroup")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DistrictAnnualDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DistrictAnnualDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableExtensionOfficersTrained05 = New ExtensionOfficersTrained05DataTable()
        MyBase.Tables.Add(Me.tableExtensionOfficersTrained05)
        Me.tableFFSGroup = New FFSGroupDataTable()
        MyBase.Tables.Add(Me.tableFFSGroup)
        Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop = New appUspDistrictAnnualFillExtensionOfficersTrainedCropDataTable()
        MyBase.Tables.Add(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop)
        Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery = New appUspDistrictAnnualFillExtensionOfficersTrainedFisheryDataTable()
        MyBase.Tables.Add(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery)
        Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation = New appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationDataTable()
        MyBase.Tables.Add(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation)
        Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock = New appUspDistrictAnnualFillExtensionOfficersTrainedLivestockDataTable()
        MyBase.Tables.Add(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock)
        Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing = New appUspDistrictAnnualFillExtensionOfficersTrainedMarketingDataTable()
        MyBase.Tables.Add(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing)
        Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers = New appUspDistrictAnnualFillExtensionOfficersTrainedOthersDataTable()
        MyBase.Tables.Add(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers)
        Me.relationFK_ExtensionOfficersTrained05_FFSGroup = New Global.System.Data.DataRelation("FK_ExtensionOfficersTrained05_FFSGroup", New Global.System.Data.DataColumn() {Me.tableFFSGroup.GroupIDColumn}, New Global.System.Data.DataColumn() {Me.tableExtensionOfficersTrained05.FieldIDColumn}, false)
        Me.Relations.Add(Me.relationFK_ExtensionOfficersTrained05_FFSGroup)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeExtensionOfficersTrained05() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFFSGroup() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeappUspDistrictAnnualFillExtensionOfficersTrainedCrop() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeappUspDistrictAnnualFillExtensionOfficersTrainedFishery() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeappUspDistrictAnnualFillExtensionOfficersTrainedLivestock() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeappUspDistrictAnnualFillExtensionOfficersTrainedMarketing() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeappUspDistrictAnnualFillExtensionOfficersTrainedOthers() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DistrictAnnualDataSet = New DistrictAnnualDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ExtensionOfficersTrained05RowChangeEventHandler(ByVal sender As Object, ByVal e As ExtensionOfficersTrained05RowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FFSGroupRowChangeEventHandler(ByVal sender As Object, ByVal e As FFSGroupRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub appUspDistrictAnnualFillExtensionOfficersTrainedCropRowChangeEventHandler(ByVal sender As Object, ByVal e As appUspDistrictAnnualFillExtensionOfficersTrainedCropRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRowChangeEventHandler(ByVal sender As Object, ByVal e As appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRowChangeEventHandler(ByVal sender As Object, ByVal e As appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRowChangeEventHandler(ByVal sender As Object, ByVal e As appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRowChangeEventHandler(ByVal sender As Object, ByVal e As appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub appUspDistrictAnnualFillExtensionOfficersTrainedOthersRowChangeEventHandler(ByVal sender As Object, ByVal e As appUspDistrictAnnualFillExtensionOfficersTrainedOthersRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ExtensionOfficersTrained05DataTable
        Inherits Global.System.Data.TypedTableBase(Of ExtensionOfficersTrained05Row)
        
        Private columnExtensionOfficersTrainedID As Global.System.Data.DataColumn
        
        Private columnFieldID As Global.System.Data.DataColumn
        
        Private columnFieldActivity As Global.System.Data.DataColumn
        
        Private columnNumberOfMaleOfficersTrained As Global.System.Data.DataColumn
        
        Private columnNumberOfFemaleOfficersTrained As Global.System.Data.DataColumn
        
        Private columnNumberOfOfficersTrainedLessThanSixMonths As Global.System.Data.DataColumn
        
        Private columnNumberOfOfficersTrainedMoreThanSixMonths As Global.System.Data.DataColumn
        
        Private columnTrainingMethods As Global.System.Data.DataColumn
        
        Private columnTrainingProviders As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnAnnuallyRecordID As Global.System.Data.DataColumn
        
        Private columnFormSerialID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ExtensionOfficersTrained05"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExtensionOfficersTrainedIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExtensionOfficersTrainedID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FieldIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFieldID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FieldActivityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFieldActivity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfMaleOfficersTrainedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfMaleOfficersTrained
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfFemaleOfficersTrainedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfFemaleOfficersTrained
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfOfficersTrainedLessThanSixMonthsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfOfficersTrainedLessThanSixMonths
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfOfficersTrainedMoreThanSixMonthsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfOfficersTrainedMoreThanSixMonths
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TrainingMethodsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTrainingMethods
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TrainingProvidersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTrainingProviders
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnnuallyRecordIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnnuallyRecordID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FormSerialIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFormSerialID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ExtensionOfficersTrained05Row
            Get
                Return CType(Me.Rows(index),ExtensionOfficersTrained05Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ExtensionOfficersTrained05RowChanging As ExtensionOfficersTrained05RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ExtensionOfficersTrained05RowChanged As ExtensionOfficersTrained05RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ExtensionOfficersTrained05RowDeleting As ExtensionOfficersTrained05RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ExtensionOfficersTrained05RowDeleted As ExtensionOfficersTrained05RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddExtensionOfficersTrained05Row(ByVal row As ExtensionOfficersTrained05Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddExtensionOfficersTrained05Row(ByVal ExtensionOfficersTrainedID As System.Guid, ByVal parentFFSGroupRowByFK_ExtensionOfficersTrained05_FFSGroup As FFSGroupRow, ByVal FieldActivity As String, ByVal NumberOfMaleOfficersTrained As Integer, ByVal NumberOfFemaleOfficersTrained As Integer, ByVal NumberOfOfficersTrainedLessThanSixMonths As Integer, ByVal NumberOfOfficersTrainedMoreThanSixMonths As Integer, ByVal TrainingMethods As String, ByVal TrainingProviders As String, ByVal Remarks As String, ByVal AnnuallyRecordID As System.Guid, ByVal FormSerialID As String) As ExtensionOfficersTrained05Row
            Dim rowExtensionOfficersTrained05Row As ExtensionOfficersTrained05Row = CType(Me.NewRow,ExtensionOfficersTrained05Row)
            Dim columnValuesArray() As Object = New Object() {ExtensionOfficersTrainedID, Nothing, FieldActivity, NumberOfMaleOfficersTrained, NumberOfFemaleOfficersTrained, NumberOfOfficersTrainedLessThanSixMonths, NumberOfOfficersTrainedMoreThanSixMonths, TrainingMethods, TrainingProviders, Remarks, AnnuallyRecordID, FormSerialID}
            If (Not (parentFFSGroupRowByFK_ExtensionOfficersTrained05_FFSGroup) Is Nothing) Then
                columnValuesArray(1) = parentFFSGroupRowByFK_ExtensionOfficersTrained05_FFSGroup(0)
            End If
            rowExtensionOfficersTrained05Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowExtensionOfficersTrained05Row)
            Return rowExtensionOfficersTrained05Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByExtensionOfficersTrainedID(ByVal ExtensionOfficersTrainedID As System.Guid) As ExtensionOfficersTrained05Row
            Return CType(Me.Rows.Find(New Object() {ExtensionOfficersTrainedID}),ExtensionOfficersTrained05Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ExtensionOfficersTrained05DataTable = CType(MyBase.Clone,ExtensionOfficersTrained05DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ExtensionOfficersTrained05DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnExtensionOfficersTrainedID = MyBase.Columns("ExtensionOfficersTrainedID")
            Me.columnFieldID = MyBase.Columns("FieldID")
            Me.columnFieldActivity = MyBase.Columns("FieldActivity")
            Me.columnNumberOfMaleOfficersTrained = MyBase.Columns("NumberOfMaleOfficersTrained")
            Me.columnNumberOfFemaleOfficersTrained = MyBase.Columns("NumberOfFemaleOfficersTrained")
            Me.columnNumberOfOfficersTrainedLessThanSixMonths = MyBase.Columns("NumberOfOfficersTrainedLessThanSixMonths")
            Me.columnNumberOfOfficersTrainedMoreThanSixMonths = MyBase.Columns("NumberOfOfficersTrainedMoreThanSixMonths")
            Me.columnTrainingMethods = MyBase.Columns("TrainingMethods")
            Me.columnTrainingProviders = MyBase.Columns("TrainingProviders")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnAnnuallyRecordID = MyBase.Columns("AnnuallyRecordID")
            Me.columnFormSerialID = MyBase.Columns("FormSerialID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnExtensionOfficersTrainedID = New Global.System.Data.DataColumn("ExtensionOfficersTrainedID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExtensionOfficersTrainedID)
            Me.columnFieldID = New Global.System.Data.DataColumn("FieldID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFieldID)
            Me.columnFieldActivity = New Global.System.Data.DataColumn("FieldActivity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFieldActivity)
            Me.columnNumberOfMaleOfficersTrained = New Global.System.Data.DataColumn("NumberOfMaleOfficersTrained", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfMaleOfficersTrained)
            Me.columnNumberOfFemaleOfficersTrained = New Global.System.Data.DataColumn("NumberOfFemaleOfficersTrained", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfFemaleOfficersTrained)
            Me.columnNumberOfOfficersTrainedLessThanSixMonths = New Global.System.Data.DataColumn("NumberOfOfficersTrainedLessThanSixMonths", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfOfficersTrainedLessThanSixMonths)
            Me.columnNumberOfOfficersTrainedMoreThanSixMonths = New Global.System.Data.DataColumn("NumberOfOfficersTrainedMoreThanSixMonths", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfOfficersTrainedMoreThanSixMonths)
            Me.columnTrainingMethods = New Global.System.Data.DataColumn("TrainingMethods", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTrainingMethods)
            Me.columnTrainingProviders = New Global.System.Data.DataColumn("TrainingProviders", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTrainingProviders)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnAnnuallyRecordID = New Global.System.Data.DataColumn("AnnuallyRecordID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnnuallyRecordID)
            Me.columnFormSerialID = New Global.System.Data.DataColumn("FormSerialID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFormSerialID)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnExtensionOfficersTrainedID}, true))
            Me.columnExtensionOfficersTrainedID.AllowDBNull = false
            Me.columnExtensionOfficersTrainedID.Unique = true
            Me.columnFieldActivity.MaxLength = 50
            Me.columnTrainingMethods.MaxLength = 50
            Me.columnTrainingProviders.MaxLength = 50
            Me.columnRemarks.MaxLength = 50
            Me.columnFormSerialID.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewExtensionOfficersTrained05Row() As ExtensionOfficersTrained05Row
            Return CType(Me.NewRow,ExtensionOfficersTrained05Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ExtensionOfficersTrained05Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ExtensionOfficersTrained05Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ExtensionOfficersTrained05RowChangedEvent) Is Nothing) Then
                RaiseEvent ExtensionOfficersTrained05RowChanged(Me, New ExtensionOfficersTrained05RowChangeEvent(CType(e.Row,ExtensionOfficersTrained05Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ExtensionOfficersTrained05RowChangingEvent) Is Nothing) Then
                RaiseEvent ExtensionOfficersTrained05RowChanging(Me, New ExtensionOfficersTrained05RowChangeEvent(CType(e.Row,ExtensionOfficersTrained05Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ExtensionOfficersTrained05RowDeletedEvent) Is Nothing) Then
                RaiseEvent ExtensionOfficersTrained05RowDeleted(Me, New ExtensionOfficersTrained05RowChangeEvent(CType(e.Row,ExtensionOfficersTrained05Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ExtensionOfficersTrained05RowDeletingEvent) Is Nothing) Then
                RaiseEvent ExtensionOfficersTrained05RowDeleting(Me, New ExtensionOfficersTrained05RowChangeEvent(CType(e.Row,ExtensionOfficersTrained05Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveExtensionOfficersTrained05Row(ByVal row As ExtensionOfficersTrained05Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DistrictAnnualDataSet = New DistrictAnnualDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ExtensionOfficersTrained05DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FFSGroupDataTable
        Inherits Global.System.Data.TypedTableBase(Of FFSGroupRow)
        
        Private columnGroupID As Global.System.Data.DataColumn
        
        Private columnGroupName As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FFSGroup"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FFSGroupRow
            Get
                Return CType(Me.Rows(index),FFSGroupRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FFSGroupRowChanging As FFSGroupRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FFSGroupRowChanged As FFSGroupRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FFSGroupRowDeleting As FFSGroupRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FFSGroupRowDeleted As FFSGroupRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFFSGroupRow(ByVal row As FFSGroupRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFFSGroupRow(ByVal GroupID As Integer, ByVal GroupName As String) As FFSGroupRow
            Dim rowFFSGroupRow As FFSGroupRow = CType(Me.NewRow,FFSGroupRow)
            Dim columnValuesArray() As Object = New Object() {GroupID, GroupName}
            rowFFSGroupRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFFSGroupRow)
            Return rowFFSGroupRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByGroupID(ByVal GroupID As Integer) As FFSGroupRow
            Return CType(Me.Rows.Find(New Object() {GroupID}),FFSGroupRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FFSGroupDataTable = CType(MyBase.Clone,FFSGroupDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FFSGroupDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGroupID = MyBase.Columns("GroupID")
            Me.columnGroupName = MyBase.Columns("GroupName")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGroupID = New Global.System.Data.DataColumn("GroupID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID)
            Me.columnGroupName = New Global.System.Data.DataColumn("GroupName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupName)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnGroupID}, true))
            Me.columnGroupID.AllowDBNull = false
            Me.columnGroupID.Unique = true
            Me.columnGroupName.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFFSGroupRow() As FFSGroupRow
            Return CType(Me.NewRow,FFSGroupRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FFSGroupRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FFSGroupRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FFSGroupRowChangedEvent) Is Nothing) Then
                RaiseEvent FFSGroupRowChanged(Me, New FFSGroupRowChangeEvent(CType(e.Row,FFSGroupRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FFSGroupRowChangingEvent) Is Nothing) Then
                RaiseEvent FFSGroupRowChanging(Me, New FFSGroupRowChangeEvent(CType(e.Row,FFSGroupRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FFSGroupRowDeletedEvent) Is Nothing) Then
                RaiseEvent FFSGroupRowDeleted(Me, New FFSGroupRowChangeEvent(CType(e.Row,FFSGroupRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FFSGroupRowDeletingEvent) Is Nothing) Then
                RaiseEvent FFSGroupRowDeleting(Me, New FFSGroupRowChangeEvent(CType(e.Row,FFSGroupRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFFSGroupRow(ByVal row As FFSGroupRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DistrictAnnualDataSet = New DistrictAnnualDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FFSGroupDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class appUspDistrictAnnualFillExtensionOfficersTrainedCropDataTable
        Inherits Global.System.Data.TypedTableBase(Of appUspDistrictAnnualFillExtensionOfficersTrainedCropRow)
        
        Private columnGroupID As Global.System.Data.DataColumn
        
        Private columnGroupName As Global.System.Data.DataColumn
        
        Private columnExtensionOfficersTrainedID As Global.System.Data.DataColumn
        
        Private columnFieldID As Global.System.Data.DataColumn
        
        Private columnFieldActivity As Global.System.Data.DataColumn
        
        Private columnNumberOfMaleOfficersTrained As Global.System.Data.DataColumn
        
        Private columnNumberOfFemaleOfficersTrained As Global.System.Data.DataColumn
        
        Private columnTotal As Global.System.Data.DataColumn
        
        Private columnNumberOfOfficersTrainedLessThanSixMonths As Global.System.Data.DataColumn
        
        Private columnNumberOfOfficersTrainedMoreThanSixMonths As Global.System.Data.DataColumn
        
        Private columnTrainingMethods As Global.System.Data.DataColumn
        
        Private columnTrainingProviders As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnAnnuallyRecordID As Global.System.Data.DataColumn
        
        Private columnFormSerialID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "appUspDistrictAnnualFillExtensionOfficersTrainedCrop"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExtensionOfficersTrainedIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExtensionOfficersTrainedID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FieldIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFieldID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FieldActivityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFieldActivity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfMaleOfficersTrainedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfMaleOfficersTrained
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfFemaleOfficersTrainedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfFemaleOfficersTrained
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfOfficersTrainedLessThanSixMonthsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfOfficersTrainedLessThanSixMonths
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfOfficersTrainedMoreThanSixMonthsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfOfficersTrainedMoreThanSixMonths
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TrainingMethodsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTrainingMethods
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TrainingProvidersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTrainingProviders
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnnuallyRecordIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnnuallyRecordID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FormSerialIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFormSerialID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As appUspDistrictAnnualFillExtensionOfficersTrainedCropRow
            Get
                Return CType(Me.Rows(index),appUspDistrictAnnualFillExtensionOfficersTrainedCropRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspDistrictAnnualFillExtensionOfficersTrainedCropRowChanging As appUspDistrictAnnualFillExtensionOfficersTrainedCropRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspDistrictAnnualFillExtensionOfficersTrainedCropRowChanged As appUspDistrictAnnualFillExtensionOfficersTrainedCropRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspDistrictAnnualFillExtensionOfficersTrainedCropRowDeleting As appUspDistrictAnnualFillExtensionOfficersTrainedCropRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspDistrictAnnualFillExtensionOfficersTrainedCropRowDeleted As appUspDistrictAnnualFillExtensionOfficersTrainedCropRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddappUspDistrictAnnualFillExtensionOfficersTrainedCropRow(ByVal row As appUspDistrictAnnualFillExtensionOfficersTrainedCropRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddappUspDistrictAnnualFillExtensionOfficersTrainedCropRow(ByVal GroupID As Integer, ByVal GroupName As String, ByVal ExtensionOfficersTrainedID As System.Guid, ByVal FieldID As Integer, ByVal FieldActivity As String, ByVal NumberOfMaleOfficersTrained As Integer, ByVal NumberOfFemaleOfficersTrained As Integer, ByVal Total As Integer, ByVal NumberOfOfficersTrainedLessThanSixMonths As Integer, ByVal NumberOfOfficersTrainedMoreThanSixMonths As Integer, ByVal TrainingMethods As String, ByVal TrainingProviders As String, ByVal Remarks As String, ByVal AnnuallyRecordID As System.Guid, ByVal FormSerialID As String) As appUspDistrictAnnualFillExtensionOfficersTrainedCropRow
            Dim rowappUspDistrictAnnualFillExtensionOfficersTrainedCropRow As appUspDistrictAnnualFillExtensionOfficersTrainedCropRow = CType(Me.NewRow,appUspDistrictAnnualFillExtensionOfficersTrainedCropRow)
            Dim columnValuesArray() As Object = New Object() {GroupID, GroupName, ExtensionOfficersTrainedID, FieldID, FieldActivity, NumberOfMaleOfficersTrained, NumberOfFemaleOfficersTrained, Total, NumberOfOfficersTrainedLessThanSixMonths, NumberOfOfficersTrainedMoreThanSixMonths, TrainingMethods, TrainingProviders, Remarks, AnnuallyRecordID, FormSerialID}
            rowappUspDistrictAnnualFillExtensionOfficersTrainedCropRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowappUspDistrictAnnualFillExtensionOfficersTrainedCropRow)
            Return rowappUspDistrictAnnualFillExtensionOfficersTrainedCropRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As appUspDistrictAnnualFillExtensionOfficersTrainedCropDataTable = CType(MyBase.Clone,appUspDistrictAnnualFillExtensionOfficersTrainedCropDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New appUspDistrictAnnualFillExtensionOfficersTrainedCropDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGroupID = MyBase.Columns("GroupID")
            Me.columnGroupName = MyBase.Columns("GroupName")
            Me.columnExtensionOfficersTrainedID = MyBase.Columns("ExtensionOfficersTrainedID")
            Me.columnFieldID = MyBase.Columns("FieldID")
            Me.columnFieldActivity = MyBase.Columns("FieldActivity")
            Me.columnNumberOfMaleOfficersTrained = MyBase.Columns("NumberOfMaleOfficersTrained")
            Me.columnNumberOfFemaleOfficersTrained = MyBase.Columns("NumberOfFemaleOfficersTrained")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columnNumberOfOfficersTrainedLessThanSixMonths = MyBase.Columns("NumberOfOfficersTrainedLessThanSixMonths")
            Me.columnNumberOfOfficersTrainedMoreThanSixMonths = MyBase.Columns("NumberOfOfficersTrainedMoreThanSixMonths")
            Me.columnTrainingMethods = MyBase.Columns("TrainingMethods")
            Me.columnTrainingProviders = MyBase.Columns("TrainingProviders")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnAnnuallyRecordID = MyBase.Columns("AnnuallyRecordID")
            Me.columnFormSerialID = MyBase.Columns("FormSerialID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGroupID = New Global.System.Data.DataColumn("GroupID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID)
            Me.columnGroupName = New Global.System.Data.DataColumn("GroupName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupName)
            Me.columnExtensionOfficersTrainedID = New Global.System.Data.DataColumn("ExtensionOfficersTrainedID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExtensionOfficersTrainedID)
            Me.columnFieldID = New Global.System.Data.DataColumn("FieldID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFieldID)
            Me.columnFieldActivity = New Global.System.Data.DataColumn("FieldActivity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFieldActivity)
            Me.columnNumberOfMaleOfficersTrained = New Global.System.Data.DataColumn("NumberOfMaleOfficersTrained", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfMaleOfficersTrained)
            Me.columnNumberOfFemaleOfficersTrained = New Global.System.Data.DataColumn("NumberOfFemaleOfficersTrained", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfFemaleOfficersTrained)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columnNumberOfOfficersTrainedLessThanSixMonths = New Global.System.Data.DataColumn("NumberOfOfficersTrainedLessThanSixMonths", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfOfficersTrainedLessThanSixMonths)
            Me.columnNumberOfOfficersTrainedMoreThanSixMonths = New Global.System.Data.DataColumn("NumberOfOfficersTrainedMoreThanSixMonths", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfOfficersTrainedMoreThanSixMonths)
            Me.columnTrainingMethods = New Global.System.Data.DataColumn("TrainingMethods", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTrainingMethods)
            Me.columnTrainingProviders = New Global.System.Data.DataColumn("TrainingProviders", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTrainingProviders)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnAnnuallyRecordID = New Global.System.Data.DataColumn("AnnuallyRecordID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnnuallyRecordID)
            Me.columnFormSerialID = New Global.System.Data.DataColumn("FormSerialID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFormSerialID)
            Me.columnGroupID.AllowDBNull = false
            Me.columnGroupName.MaxLength = 20
            Me.columnExtensionOfficersTrainedID.AllowDBNull = false
            Me.columnFieldActivity.MaxLength = 50
            Me.columnTrainingMethods.MaxLength = 50
            Me.columnTrainingProviders.MaxLength = 50
            Me.columnRemarks.MaxLength = 50
            Me.columnFormSerialID.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewappUspDistrictAnnualFillExtensionOfficersTrainedCropRow() As appUspDistrictAnnualFillExtensionOfficersTrainedCropRow
            Return CType(Me.NewRow,appUspDistrictAnnualFillExtensionOfficersTrainedCropRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New appUspDistrictAnnualFillExtensionOfficersTrainedCropRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(appUspDistrictAnnualFillExtensionOfficersTrainedCropRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.appUspDistrictAnnualFillExtensionOfficersTrainedCropRowChangedEvent) Is Nothing) Then
                RaiseEvent appUspDistrictAnnualFillExtensionOfficersTrainedCropRowChanged(Me, New appUspDistrictAnnualFillExtensionOfficersTrainedCropRowChangeEvent(CType(e.Row,appUspDistrictAnnualFillExtensionOfficersTrainedCropRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.appUspDistrictAnnualFillExtensionOfficersTrainedCropRowChangingEvent) Is Nothing) Then
                RaiseEvent appUspDistrictAnnualFillExtensionOfficersTrainedCropRowChanging(Me, New appUspDistrictAnnualFillExtensionOfficersTrainedCropRowChangeEvent(CType(e.Row,appUspDistrictAnnualFillExtensionOfficersTrainedCropRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.appUspDistrictAnnualFillExtensionOfficersTrainedCropRowDeletedEvent) Is Nothing) Then
                RaiseEvent appUspDistrictAnnualFillExtensionOfficersTrainedCropRowDeleted(Me, New appUspDistrictAnnualFillExtensionOfficersTrainedCropRowChangeEvent(CType(e.Row,appUspDistrictAnnualFillExtensionOfficersTrainedCropRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.appUspDistrictAnnualFillExtensionOfficersTrainedCropRowDeletingEvent) Is Nothing) Then
                RaiseEvent appUspDistrictAnnualFillExtensionOfficersTrainedCropRowDeleting(Me, New appUspDistrictAnnualFillExtensionOfficersTrainedCropRowChangeEvent(CType(e.Row,appUspDistrictAnnualFillExtensionOfficersTrainedCropRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveappUspDistrictAnnualFillExtensionOfficersTrainedCropRow(ByVal row As appUspDistrictAnnualFillExtensionOfficersTrainedCropRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DistrictAnnualDataSet = New DistrictAnnualDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "appUspDistrictAnnualFillExtensionOfficersTrainedCropDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class appUspDistrictAnnualFillExtensionOfficersTrainedFisheryDataTable
        Inherits Global.System.Data.TypedTableBase(Of appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow)
        
        Private columnGroupID As Global.System.Data.DataColumn
        
        Private columnGroupName As Global.System.Data.DataColumn
        
        Private columnExtensionOfficersTrainedID As Global.System.Data.DataColumn
        
        Private columnFieldID As Global.System.Data.DataColumn
        
        Private columnFieldActivity As Global.System.Data.DataColumn
        
        Private columnNumberOfMaleOfficersTrained As Global.System.Data.DataColumn
        
        Private columnNumberOfFemaleOfficersTrained As Global.System.Data.DataColumn
        
        Private columnTotal As Global.System.Data.DataColumn
        
        Private columnNumberOfOfficersTrainedLessThanSixMonths As Global.System.Data.DataColumn
        
        Private columnNumberOfOfficersTrainedMoreThanSixMonths As Global.System.Data.DataColumn
        
        Private columnTrainingMethods As Global.System.Data.DataColumn
        
        Private columnTrainingProviders As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnAnnuallyRecordID As Global.System.Data.DataColumn
        
        Private columnFormSerialID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "appUspDistrictAnnualFillExtensionOfficersTrainedFishery"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExtensionOfficersTrainedIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExtensionOfficersTrainedID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FieldIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFieldID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FieldActivityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFieldActivity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfMaleOfficersTrainedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfMaleOfficersTrained
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfFemaleOfficersTrainedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfFemaleOfficersTrained
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfOfficersTrainedLessThanSixMonthsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfOfficersTrainedLessThanSixMonths
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfOfficersTrainedMoreThanSixMonthsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfOfficersTrainedMoreThanSixMonths
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TrainingMethodsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTrainingMethods
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TrainingProvidersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTrainingProviders
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnnuallyRecordIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnnuallyRecordID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FormSerialIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFormSerialID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow
            Get
                Return CType(Me.Rows(index),appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRowChanging As appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRowChanged As appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRowDeleting As appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRowDeleted As appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddappUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow(ByVal row As appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddappUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow(ByVal GroupID As Integer, ByVal GroupName As String, ByVal ExtensionOfficersTrainedID As System.Guid, ByVal FieldID As Integer, ByVal FieldActivity As String, ByVal NumberOfMaleOfficersTrained As Integer, ByVal NumberOfFemaleOfficersTrained As Integer, ByVal Total As Integer, ByVal NumberOfOfficersTrainedLessThanSixMonths As Integer, ByVal NumberOfOfficersTrainedMoreThanSixMonths As Integer, ByVal TrainingMethods As String, ByVal TrainingProviders As String, ByVal Remarks As String, ByVal AnnuallyRecordID As System.Guid, ByVal FormSerialID As String) As appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow
            Dim rowappUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow As appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow = CType(Me.NewRow,appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow)
            Dim columnValuesArray() As Object = New Object() {GroupID, GroupName, ExtensionOfficersTrainedID, FieldID, FieldActivity, NumberOfMaleOfficersTrained, NumberOfFemaleOfficersTrained, Total, NumberOfOfficersTrainedLessThanSixMonths, NumberOfOfficersTrainedMoreThanSixMonths, TrainingMethods, TrainingProviders, Remarks, AnnuallyRecordID, FormSerialID}
            rowappUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowappUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow)
            Return rowappUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As appUspDistrictAnnualFillExtensionOfficersTrainedFisheryDataTable = CType(MyBase.Clone,appUspDistrictAnnualFillExtensionOfficersTrainedFisheryDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New appUspDistrictAnnualFillExtensionOfficersTrainedFisheryDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGroupID = MyBase.Columns("GroupID")
            Me.columnGroupName = MyBase.Columns("GroupName")
            Me.columnExtensionOfficersTrainedID = MyBase.Columns("ExtensionOfficersTrainedID")
            Me.columnFieldID = MyBase.Columns("FieldID")
            Me.columnFieldActivity = MyBase.Columns("FieldActivity")
            Me.columnNumberOfMaleOfficersTrained = MyBase.Columns("NumberOfMaleOfficersTrained")
            Me.columnNumberOfFemaleOfficersTrained = MyBase.Columns("NumberOfFemaleOfficersTrained")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columnNumberOfOfficersTrainedLessThanSixMonths = MyBase.Columns("NumberOfOfficersTrainedLessThanSixMonths")
            Me.columnNumberOfOfficersTrainedMoreThanSixMonths = MyBase.Columns("NumberOfOfficersTrainedMoreThanSixMonths")
            Me.columnTrainingMethods = MyBase.Columns("TrainingMethods")
            Me.columnTrainingProviders = MyBase.Columns("TrainingProviders")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnAnnuallyRecordID = MyBase.Columns("AnnuallyRecordID")
            Me.columnFormSerialID = MyBase.Columns("FormSerialID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGroupID = New Global.System.Data.DataColumn("GroupID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID)
            Me.columnGroupName = New Global.System.Data.DataColumn("GroupName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupName)
            Me.columnExtensionOfficersTrainedID = New Global.System.Data.DataColumn("ExtensionOfficersTrainedID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExtensionOfficersTrainedID)
            Me.columnFieldID = New Global.System.Data.DataColumn("FieldID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFieldID)
            Me.columnFieldActivity = New Global.System.Data.DataColumn("FieldActivity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFieldActivity)
            Me.columnNumberOfMaleOfficersTrained = New Global.System.Data.DataColumn("NumberOfMaleOfficersTrained", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfMaleOfficersTrained)
            Me.columnNumberOfFemaleOfficersTrained = New Global.System.Data.DataColumn("NumberOfFemaleOfficersTrained", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfFemaleOfficersTrained)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columnNumberOfOfficersTrainedLessThanSixMonths = New Global.System.Data.DataColumn("NumberOfOfficersTrainedLessThanSixMonths", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfOfficersTrainedLessThanSixMonths)
            Me.columnNumberOfOfficersTrainedMoreThanSixMonths = New Global.System.Data.DataColumn("NumberOfOfficersTrainedMoreThanSixMonths", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfOfficersTrainedMoreThanSixMonths)
            Me.columnTrainingMethods = New Global.System.Data.DataColumn("TrainingMethods", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTrainingMethods)
            Me.columnTrainingProviders = New Global.System.Data.DataColumn("TrainingProviders", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTrainingProviders)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnAnnuallyRecordID = New Global.System.Data.DataColumn("AnnuallyRecordID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnnuallyRecordID)
            Me.columnFormSerialID = New Global.System.Data.DataColumn("FormSerialID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFormSerialID)
            Me.columnGroupID.AllowDBNull = false
            Me.columnGroupName.MaxLength = 20
            Me.columnExtensionOfficersTrainedID.AllowDBNull = false
            Me.columnFieldActivity.MaxLength = 50
            Me.columnTrainingMethods.MaxLength = 50
            Me.columnTrainingProviders.MaxLength = 50
            Me.columnRemarks.MaxLength = 50
            Me.columnFormSerialID.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewappUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow() As appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow
            Return CType(Me.NewRow,appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRowChangedEvent) Is Nothing) Then
                RaiseEvent appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRowChanged(Me, New appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRowChangeEvent(CType(e.Row,appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRowChangingEvent) Is Nothing) Then
                RaiseEvent appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRowChanging(Me, New appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRowChangeEvent(CType(e.Row,appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRowDeletedEvent) Is Nothing) Then
                RaiseEvent appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRowDeleted(Me, New appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRowChangeEvent(CType(e.Row,appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRowDeletingEvent) Is Nothing) Then
                RaiseEvent appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRowDeleting(Me, New appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRowChangeEvent(CType(e.Row,appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveappUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow(ByVal row As appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DistrictAnnualDataSet = New DistrictAnnualDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "appUspDistrictAnnualFillExtensionOfficersTrainedFisheryDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationDataTable
        Inherits Global.System.Data.TypedTableBase(Of appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow)
        
        Private columnGroupID As Global.System.Data.DataColumn
        
        Private columnGroupName As Global.System.Data.DataColumn
        
        Private columnExtensionOfficersTrainedID As Global.System.Data.DataColumn
        
        Private columnFieldID As Global.System.Data.DataColumn
        
        Private columnFieldActivity As Global.System.Data.DataColumn
        
        Private columnNumberOfMaleOfficersTrained As Global.System.Data.DataColumn
        
        Private columnNumberOfFemaleOfficersTrained As Global.System.Data.DataColumn
        
        Private columnTotal As Global.System.Data.DataColumn
        
        Private columnNumberOfOfficersTrainedLessThanSixMonths As Global.System.Data.DataColumn
        
        Private columnNumberOfOfficersTrainedMoreThanSixMonths As Global.System.Data.DataColumn
        
        Private columnTrainingMethods As Global.System.Data.DataColumn
        
        Private columnTrainingProviders As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnAnnuallyRecordID As Global.System.Data.DataColumn
        
        Private columnFormSerialID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "appUspDistrictAnnualFillExtensionOfficersTrainedIrrigation"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExtensionOfficersTrainedIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExtensionOfficersTrainedID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FieldIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFieldID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FieldActivityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFieldActivity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfMaleOfficersTrainedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfMaleOfficersTrained
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfFemaleOfficersTrainedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfFemaleOfficersTrained
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfOfficersTrainedLessThanSixMonthsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfOfficersTrainedLessThanSixMonths
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfOfficersTrainedMoreThanSixMonthsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfOfficersTrainedMoreThanSixMonths
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TrainingMethodsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTrainingMethods
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TrainingProvidersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTrainingProviders
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnnuallyRecordIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnnuallyRecordID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FormSerialIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFormSerialID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow
            Get
                Return CType(Me.Rows(index),appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRowChanging As appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRowChanged As appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRowDeleting As appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRowDeleted As appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddappUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow(ByVal row As appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddappUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow(ByVal GroupID As Integer, ByVal GroupName As String, ByVal ExtensionOfficersTrainedID As System.Guid, ByVal FieldID As Integer, ByVal FieldActivity As String, ByVal NumberOfMaleOfficersTrained As Integer, ByVal NumberOfFemaleOfficersTrained As Integer, ByVal Total As Integer, ByVal NumberOfOfficersTrainedLessThanSixMonths As Integer, ByVal NumberOfOfficersTrainedMoreThanSixMonths As Integer, ByVal TrainingMethods As String, ByVal TrainingProviders As String, ByVal Remarks As String, ByVal AnnuallyRecordID As System.Guid, ByVal FormSerialID As String) As appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow
            Dim rowappUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow As appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow = CType(Me.NewRow,appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow)
            Dim columnValuesArray() As Object = New Object() {GroupID, GroupName, ExtensionOfficersTrainedID, FieldID, FieldActivity, NumberOfMaleOfficersTrained, NumberOfFemaleOfficersTrained, Total, NumberOfOfficersTrainedLessThanSixMonths, NumberOfOfficersTrainedMoreThanSixMonths, TrainingMethods, TrainingProviders, Remarks, AnnuallyRecordID, FormSerialID}
            rowappUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowappUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow)
            Return rowappUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationDataTable = CType(MyBase.Clone,appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGroupID = MyBase.Columns("GroupID")
            Me.columnGroupName = MyBase.Columns("GroupName")
            Me.columnExtensionOfficersTrainedID = MyBase.Columns("ExtensionOfficersTrainedID")
            Me.columnFieldID = MyBase.Columns("FieldID")
            Me.columnFieldActivity = MyBase.Columns("FieldActivity")
            Me.columnNumberOfMaleOfficersTrained = MyBase.Columns("NumberOfMaleOfficersTrained")
            Me.columnNumberOfFemaleOfficersTrained = MyBase.Columns("NumberOfFemaleOfficersTrained")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columnNumberOfOfficersTrainedLessThanSixMonths = MyBase.Columns("NumberOfOfficersTrainedLessThanSixMonths")
            Me.columnNumberOfOfficersTrainedMoreThanSixMonths = MyBase.Columns("NumberOfOfficersTrainedMoreThanSixMonths")
            Me.columnTrainingMethods = MyBase.Columns("TrainingMethods")
            Me.columnTrainingProviders = MyBase.Columns("TrainingProviders")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnAnnuallyRecordID = MyBase.Columns("AnnuallyRecordID")
            Me.columnFormSerialID = MyBase.Columns("FormSerialID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGroupID = New Global.System.Data.DataColumn("GroupID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID)
            Me.columnGroupName = New Global.System.Data.DataColumn("GroupName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupName)
            Me.columnExtensionOfficersTrainedID = New Global.System.Data.DataColumn("ExtensionOfficersTrainedID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExtensionOfficersTrainedID)
            Me.columnFieldID = New Global.System.Data.DataColumn("FieldID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFieldID)
            Me.columnFieldActivity = New Global.System.Data.DataColumn("FieldActivity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFieldActivity)
            Me.columnNumberOfMaleOfficersTrained = New Global.System.Data.DataColumn("NumberOfMaleOfficersTrained", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfMaleOfficersTrained)
            Me.columnNumberOfFemaleOfficersTrained = New Global.System.Data.DataColumn("NumberOfFemaleOfficersTrained", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfFemaleOfficersTrained)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columnNumberOfOfficersTrainedLessThanSixMonths = New Global.System.Data.DataColumn("NumberOfOfficersTrainedLessThanSixMonths", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfOfficersTrainedLessThanSixMonths)
            Me.columnNumberOfOfficersTrainedMoreThanSixMonths = New Global.System.Data.DataColumn("NumberOfOfficersTrainedMoreThanSixMonths", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfOfficersTrainedMoreThanSixMonths)
            Me.columnTrainingMethods = New Global.System.Data.DataColumn("TrainingMethods", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTrainingMethods)
            Me.columnTrainingProviders = New Global.System.Data.DataColumn("TrainingProviders", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTrainingProviders)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnAnnuallyRecordID = New Global.System.Data.DataColumn("AnnuallyRecordID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnnuallyRecordID)
            Me.columnFormSerialID = New Global.System.Data.DataColumn("FormSerialID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFormSerialID)
            Me.columnGroupID.AllowDBNull = false
            Me.columnGroupName.MaxLength = 20
            Me.columnExtensionOfficersTrainedID.AllowDBNull = false
            Me.columnFieldActivity.MaxLength = 50
            Me.columnTrainingMethods.MaxLength = 50
            Me.columnTrainingProviders.MaxLength = 50
            Me.columnRemarks.MaxLength = 50
            Me.columnFormSerialID.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewappUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow() As appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow
            Return CType(Me.NewRow,appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRowChangedEvent) Is Nothing) Then
                RaiseEvent appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRowChanged(Me, New appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRowChangeEvent(CType(e.Row,appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRowChangingEvent) Is Nothing) Then
                RaiseEvent appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRowChanging(Me, New appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRowChangeEvent(CType(e.Row,appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRowDeletedEvent) Is Nothing) Then
                RaiseEvent appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRowDeleted(Me, New appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRowChangeEvent(CType(e.Row,appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRowDeletingEvent) Is Nothing) Then
                RaiseEvent appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRowDeleting(Me, New appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRowChangeEvent(CType(e.Row,appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveappUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow(ByVal row As appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DistrictAnnualDataSet = New DistrictAnnualDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class appUspDistrictAnnualFillExtensionOfficersTrainedLivestockDataTable
        Inherits Global.System.Data.TypedTableBase(Of appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow)
        
        Private columnGroupID As Global.System.Data.DataColumn
        
        Private columnGroupName As Global.System.Data.DataColumn
        
        Private columnExtensionOfficersTrainedID As Global.System.Data.DataColumn
        
        Private columnFieldID As Global.System.Data.DataColumn
        
        Private columnFieldActivity As Global.System.Data.DataColumn
        
        Private columnNumberOfMaleOfficersTrained As Global.System.Data.DataColumn
        
        Private columnNumberOfFemaleOfficersTrained As Global.System.Data.DataColumn
        
        Private columnTotal As Global.System.Data.DataColumn
        
        Private columnNumberOfOfficersTrainedLessThanSixMonths As Global.System.Data.DataColumn
        
        Private columnNumberOfOfficersTrainedMoreThanSixMonths As Global.System.Data.DataColumn
        
        Private columnTrainingMethods As Global.System.Data.DataColumn
        
        Private columnTrainingProviders As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnAnnuallyRecordID As Global.System.Data.DataColumn
        
        Private columnFormSerialID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "appUspDistrictAnnualFillExtensionOfficersTrainedLivestock"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExtensionOfficersTrainedIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExtensionOfficersTrainedID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FieldIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFieldID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FieldActivityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFieldActivity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfMaleOfficersTrainedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfMaleOfficersTrained
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfFemaleOfficersTrainedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfFemaleOfficersTrained
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfOfficersTrainedLessThanSixMonthsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfOfficersTrainedLessThanSixMonths
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfOfficersTrainedMoreThanSixMonthsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfOfficersTrainedMoreThanSixMonths
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TrainingMethodsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTrainingMethods
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TrainingProvidersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTrainingProviders
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnnuallyRecordIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnnuallyRecordID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FormSerialIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFormSerialID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow
            Get
                Return CType(Me.Rows(index),appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRowChanging As appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRowChanged As appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRowDeleting As appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRowDeleted As appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddappUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow(ByVal row As appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddappUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow(ByVal GroupID As Integer, ByVal GroupName As String, ByVal ExtensionOfficersTrainedID As System.Guid, ByVal FieldID As Integer, ByVal FieldActivity As String, ByVal NumberOfMaleOfficersTrained As Integer, ByVal NumberOfFemaleOfficersTrained As Integer, ByVal Total As Integer, ByVal NumberOfOfficersTrainedLessThanSixMonths As Integer, ByVal NumberOfOfficersTrainedMoreThanSixMonths As Integer, ByVal TrainingMethods As String, ByVal TrainingProviders As String, ByVal Remarks As String, ByVal AnnuallyRecordID As System.Guid, ByVal FormSerialID As String) As appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow
            Dim rowappUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow As appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow = CType(Me.NewRow,appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow)
            Dim columnValuesArray() As Object = New Object() {GroupID, GroupName, ExtensionOfficersTrainedID, FieldID, FieldActivity, NumberOfMaleOfficersTrained, NumberOfFemaleOfficersTrained, Total, NumberOfOfficersTrainedLessThanSixMonths, NumberOfOfficersTrainedMoreThanSixMonths, TrainingMethods, TrainingProviders, Remarks, AnnuallyRecordID, FormSerialID}
            rowappUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowappUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow)
            Return rowappUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As appUspDistrictAnnualFillExtensionOfficersTrainedLivestockDataTable = CType(MyBase.Clone,appUspDistrictAnnualFillExtensionOfficersTrainedLivestockDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New appUspDistrictAnnualFillExtensionOfficersTrainedLivestockDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGroupID = MyBase.Columns("GroupID")
            Me.columnGroupName = MyBase.Columns("GroupName")
            Me.columnExtensionOfficersTrainedID = MyBase.Columns("ExtensionOfficersTrainedID")
            Me.columnFieldID = MyBase.Columns("FieldID")
            Me.columnFieldActivity = MyBase.Columns("FieldActivity")
            Me.columnNumberOfMaleOfficersTrained = MyBase.Columns("NumberOfMaleOfficersTrained")
            Me.columnNumberOfFemaleOfficersTrained = MyBase.Columns("NumberOfFemaleOfficersTrained")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columnNumberOfOfficersTrainedLessThanSixMonths = MyBase.Columns("NumberOfOfficersTrainedLessThanSixMonths")
            Me.columnNumberOfOfficersTrainedMoreThanSixMonths = MyBase.Columns("NumberOfOfficersTrainedMoreThanSixMonths")
            Me.columnTrainingMethods = MyBase.Columns("TrainingMethods")
            Me.columnTrainingProviders = MyBase.Columns("TrainingProviders")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnAnnuallyRecordID = MyBase.Columns("AnnuallyRecordID")
            Me.columnFormSerialID = MyBase.Columns("FormSerialID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGroupID = New Global.System.Data.DataColumn("GroupID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID)
            Me.columnGroupName = New Global.System.Data.DataColumn("GroupName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupName)
            Me.columnExtensionOfficersTrainedID = New Global.System.Data.DataColumn("ExtensionOfficersTrainedID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExtensionOfficersTrainedID)
            Me.columnFieldID = New Global.System.Data.DataColumn("FieldID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFieldID)
            Me.columnFieldActivity = New Global.System.Data.DataColumn("FieldActivity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFieldActivity)
            Me.columnNumberOfMaleOfficersTrained = New Global.System.Data.DataColumn("NumberOfMaleOfficersTrained", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfMaleOfficersTrained)
            Me.columnNumberOfFemaleOfficersTrained = New Global.System.Data.DataColumn("NumberOfFemaleOfficersTrained", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfFemaleOfficersTrained)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columnNumberOfOfficersTrainedLessThanSixMonths = New Global.System.Data.DataColumn("NumberOfOfficersTrainedLessThanSixMonths", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfOfficersTrainedLessThanSixMonths)
            Me.columnNumberOfOfficersTrainedMoreThanSixMonths = New Global.System.Data.DataColumn("NumberOfOfficersTrainedMoreThanSixMonths", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfOfficersTrainedMoreThanSixMonths)
            Me.columnTrainingMethods = New Global.System.Data.DataColumn("TrainingMethods", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTrainingMethods)
            Me.columnTrainingProviders = New Global.System.Data.DataColumn("TrainingProviders", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTrainingProviders)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnAnnuallyRecordID = New Global.System.Data.DataColumn("AnnuallyRecordID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnnuallyRecordID)
            Me.columnFormSerialID = New Global.System.Data.DataColumn("FormSerialID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFormSerialID)
            Me.columnGroupID.AllowDBNull = false
            Me.columnGroupName.MaxLength = 20
            Me.columnExtensionOfficersTrainedID.AllowDBNull = false
            Me.columnFieldActivity.MaxLength = 50
            Me.columnTrainingMethods.MaxLength = 50
            Me.columnTrainingProviders.MaxLength = 50
            Me.columnRemarks.MaxLength = 50
            Me.columnFormSerialID.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewappUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow() As appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow
            Return CType(Me.NewRow,appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRowChangedEvent) Is Nothing) Then
                RaiseEvent appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRowChanged(Me, New appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRowChangeEvent(CType(e.Row,appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRowChangingEvent) Is Nothing) Then
                RaiseEvent appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRowChanging(Me, New appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRowChangeEvent(CType(e.Row,appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRowDeletedEvent) Is Nothing) Then
                RaiseEvent appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRowDeleted(Me, New appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRowChangeEvent(CType(e.Row,appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRowDeletingEvent) Is Nothing) Then
                RaiseEvent appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRowDeleting(Me, New appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRowChangeEvent(CType(e.Row,appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveappUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow(ByVal row As appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DistrictAnnualDataSet = New DistrictAnnualDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "appUspDistrictAnnualFillExtensionOfficersTrainedLivestockDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class appUspDistrictAnnualFillExtensionOfficersTrainedMarketingDataTable
        Inherits Global.System.Data.TypedTableBase(Of appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow)
        
        Private columnGroupID As Global.System.Data.DataColumn
        
        Private columnGroupName As Global.System.Data.DataColumn
        
        Private columnExtensionOfficersTrainedID As Global.System.Data.DataColumn
        
        Private columnFieldID As Global.System.Data.DataColumn
        
        Private columnFieldActivity As Global.System.Data.DataColumn
        
        Private columnNumberOfMaleOfficersTrained As Global.System.Data.DataColumn
        
        Private columnNumberOfFemaleOfficersTrained As Global.System.Data.DataColumn
        
        Private columnTotal As Global.System.Data.DataColumn
        
        Private columnNumberOfOfficersTrainedLessThanSixMonths As Global.System.Data.DataColumn
        
        Private columnNumberOfOfficersTrainedMoreThanSixMonths As Global.System.Data.DataColumn
        
        Private columnTrainingMethods As Global.System.Data.DataColumn
        
        Private columnTrainingProviders As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnAnnuallyRecordID As Global.System.Data.DataColumn
        
        Private columnFormSerialID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "appUspDistrictAnnualFillExtensionOfficersTrainedMarketing"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExtensionOfficersTrainedIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExtensionOfficersTrainedID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FieldIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFieldID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FieldActivityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFieldActivity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfMaleOfficersTrainedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfMaleOfficersTrained
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfFemaleOfficersTrainedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfFemaleOfficersTrained
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfOfficersTrainedLessThanSixMonthsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfOfficersTrainedLessThanSixMonths
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfOfficersTrainedMoreThanSixMonthsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfOfficersTrainedMoreThanSixMonths
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TrainingMethodsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTrainingMethods
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TrainingProvidersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTrainingProviders
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnnuallyRecordIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnnuallyRecordID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FormSerialIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFormSerialID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow
            Get
                Return CType(Me.Rows(index),appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRowChanging As appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRowChanged As appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRowDeleting As appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRowDeleted As appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddappUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow(ByVal row As appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddappUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow(ByVal GroupID As Integer, ByVal GroupName As String, ByVal ExtensionOfficersTrainedID As System.Guid, ByVal FieldID As Integer, ByVal FieldActivity As String, ByVal NumberOfMaleOfficersTrained As Integer, ByVal NumberOfFemaleOfficersTrained As Integer, ByVal Total As Integer, ByVal NumberOfOfficersTrainedLessThanSixMonths As Integer, ByVal NumberOfOfficersTrainedMoreThanSixMonths As Integer, ByVal TrainingMethods As String, ByVal TrainingProviders As String, ByVal Remarks As String, ByVal AnnuallyRecordID As System.Guid, ByVal FormSerialID As String) As appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow
            Dim rowappUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow As appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow = CType(Me.NewRow,appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow)
            Dim columnValuesArray() As Object = New Object() {GroupID, GroupName, ExtensionOfficersTrainedID, FieldID, FieldActivity, NumberOfMaleOfficersTrained, NumberOfFemaleOfficersTrained, Total, NumberOfOfficersTrainedLessThanSixMonths, NumberOfOfficersTrainedMoreThanSixMonths, TrainingMethods, TrainingProviders, Remarks, AnnuallyRecordID, FormSerialID}
            rowappUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowappUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow)
            Return rowappUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As appUspDistrictAnnualFillExtensionOfficersTrainedMarketingDataTable = CType(MyBase.Clone,appUspDistrictAnnualFillExtensionOfficersTrainedMarketingDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New appUspDistrictAnnualFillExtensionOfficersTrainedMarketingDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGroupID = MyBase.Columns("GroupID")
            Me.columnGroupName = MyBase.Columns("GroupName")
            Me.columnExtensionOfficersTrainedID = MyBase.Columns("ExtensionOfficersTrainedID")
            Me.columnFieldID = MyBase.Columns("FieldID")
            Me.columnFieldActivity = MyBase.Columns("FieldActivity")
            Me.columnNumberOfMaleOfficersTrained = MyBase.Columns("NumberOfMaleOfficersTrained")
            Me.columnNumberOfFemaleOfficersTrained = MyBase.Columns("NumberOfFemaleOfficersTrained")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columnNumberOfOfficersTrainedLessThanSixMonths = MyBase.Columns("NumberOfOfficersTrainedLessThanSixMonths")
            Me.columnNumberOfOfficersTrainedMoreThanSixMonths = MyBase.Columns("NumberOfOfficersTrainedMoreThanSixMonths")
            Me.columnTrainingMethods = MyBase.Columns("TrainingMethods")
            Me.columnTrainingProviders = MyBase.Columns("TrainingProviders")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnAnnuallyRecordID = MyBase.Columns("AnnuallyRecordID")
            Me.columnFormSerialID = MyBase.Columns("FormSerialID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGroupID = New Global.System.Data.DataColumn("GroupID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID)
            Me.columnGroupName = New Global.System.Data.DataColumn("GroupName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupName)
            Me.columnExtensionOfficersTrainedID = New Global.System.Data.DataColumn("ExtensionOfficersTrainedID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExtensionOfficersTrainedID)
            Me.columnFieldID = New Global.System.Data.DataColumn("FieldID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFieldID)
            Me.columnFieldActivity = New Global.System.Data.DataColumn("FieldActivity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFieldActivity)
            Me.columnNumberOfMaleOfficersTrained = New Global.System.Data.DataColumn("NumberOfMaleOfficersTrained", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfMaleOfficersTrained)
            Me.columnNumberOfFemaleOfficersTrained = New Global.System.Data.DataColumn("NumberOfFemaleOfficersTrained", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfFemaleOfficersTrained)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columnNumberOfOfficersTrainedLessThanSixMonths = New Global.System.Data.DataColumn("NumberOfOfficersTrainedLessThanSixMonths", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfOfficersTrainedLessThanSixMonths)
            Me.columnNumberOfOfficersTrainedMoreThanSixMonths = New Global.System.Data.DataColumn("NumberOfOfficersTrainedMoreThanSixMonths", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfOfficersTrainedMoreThanSixMonths)
            Me.columnTrainingMethods = New Global.System.Data.DataColumn("TrainingMethods", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTrainingMethods)
            Me.columnTrainingProviders = New Global.System.Data.DataColumn("TrainingProviders", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTrainingProviders)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnAnnuallyRecordID = New Global.System.Data.DataColumn("AnnuallyRecordID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnnuallyRecordID)
            Me.columnFormSerialID = New Global.System.Data.DataColumn("FormSerialID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFormSerialID)
            Me.columnGroupID.AllowDBNull = false
            Me.columnGroupName.MaxLength = 20
            Me.columnExtensionOfficersTrainedID.AllowDBNull = false
            Me.columnFieldActivity.MaxLength = 50
            Me.columnTrainingMethods.MaxLength = 50
            Me.columnTrainingProviders.MaxLength = 50
            Me.columnRemarks.MaxLength = 50
            Me.columnFormSerialID.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewappUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow() As appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow
            Return CType(Me.NewRow,appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRowChangedEvent) Is Nothing) Then
                RaiseEvent appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRowChanged(Me, New appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRowChangeEvent(CType(e.Row,appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRowChangingEvent) Is Nothing) Then
                RaiseEvent appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRowChanging(Me, New appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRowChangeEvent(CType(e.Row,appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRowDeletedEvent) Is Nothing) Then
                RaiseEvent appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRowDeleted(Me, New appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRowChangeEvent(CType(e.Row,appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRowDeletingEvent) Is Nothing) Then
                RaiseEvent appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRowDeleting(Me, New appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRowChangeEvent(CType(e.Row,appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveappUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow(ByVal row As appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DistrictAnnualDataSet = New DistrictAnnualDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "appUspDistrictAnnualFillExtensionOfficersTrainedMarketingDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class appUspDistrictAnnualFillExtensionOfficersTrainedOthersDataTable
        Inherits Global.System.Data.TypedTableBase(Of appUspDistrictAnnualFillExtensionOfficersTrainedOthersRow)
        
        Private columnGroupID As Global.System.Data.DataColumn
        
        Private columnGroupName As Global.System.Data.DataColumn
        
        Private columnExtensionOfficersTrainedID As Global.System.Data.DataColumn
        
        Private columnFieldID As Global.System.Data.DataColumn
        
        Private columnFieldActivity As Global.System.Data.DataColumn
        
        Private columnNumberOfMaleOfficersTrained As Global.System.Data.DataColumn
        
        Private columnNumberOfFemaleOfficersTrained As Global.System.Data.DataColumn
        
        Private columnTotal As Global.System.Data.DataColumn
        
        Private columnNumberOfOfficersTrainedLessThanSixMonths As Global.System.Data.DataColumn
        
        Private columnNumberOfOfficersTrainedMoreThanSixMonths As Global.System.Data.DataColumn
        
        Private columnTrainingMethods As Global.System.Data.DataColumn
        
        Private columnTrainingProviders As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnAnnuallyRecordID As Global.System.Data.DataColumn
        
        Private columnFormSerialID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "appUspDistrictAnnualFillExtensionOfficersTrainedOthers"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExtensionOfficersTrainedIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExtensionOfficersTrainedID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FieldIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFieldID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FieldActivityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFieldActivity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfMaleOfficersTrainedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfMaleOfficersTrained
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfFemaleOfficersTrainedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfFemaleOfficersTrained
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfOfficersTrainedLessThanSixMonthsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfOfficersTrainedLessThanSixMonths
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfOfficersTrainedMoreThanSixMonthsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfOfficersTrainedMoreThanSixMonths
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TrainingMethodsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTrainingMethods
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TrainingProvidersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTrainingProviders
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnnuallyRecordIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnnuallyRecordID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FormSerialIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFormSerialID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As appUspDistrictAnnualFillExtensionOfficersTrainedOthersRow
            Get
                Return CType(Me.Rows(index),appUspDistrictAnnualFillExtensionOfficersTrainedOthersRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspDistrictAnnualFillExtensionOfficersTrainedOthersRowChanging As appUspDistrictAnnualFillExtensionOfficersTrainedOthersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspDistrictAnnualFillExtensionOfficersTrainedOthersRowChanged As appUspDistrictAnnualFillExtensionOfficersTrainedOthersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspDistrictAnnualFillExtensionOfficersTrainedOthersRowDeleting As appUspDistrictAnnualFillExtensionOfficersTrainedOthersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event appUspDistrictAnnualFillExtensionOfficersTrainedOthersRowDeleted As appUspDistrictAnnualFillExtensionOfficersTrainedOthersRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddappUspDistrictAnnualFillExtensionOfficersTrainedOthersRow(ByVal row As appUspDistrictAnnualFillExtensionOfficersTrainedOthersRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddappUspDistrictAnnualFillExtensionOfficersTrainedOthersRow(ByVal GroupID As Integer, ByVal GroupName As String, ByVal ExtensionOfficersTrainedID As System.Guid, ByVal FieldID As Integer, ByVal FieldActivity As String, ByVal NumberOfMaleOfficersTrained As Integer, ByVal NumberOfFemaleOfficersTrained As Integer, ByVal Total As Integer, ByVal NumberOfOfficersTrainedLessThanSixMonths As Integer, ByVal NumberOfOfficersTrainedMoreThanSixMonths As Integer, ByVal TrainingMethods As String, ByVal TrainingProviders As String, ByVal Remarks As String, ByVal AnnuallyRecordID As System.Guid, ByVal FormSerialID As String) As appUspDistrictAnnualFillExtensionOfficersTrainedOthersRow
            Dim rowappUspDistrictAnnualFillExtensionOfficersTrainedOthersRow As appUspDistrictAnnualFillExtensionOfficersTrainedOthersRow = CType(Me.NewRow,appUspDistrictAnnualFillExtensionOfficersTrainedOthersRow)
            Dim columnValuesArray() As Object = New Object() {GroupID, GroupName, ExtensionOfficersTrainedID, FieldID, FieldActivity, NumberOfMaleOfficersTrained, NumberOfFemaleOfficersTrained, Total, NumberOfOfficersTrainedLessThanSixMonths, NumberOfOfficersTrainedMoreThanSixMonths, TrainingMethods, TrainingProviders, Remarks, AnnuallyRecordID, FormSerialID}
            rowappUspDistrictAnnualFillExtensionOfficersTrainedOthersRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowappUspDistrictAnnualFillExtensionOfficersTrainedOthersRow)
            Return rowappUspDistrictAnnualFillExtensionOfficersTrainedOthersRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As appUspDistrictAnnualFillExtensionOfficersTrainedOthersDataTable = CType(MyBase.Clone,appUspDistrictAnnualFillExtensionOfficersTrainedOthersDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New appUspDistrictAnnualFillExtensionOfficersTrainedOthersDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGroupID = MyBase.Columns("GroupID")
            Me.columnGroupName = MyBase.Columns("GroupName")
            Me.columnExtensionOfficersTrainedID = MyBase.Columns("ExtensionOfficersTrainedID")
            Me.columnFieldID = MyBase.Columns("FieldID")
            Me.columnFieldActivity = MyBase.Columns("FieldActivity")
            Me.columnNumberOfMaleOfficersTrained = MyBase.Columns("NumberOfMaleOfficersTrained")
            Me.columnNumberOfFemaleOfficersTrained = MyBase.Columns("NumberOfFemaleOfficersTrained")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columnNumberOfOfficersTrainedLessThanSixMonths = MyBase.Columns("NumberOfOfficersTrainedLessThanSixMonths")
            Me.columnNumberOfOfficersTrainedMoreThanSixMonths = MyBase.Columns("NumberOfOfficersTrainedMoreThanSixMonths")
            Me.columnTrainingMethods = MyBase.Columns("TrainingMethods")
            Me.columnTrainingProviders = MyBase.Columns("TrainingProviders")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnAnnuallyRecordID = MyBase.Columns("AnnuallyRecordID")
            Me.columnFormSerialID = MyBase.Columns("FormSerialID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGroupID = New Global.System.Data.DataColumn("GroupID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID)
            Me.columnGroupName = New Global.System.Data.DataColumn("GroupName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupName)
            Me.columnExtensionOfficersTrainedID = New Global.System.Data.DataColumn("ExtensionOfficersTrainedID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExtensionOfficersTrainedID)
            Me.columnFieldID = New Global.System.Data.DataColumn("FieldID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFieldID)
            Me.columnFieldActivity = New Global.System.Data.DataColumn("FieldActivity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFieldActivity)
            Me.columnNumberOfMaleOfficersTrained = New Global.System.Data.DataColumn("NumberOfMaleOfficersTrained", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfMaleOfficersTrained)
            Me.columnNumberOfFemaleOfficersTrained = New Global.System.Data.DataColumn("NumberOfFemaleOfficersTrained", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfFemaleOfficersTrained)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columnNumberOfOfficersTrainedLessThanSixMonths = New Global.System.Data.DataColumn("NumberOfOfficersTrainedLessThanSixMonths", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfOfficersTrainedLessThanSixMonths)
            Me.columnNumberOfOfficersTrainedMoreThanSixMonths = New Global.System.Data.DataColumn("NumberOfOfficersTrainedMoreThanSixMonths", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfOfficersTrainedMoreThanSixMonths)
            Me.columnTrainingMethods = New Global.System.Data.DataColumn("TrainingMethods", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTrainingMethods)
            Me.columnTrainingProviders = New Global.System.Data.DataColumn("TrainingProviders", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTrainingProviders)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnAnnuallyRecordID = New Global.System.Data.DataColumn("AnnuallyRecordID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnnuallyRecordID)
            Me.columnFormSerialID = New Global.System.Data.DataColumn("FormSerialID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFormSerialID)
            Me.columnGroupID.AllowDBNull = false
            Me.columnGroupName.MaxLength = 20
            Me.columnExtensionOfficersTrainedID.AllowDBNull = false
            Me.columnFieldActivity.MaxLength = 50
            Me.columnTrainingMethods.MaxLength = 50
            Me.columnTrainingProviders.MaxLength = 50
            Me.columnRemarks.MaxLength = 50
            Me.columnFormSerialID.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewappUspDistrictAnnualFillExtensionOfficersTrainedOthersRow() As appUspDistrictAnnualFillExtensionOfficersTrainedOthersRow
            Return CType(Me.NewRow,appUspDistrictAnnualFillExtensionOfficersTrainedOthersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New appUspDistrictAnnualFillExtensionOfficersTrainedOthersRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(appUspDistrictAnnualFillExtensionOfficersTrainedOthersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.appUspDistrictAnnualFillExtensionOfficersTrainedOthersRowChangedEvent) Is Nothing) Then
                RaiseEvent appUspDistrictAnnualFillExtensionOfficersTrainedOthersRowChanged(Me, New appUspDistrictAnnualFillExtensionOfficersTrainedOthersRowChangeEvent(CType(e.Row,appUspDistrictAnnualFillExtensionOfficersTrainedOthersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.appUspDistrictAnnualFillExtensionOfficersTrainedOthersRowChangingEvent) Is Nothing) Then
                RaiseEvent appUspDistrictAnnualFillExtensionOfficersTrainedOthersRowChanging(Me, New appUspDistrictAnnualFillExtensionOfficersTrainedOthersRowChangeEvent(CType(e.Row,appUspDistrictAnnualFillExtensionOfficersTrainedOthersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.appUspDistrictAnnualFillExtensionOfficersTrainedOthersRowDeletedEvent) Is Nothing) Then
                RaiseEvent appUspDistrictAnnualFillExtensionOfficersTrainedOthersRowDeleted(Me, New appUspDistrictAnnualFillExtensionOfficersTrainedOthersRowChangeEvent(CType(e.Row,appUspDistrictAnnualFillExtensionOfficersTrainedOthersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.appUspDistrictAnnualFillExtensionOfficersTrainedOthersRowDeletingEvent) Is Nothing) Then
                RaiseEvent appUspDistrictAnnualFillExtensionOfficersTrainedOthersRowDeleting(Me, New appUspDistrictAnnualFillExtensionOfficersTrainedOthersRowChangeEvent(CType(e.Row,appUspDistrictAnnualFillExtensionOfficersTrainedOthersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveappUspDistrictAnnualFillExtensionOfficersTrainedOthersRow(ByVal row As appUspDistrictAnnualFillExtensionOfficersTrainedOthersRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DistrictAnnualDataSet = New DistrictAnnualDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "appUspDistrictAnnualFillExtensionOfficersTrainedOthersDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ExtensionOfficersTrained05Row
        Inherits Global.System.Data.DataRow
        
        Private tableExtensionOfficersTrained05 As ExtensionOfficersTrained05DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableExtensionOfficersTrained05 = CType(Me.Table,ExtensionOfficersTrained05DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExtensionOfficersTrainedID() As System.Guid
            Get
                Return CType(Me(Me.tableExtensionOfficersTrained05.ExtensionOfficersTrainedIDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableExtensionOfficersTrained05.ExtensionOfficersTrainedIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FieldID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableExtensionOfficersTrained05.FieldIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FieldID' in table 'ExtensionOfficersTrained05' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableExtensionOfficersTrained05.FieldIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FieldActivity() As String
            Get
                Try 
                    Return CType(Me(Me.tableExtensionOfficersTrained05.FieldActivityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FieldActivity' in table 'ExtensionOfficersTrained05' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableExtensionOfficersTrained05.FieldActivityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfMaleOfficersTrained() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableExtensionOfficersTrained05.NumberOfMaleOfficersTrainedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfMaleOfficersTrained' in table 'ExtensionOfficersTra"& _ 
                            "ined05' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableExtensionOfficersTrained05.NumberOfMaleOfficersTrainedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfFemaleOfficersTrained() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableExtensionOfficersTrained05.NumberOfFemaleOfficersTrainedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfFemaleOfficersTrained' in table 'ExtensionOfficersT"& _ 
                            "rained05' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableExtensionOfficersTrained05.NumberOfFemaleOfficersTrainedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfOfficersTrainedLessThanSixMonths() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableExtensionOfficersTrained05.NumberOfOfficersTrainedLessThanSixMonthsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfOfficersTrainedLessThanSixMonths' in table 'Extensi"& _ 
                            "onOfficersTrained05' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableExtensionOfficersTrained05.NumberOfOfficersTrainedLessThanSixMonthsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfOfficersTrainedMoreThanSixMonths() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableExtensionOfficersTrained05.NumberOfOfficersTrainedMoreThanSixMonthsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfOfficersTrainedMoreThanSixMonths' in table 'Extensi"& _ 
                            "onOfficersTrained05' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableExtensionOfficersTrained05.NumberOfOfficersTrainedMoreThanSixMonthsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TrainingMethods() As String
            Get
                Try 
                    Return CType(Me(Me.tableExtensionOfficersTrained05.TrainingMethodsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TrainingMethods' in table 'ExtensionOfficersTrained05' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableExtensionOfficersTrained05.TrainingMethodsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TrainingProviders() As String
            Get
                Try 
                    Return CType(Me(Me.tableExtensionOfficersTrained05.TrainingProvidersColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TrainingProviders' in table 'ExtensionOfficersTrained05' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableExtensionOfficersTrained05.TrainingProvidersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tableExtensionOfficersTrained05.RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'ExtensionOfficersTrained05' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableExtensionOfficersTrained05.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AnnuallyRecordID() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableExtensionOfficersTrained05.AnnuallyRecordIDColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnnuallyRecordID' in table 'ExtensionOfficersTrained05' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableExtensionOfficersTrained05.AnnuallyRecordIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FormSerialID() As String
            Get
                Try 
                    Return CType(Me(Me.tableExtensionOfficersTrained05.FormSerialIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FormSerialID' in table 'ExtensionOfficersTrained05' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableExtensionOfficersTrained05.FormSerialIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FFSGroupRow() As FFSGroupRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_ExtensionOfficersTrained05_FFSGroup")),FFSGroupRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_ExtensionOfficersTrained05_FFSGroup"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFieldIDNull() As Boolean
            Return Me.IsNull(Me.tableExtensionOfficersTrained05.FieldIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFieldIDNull()
            Me(Me.tableExtensionOfficersTrained05.FieldIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFieldActivityNull() As Boolean
            Return Me.IsNull(Me.tableExtensionOfficersTrained05.FieldActivityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFieldActivityNull()
            Me(Me.tableExtensionOfficersTrained05.FieldActivityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfMaleOfficersTrainedNull() As Boolean
            Return Me.IsNull(Me.tableExtensionOfficersTrained05.NumberOfMaleOfficersTrainedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfMaleOfficersTrainedNull()
            Me(Me.tableExtensionOfficersTrained05.NumberOfMaleOfficersTrainedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfFemaleOfficersTrainedNull() As Boolean
            Return Me.IsNull(Me.tableExtensionOfficersTrained05.NumberOfFemaleOfficersTrainedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfFemaleOfficersTrainedNull()
            Me(Me.tableExtensionOfficersTrained05.NumberOfFemaleOfficersTrainedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfOfficersTrainedLessThanSixMonthsNull() As Boolean
            Return Me.IsNull(Me.tableExtensionOfficersTrained05.NumberOfOfficersTrainedLessThanSixMonthsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfOfficersTrainedLessThanSixMonthsNull()
            Me(Me.tableExtensionOfficersTrained05.NumberOfOfficersTrainedLessThanSixMonthsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfOfficersTrainedMoreThanSixMonthsNull() As Boolean
            Return Me.IsNull(Me.tableExtensionOfficersTrained05.NumberOfOfficersTrainedMoreThanSixMonthsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfOfficersTrainedMoreThanSixMonthsNull()
            Me(Me.tableExtensionOfficersTrained05.NumberOfOfficersTrainedMoreThanSixMonthsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTrainingMethodsNull() As Boolean
            Return Me.IsNull(Me.tableExtensionOfficersTrained05.TrainingMethodsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTrainingMethodsNull()
            Me(Me.tableExtensionOfficersTrained05.TrainingMethodsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTrainingProvidersNull() As Boolean
            Return Me.IsNull(Me.tableExtensionOfficersTrained05.TrainingProvidersColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTrainingProvidersNull()
            Me(Me.tableExtensionOfficersTrained05.TrainingProvidersColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tableExtensionOfficersTrained05.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tableExtensionOfficersTrained05.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAnnuallyRecordIDNull() As Boolean
            Return Me.IsNull(Me.tableExtensionOfficersTrained05.AnnuallyRecordIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAnnuallyRecordIDNull()
            Me(Me.tableExtensionOfficersTrained05.AnnuallyRecordIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFormSerialIDNull() As Boolean
            Return Me.IsNull(Me.tableExtensionOfficersTrained05.FormSerialIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFormSerialIDNull()
            Me(Me.tableExtensionOfficersTrained05.FormSerialIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FFSGroupRow
        Inherits Global.System.Data.DataRow
        
        Private tableFFSGroup As FFSGroupDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFFSGroup = CType(Me.Table,FFSGroupDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID() As Integer
            Get
                Return CType(Me(Me.tableFFSGroup.GroupIDColumn),Integer)
            End Get
            Set
                Me(Me.tableFFSGroup.GroupIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupName() As String
            Get
                Try 
                    Return CType(Me(Me.tableFFSGroup.GroupNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupName' in table 'FFSGroup' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFFSGroup.GroupNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupNameNull() As Boolean
            Return Me.IsNull(Me.tableFFSGroup.GroupNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupNameNull()
            Me(Me.tableFFSGroup.GroupNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetExtensionOfficersTrained05Rows() As ExtensionOfficersTrained05Row()
            If (Me.Table.ChildRelations("FK_ExtensionOfficersTrained05_FFSGroup") Is Nothing) Then
                Return New ExtensionOfficersTrained05Row(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_ExtensionOfficersTrained05_FFSGroup")),ExtensionOfficersTrained05Row())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class appUspDistrictAnnualFillExtensionOfficersTrainedCropRow
        Inherits Global.System.Data.DataRow
        
        Private tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop As appUspDistrictAnnualFillExtensionOfficersTrainedCropDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop = CType(Me.Table,appUspDistrictAnnualFillExtensionOfficersTrainedCropDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID() As Integer
            Get
                Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.GroupIDColumn),Integer)
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.GroupIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupName() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.GroupNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupName' in table 'appUspDistrictAnnualFillExtensionOffic"& _ 
                            "ersTrainedCrop' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.GroupNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExtensionOfficersTrainedID() As System.Guid
            Get
                Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.ExtensionOfficersTrainedIDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.ExtensionOfficersTrainedIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FieldID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.FieldIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FieldID' in table 'appUspDistrictAnnualFillExtensionOfficer"& _ 
                            "sTrainedCrop' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.FieldIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FieldActivity() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.FieldActivityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FieldActivity' in table 'appUspDistrictAnnualFillExtensionO"& _ 
                            "fficersTrainedCrop' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.FieldActivityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfMaleOfficersTrained() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.NumberOfMaleOfficersTrainedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfMaleOfficersTrained' in table 'appUspDistrictAnnual"& _ 
                            "FillExtensionOfficersTrainedCrop' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.NumberOfMaleOfficersTrainedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfFemaleOfficersTrained() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.NumberOfFemaleOfficersTrainedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfFemaleOfficersTrained' in table 'appUspDistrictAnnu"& _ 
                            "alFillExtensionOfficersTrainedCrop' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.NumberOfFemaleOfficersTrainedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.TotalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total' in table 'appUspDistrictAnnualFillExtensionOfficersT"& _ 
                            "rainedCrop' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.TotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfOfficersTrainedLessThanSixMonths() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.NumberOfOfficersTrainedLessThanSixMonthsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfOfficersTrainedLessThanSixMonths' in table 'appUspD"& _ 
                            "istrictAnnualFillExtensionOfficersTrainedCrop' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.NumberOfOfficersTrainedLessThanSixMonthsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfOfficersTrainedMoreThanSixMonths() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.NumberOfOfficersTrainedMoreThanSixMonthsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfOfficersTrainedMoreThanSixMonths' in table 'appUspD"& _ 
                            "istrictAnnualFillExtensionOfficersTrainedCrop' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.NumberOfOfficersTrainedMoreThanSixMonthsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TrainingMethods() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.TrainingMethodsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TrainingMethods' in table 'appUspDistrictAnnualFillExtensio"& _ 
                            "nOfficersTrainedCrop' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.TrainingMethodsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TrainingProviders() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.TrainingProvidersColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TrainingProviders' in table 'appUspDistrictAnnualFillExtens"& _ 
                            "ionOfficersTrainedCrop' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.TrainingProvidersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'appUspDistrictAnnualFillExtensionOfficer"& _ 
                            "sTrainedCrop' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AnnuallyRecordID() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.AnnuallyRecordIDColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnnuallyRecordID' in table 'appUspDistrictAnnualFillExtensi"& _ 
                            "onOfficersTrainedCrop' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.AnnuallyRecordIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FormSerialID() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.FormSerialIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FormSerialID' in table 'appUspDistrictAnnualFillExtensionOf"& _ 
                            "ficersTrainedCrop' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.FormSerialIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupNameNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.GroupNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupNameNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.GroupNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFieldIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.FieldIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFieldIDNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.FieldIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFieldActivityNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.FieldActivityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFieldActivityNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.FieldActivityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfMaleOfficersTrainedNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.NumberOfMaleOfficersTrainedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfMaleOfficersTrainedNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.NumberOfMaleOfficersTrainedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfFemaleOfficersTrainedNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.NumberOfFemaleOfficersTrainedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfFemaleOfficersTrainedNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.NumberOfFemaleOfficersTrainedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.TotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.TotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfOfficersTrainedLessThanSixMonthsNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.NumberOfOfficersTrainedLessThanSixMonthsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfOfficersTrainedLessThanSixMonthsNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.NumberOfOfficersTrainedLessThanSixMonthsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfOfficersTrainedMoreThanSixMonthsNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.NumberOfOfficersTrainedMoreThanSixMonthsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfOfficersTrainedMoreThanSixMonthsNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.NumberOfOfficersTrainedMoreThanSixMonthsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTrainingMethodsNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.TrainingMethodsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTrainingMethodsNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.TrainingMethodsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTrainingProvidersNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.TrainingProvidersColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTrainingProvidersNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.TrainingProvidersColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAnnuallyRecordIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.AnnuallyRecordIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAnnuallyRecordIDNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.AnnuallyRecordIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFormSerialIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.FormSerialIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFormSerialIDNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedCrop.FormSerialIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow
        Inherits Global.System.Data.DataRow
        
        Private tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery As appUspDistrictAnnualFillExtensionOfficersTrainedFisheryDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery = CType(Me.Table,appUspDistrictAnnualFillExtensionOfficersTrainedFisheryDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID() As Integer
            Get
                Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.GroupIDColumn),Integer)
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.GroupIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupName() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.GroupNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupName' in table 'appUspDistrictAnnualFillExtensionOffic"& _ 
                            "ersTrainedFishery' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.GroupNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExtensionOfficersTrainedID() As System.Guid
            Get
                Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.ExtensionOfficersTrainedIDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.ExtensionOfficersTrainedIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FieldID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.FieldIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FieldID' in table 'appUspDistrictAnnualFillExtensionOfficer"& _ 
                            "sTrainedFishery' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.FieldIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FieldActivity() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.FieldActivityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FieldActivity' in table 'appUspDistrictAnnualFillExtensionO"& _ 
                            "fficersTrainedFishery' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.FieldActivityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfMaleOfficersTrained() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.NumberOfMaleOfficersTrainedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfMaleOfficersTrained' in table 'appUspDistrictAnnual"& _ 
                            "FillExtensionOfficersTrainedFishery' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.NumberOfMaleOfficersTrainedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfFemaleOfficersTrained() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.NumberOfFemaleOfficersTrainedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfFemaleOfficersTrained' in table 'appUspDistrictAnnu"& _ 
                            "alFillExtensionOfficersTrainedFishery' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.NumberOfFemaleOfficersTrainedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.TotalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total' in table 'appUspDistrictAnnualFillExtensionOfficersT"& _ 
                            "rainedFishery' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.TotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfOfficersTrainedLessThanSixMonths() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.NumberOfOfficersTrainedLessThanSixMonthsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfOfficersTrainedLessThanSixMonths' in table 'appUspD"& _ 
                            "istrictAnnualFillExtensionOfficersTrainedFishery' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.NumberOfOfficersTrainedLessThanSixMonthsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfOfficersTrainedMoreThanSixMonths() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.NumberOfOfficersTrainedMoreThanSixMonthsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfOfficersTrainedMoreThanSixMonths' in table 'appUspD"& _ 
                            "istrictAnnualFillExtensionOfficersTrainedFishery' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.NumberOfOfficersTrainedMoreThanSixMonthsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TrainingMethods() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.TrainingMethodsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TrainingMethods' in table 'appUspDistrictAnnualFillExtensio"& _ 
                            "nOfficersTrainedFishery' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.TrainingMethodsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TrainingProviders() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.TrainingProvidersColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TrainingProviders' in table 'appUspDistrictAnnualFillExtens"& _ 
                            "ionOfficersTrainedFishery' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.TrainingProvidersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'appUspDistrictAnnualFillExtensionOfficer"& _ 
                            "sTrainedFishery' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AnnuallyRecordID() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.AnnuallyRecordIDColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnnuallyRecordID' in table 'appUspDistrictAnnualFillExtensi"& _ 
                            "onOfficersTrainedFishery' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.AnnuallyRecordIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FormSerialID() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.FormSerialIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FormSerialID' in table 'appUspDistrictAnnualFillExtensionOf"& _ 
                            "ficersTrainedFishery' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.FormSerialIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupNameNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.GroupNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupNameNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.GroupNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFieldIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.FieldIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFieldIDNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.FieldIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFieldActivityNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.FieldActivityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFieldActivityNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.FieldActivityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfMaleOfficersTrainedNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.NumberOfMaleOfficersTrainedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfMaleOfficersTrainedNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.NumberOfMaleOfficersTrainedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfFemaleOfficersTrainedNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.NumberOfFemaleOfficersTrainedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfFemaleOfficersTrainedNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.NumberOfFemaleOfficersTrainedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.TotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.TotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfOfficersTrainedLessThanSixMonthsNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.NumberOfOfficersTrainedLessThanSixMonthsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfOfficersTrainedLessThanSixMonthsNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.NumberOfOfficersTrainedLessThanSixMonthsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfOfficersTrainedMoreThanSixMonthsNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.NumberOfOfficersTrainedMoreThanSixMonthsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfOfficersTrainedMoreThanSixMonthsNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.NumberOfOfficersTrainedMoreThanSixMonthsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTrainingMethodsNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.TrainingMethodsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTrainingMethodsNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.TrainingMethodsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTrainingProvidersNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.TrainingProvidersColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTrainingProvidersNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.TrainingProvidersColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAnnuallyRecordIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.AnnuallyRecordIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAnnuallyRecordIDNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.AnnuallyRecordIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFormSerialIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.FormSerialIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFormSerialIDNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedFishery.FormSerialIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow
        Inherits Global.System.Data.DataRow
        
        Private tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation As appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation = CType(Me.Table,appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID() As Integer
            Get
                Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.GroupIDColumn),Integer)
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.GroupIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupName() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.GroupNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupName' in table 'appUspDistrictAnnualFillExtensionOffic"& _ 
                            "ersTrainedIrrigation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.GroupNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExtensionOfficersTrainedID() As System.Guid
            Get
                Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.ExtensionOfficersTrainedIDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.ExtensionOfficersTrainedIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FieldID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.FieldIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FieldID' in table 'appUspDistrictAnnualFillExtensionOfficer"& _ 
                            "sTrainedIrrigation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.FieldIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FieldActivity() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.FieldActivityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FieldActivity' in table 'appUspDistrictAnnualFillExtensionO"& _ 
                            "fficersTrainedIrrigation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.FieldActivityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfMaleOfficersTrained() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.NumberOfMaleOfficersTrainedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfMaleOfficersTrained' in table 'appUspDistrictAnnual"& _ 
                            "FillExtensionOfficersTrainedIrrigation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.NumberOfMaleOfficersTrainedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfFemaleOfficersTrained() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.NumberOfFemaleOfficersTrainedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfFemaleOfficersTrained' in table 'appUspDistrictAnnu"& _ 
                            "alFillExtensionOfficersTrainedIrrigation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.NumberOfFemaleOfficersTrainedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.TotalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total' in table 'appUspDistrictAnnualFillExtensionOfficersT"& _ 
                            "rainedIrrigation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.TotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfOfficersTrainedLessThanSixMonths() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.NumberOfOfficersTrainedLessThanSixMonthsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfOfficersTrainedLessThanSixMonths' in table 'appUspD"& _ 
                            "istrictAnnualFillExtensionOfficersTrainedIrrigation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.NumberOfOfficersTrainedLessThanSixMonthsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfOfficersTrainedMoreThanSixMonths() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.NumberOfOfficersTrainedMoreThanSixMonthsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfOfficersTrainedMoreThanSixMonths' in table 'appUspD"& _ 
                            "istrictAnnualFillExtensionOfficersTrainedIrrigation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.NumberOfOfficersTrainedMoreThanSixMonthsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TrainingMethods() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.TrainingMethodsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TrainingMethods' in table 'appUspDistrictAnnualFillExtensio"& _ 
                            "nOfficersTrainedIrrigation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.TrainingMethodsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TrainingProviders() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.TrainingProvidersColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TrainingProviders' in table 'appUspDistrictAnnualFillExtens"& _ 
                            "ionOfficersTrainedIrrigation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.TrainingProvidersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'appUspDistrictAnnualFillExtensionOfficer"& _ 
                            "sTrainedIrrigation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AnnuallyRecordID() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.AnnuallyRecordIDColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnnuallyRecordID' in table 'appUspDistrictAnnualFillExtensi"& _ 
                            "onOfficersTrainedIrrigation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.AnnuallyRecordIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FormSerialID() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.FormSerialIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FormSerialID' in table 'appUspDistrictAnnualFillExtensionOf"& _ 
                            "ficersTrainedIrrigation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.FormSerialIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupNameNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.GroupNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupNameNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.GroupNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFieldIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.FieldIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFieldIDNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.FieldIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFieldActivityNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.FieldActivityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFieldActivityNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.FieldActivityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfMaleOfficersTrainedNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.NumberOfMaleOfficersTrainedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfMaleOfficersTrainedNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.NumberOfMaleOfficersTrainedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfFemaleOfficersTrainedNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.NumberOfFemaleOfficersTrainedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfFemaleOfficersTrainedNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.NumberOfFemaleOfficersTrainedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.TotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.TotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfOfficersTrainedLessThanSixMonthsNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.NumberOfOfficersTrainedLessThanSixMonthsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfOfficersTrainedLessThanSixMonthsNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.NumberOfOfficersTrainedLessThanSixMonthsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfOfficersTrainedMoreThanSixMonthsNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.NumberOfOfficersTrainedMoreThanSixMonthsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfOfficersTrainedMoreThanSixMonthsNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.NumberOfOfficersTrainedMoreThanSixMonthsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTrainingMethodsNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.TrainingMethodsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTrainingMethodsNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.TrainingMethodsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTrainingProvidersNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.TrainingProvidersColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTrainingProvidersNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.TrainingProvidersColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAnnuallyRecordIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.AnnuallyRecordIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAnnuallyRecordIDNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.AnnuallyRecordIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFormSerialIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.FormSerialIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFormSerialIDNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.FormSerialIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow
        Inherits Global.System.Data.DataRow
        
        Private tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock As appUspDistrictAnnualFillExtensionOfficersTrainedLivestockDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock = CType(Me.Table,appUspDistrictAnnualFillExtensionOfficersTrainedLivestockDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID() As Integer
            Get
                Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.GroupIDColumn),Integer)
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.GroupIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupName() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.GroupNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupName' in table 'appUspDistrictAnnualFillExtensionOffic"& _ 
                            "ersTrainedLivestock' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.GroupNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExtensionOfficersTrainedID() As System.Guid
            Get
                Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.ExtensionOfficersTrainedIDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.ExtensionOfficersTrainedIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FieldID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.FieldIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FieldID' in table 'appUspDistrictAnnualFillExtensionOfficer"& _ 
                            "sTrainedLivestock' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.FieldIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FieldActivity() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.FieldActivityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FieldActivity' in table 'appUspDistrictAnnualFillExtensionO"& _ 
                            "fficersTrainedLivestock' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.FieldActivityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfMaleOfficersTrained() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.NumberOfMaleOfficersTrainedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfMaleOfficersTrained' in table 'appUspDistrictAnnual"& _ 
                            "FillExtensionOfficersTrainedLivestock' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.NumberOfMaleOfficersTrainedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfFemaleOfficersTrained() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.NumberOfFemaleOfficersTrainedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfFemaleOfficersTrained' in table 'appUspDistrictAnnu"& _ 
                            "alFillExtensionOfficersTrainedLivestock' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.NumberOfFemaleOfficersTrainedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.TotalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total' in table 'appUspDistrictAnnualFillExtensionOfficersT"& _ 
                            "rainedLivestock' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.TotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfOfficersTrainedLessThanSixMonths() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.NumberOfOfficersTrainedLessThanSixMonthsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfOfficersTrainedLessThanSixMonths' in table 'appUspD"& _ 
                            "istrictAnnualFillExtensionOfficersTrainedLivestock' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.NumberOfOfficersTrainedLessThanSixMonthsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfOfficersTrainedMoreThanSixMonths() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.NumberOfOfficersTrainedMoreThanSixMonthsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfOfficersTrainedMoreThanSixMonths' in table 'appUspD"& _ 
                            "istrictAnnualFillExtensionOfficersTrainedLivestock' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.NumberOfOfficersTrainedMoreThanSixMonthsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TrainingMethods() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.TrainingMethodsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TrainingMethods' in table 'appUspDistrictAnnualFillExtensio"& _ 
                            "nOfficersTrainedLivestock' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.TrainingMethodsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TrainingProviders() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.TrainingProvidersColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TrainingProviders' in table 'appUspDistrictAnnualFillExtens"& _ 
                            "ionOfficersTrainedLivestock' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.TrainingProvidersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'appUspDistrictAnnualFillExtensionOfficer"& _ 
                            "sTrainedLivestock' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AnnuallyRecordID() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.AnnuallyRecordIDColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnnuallyRecordID' in table 'appUspDistrictAnnualFillExtensi"& _ 
                            "onOfficersTrainedLivestock' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.AnnuallyRecordIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FormSerialID() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.FormSerialIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FormSerialID' in table 'appUspDistrictAnnualFillExtensionOf"& _ 
                            "ficersTrainedLivestock' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.FormSerialIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupNameNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.GroupNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupNameNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.GroupNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFieldIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.FieldIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFieldIDNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.FieldIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFieldActivityNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.FieldActivityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFieldActivityNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.FieldActivityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfMaleOfficersTrainedNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.NumberOfMaleOfficersTrainedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfMaleOfficersTrainedNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.NumberOfMaleOfficersTrainedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfFemaleOfficersTrainedNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.NumberOfFemaleOfficersTrainedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfFemaleOfficersTrainedNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.NumberOfFemaleOfficersTrainedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.TotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.TotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfOfficersTrainedLessThanSixMonthsNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.NumberOfOfficersTrainedLessThanSixMonthsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfOfficersTrainedLessThanSixMonthsNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.NumberOfOfficersTrainedLessThanSixMonthsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfOfficersTrainedMoreThanSixMonthsNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.NumberOfOfficersTrainedMoreThanSixMonthsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfOfficersTrainedMoreThanSixMonthsNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.NumberOfOfficersTrainedMoreThanSixMonthsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTrainingMethodsNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.TrainingMethodsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTrainingMethodsNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.TrainingMethodsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTrainingProvidersNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.TrainingProvidersColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTrainingProvidersNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.TrainingProvidersColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAnnuallyRecordIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.AnnuallyRecordIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAnnuallyRecordIDNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.AnnuallyRecordIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFormSerialIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.FormSerialIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFormSerialIDNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedLivestock.FormSerialIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow
        Inherits Global.System.Data.DataRow
        
        Private tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing As appUspDistrictAnnualFillExtensionOfficersTrainedMarketingDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing = CType(Me.Table,appUspDistrictAnnualFillExtensionOfficersTrainedMarketingDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID() As Integer
            Get
                Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.GroupIDColumn),Integer)
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.GroupIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupName() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.GroupNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupName' in table 'appUspDistrictAnnualFillExtensionOffic"& _ 
                            "ersTrainedMarketing' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.GroupNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExtensionOfficersTrainedID() As System.Guid
            Get
                Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.ExtensionOfficersTrainedIDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.ExtensionOfficersTrainedIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FieldID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.FieldIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FieldID' in table 'appUspDistrictAnnualFillExtensionOfficer"& _ 
                            "sTrainedMarketing' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.FieldIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FieldActivity() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.FieldActivityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FieldActivity' in table 'appUspDistrictAnnualFillExtensionO"& _ 
                            "fficersTrainedMarketing' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.FieldActivityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfMaleOfficersTrained() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.NumberOfMaleOfficersTrainedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfMaleOfficersTrained' in table 'appUspDistrictAnnual"& _ 
                            "FillExtensionOfficersTrainedMarketing' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.NumberOfMaleOfficersTrainedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfFemaleOfficersTrained() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.NumberOfFemaleOfficersTrainedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfFemaleOfficersTrained' in table 'appUspDistrictAnnu"& _ 
                            "alFillExtensionOfficersTrainedMarketing' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.NumberOfFemaleOfficersTrainedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.TotalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total' in table 'appUspDistrictAnnualFillExtensionOfficersT"& _ 
                            "rainedMarketing' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.TotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfOfficersTrainedLessThanSixMonths() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.NumberOfOfficersTrainedLessThanSixMonthsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfOfficersTrainedLessThanSixMonths' in table 'appUspD"& _ 
                            "istrictAnnualFillExtensionOfficersTrainedMarketing' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.NumberOfOfficersTrainedLessThanSixMonthsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfOfficersTrainedMoreThanSixMonths() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.NumberOfOfficersTrainedMoreThanSixMonthsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfOfficersTrainedMoreThanSixMonths' in table 'appUspD"& _ 
                            "istrictAnnualFillExtensionOfficersTrainedMarketing' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.NumberOfOfficersTrainedMoreThanSixMonthsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TrainingMethods() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.TrainingMethodsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TrainingMethods' in table 'appUspDistrictAnnualFillExtensio"& _ 
                            "nOfficersTrainedMarketing' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.TrainingMethodsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TrainingProviders() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.TrainingProvidersColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TrainingProviders' in table 'appUspDistrictAnnualFillExtens"& _ 
                            "ionOfficersTrainedMarketing' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.TrainingProvidersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'appUspDistrictAnnualFillExtensionOfficer"& _ 
                            "sTrainedMarketing' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AnnuallyRecordID() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.AnnuallyRecordIDColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnnuallyRecordID' in table 'appUspDistrictAnnualFillExtensi"& _ 
                            "onOfficersTrainedMarketing' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.AnnuallyRecordIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FormSerialID() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.FormSerialIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FormSerialID' in table 'appUspDistrictAnnualFillExtensionOf"& _ 
                            "ficersTrainedMarketing' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.FormSerialIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupNameNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.GroupNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupNameNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.GroupNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFieldIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.FieldIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFieldIDNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.FieldIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFieldActivityNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.FieldActivityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFieldActivityNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.FieldActivityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfMaleOfficersTrainedNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.NumberOfMaleOfficersTrainedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfMaleOfficersTrainedNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.NumberOfMaleOfficersTrainedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfFemaleOfficersTrainedNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.NumberOfFemaleOfficersTrainedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfFemaleOfficersTrainedNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.NumberOfFemaleOfficersTrainedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.TotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.TotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfOfficersTrainedLessThanSixMonthsNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.NumberOfOfficersTrainedLessThanSixMonthsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfOfficersTrainedLessThanSixMonthsNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.NumberOfOfficersTrainedLessThanSixMonthsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfOfficersTrainedMoreThanSixMonthsNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.NumberOfOfficersTrainedMoreThanSixMonthsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfOfficersTrainedMoreThanSixMonthsNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.NumberOfOfficersTrainedMoreThanSixMonthsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTrainingMethodsNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.TrainingMethodsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTrainingMethodsNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.TrainingMethodsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTrainingProvidersNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.TrainingProvidersColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTrainingProvidersNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.TrainingProvidersColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAnnuallyRecordIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.AnnuallyRecordIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAnnuallyRecordIDNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.AnnuallyRecordIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFormSerialIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.FormSerialIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFormSerialIDNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedMarketing.FormSerialIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class appUspDistrictAnnualFillExtensionOfficersTrainedOthersRow
        Inherits Global.System.Data.DataRow
        
        Private tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers As appUspDistrictAnnualFillExtensionOfficersTrainedOthersDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers = CType(Me.Table,appUspDistrictAnnualFillExtensionOfficersTrainedOthersDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupID() As Integer
            Get
                Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.GroupIDColumn),Integer)
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.GroupIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GroupName() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.GroupNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupName' in table 'appUspDistrictAnnualFillExtensionOffic"& _ 
                            "ersTrainedOthers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.GroupNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExtensionOfficersTrainedID() As System.Guid
            Get
                Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.ExtensionOfficersTrainedIDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.ExtensionOfficersTrainedIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FieldID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.FieldIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FieldID' in table 'appUspDistrictAnnualFillExtensionOfficer"& _ 
                            "sTrainedOthers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.FieldIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FieldActivity() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.FieldActivityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FieldActivity' in table 'appUspDistrictAnnualFillExtensionO"& _ 
                            "fficersTrainedOthers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.FieldActivityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfMaleOfficersTrained() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.NumberOfMaleOfficersTrainedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfMaleOfficersTrained' in table 'appUspDistrictAnnual"& _ 
                            "FillExtensionOfficersTrainedOthers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.NumberOfMaleOfficersTrainedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfFemaleOfficersTrained() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.NumberOfFemaleOfficersTrainedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfFemaleOfficersTrained' in table 'appUspDistrictAnnu"& _ 
                            "alFillExtensionOfficersTrainedOthers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.NumberOfFemaleOfficersTrainedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.TotalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total' in table 'appUspDistrictAnnualFillExtensionOfficersT"& _ 
                            "rainedOthers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.TotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfOfficersTrainedLessThanSixMonths() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.NumberOfOfficersTrainedLessThanSixMonthsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfOfficersTrainedLessThanSixMonths' in table 'appUspD"& _ 
                            "istrictAnnualFillExtensionOfficersTrainedOthers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.NumberOfOfficersTrainedLessThanSixMonthsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfOfficersTrainedMoreThanSixMonths() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.NumberOfOfficersTrainedMoreThanSixMonthsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfOfficersTrainedMoreThanSixMonths' in table 'appUspD"& _ 
                            "istrictAnnualFillExtensionOfficersTrainedOthers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.NumberOfOfficersTrainedMoreThanSixMonthsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TrainingMethods() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.TrainingMethodsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TrainingMethods' in table 'appUspDistrictAnnualFillExtensio"& _ 
                            "nOfficersTrainedOthers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.TrainingMethodsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TrainingProviders() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.TrainingProvidersColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TrainingProviders' in table 'appUspDistrictAnnualFillExtens"& _ 
                            "ionOfficersTrainedOthers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.TrainingProvidersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'appUspDistrictAnnualFillExtensionOfficer"& _ 
                            "sTrainedOthers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AnnuallyRecordID() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.AnnuallyRecordIDColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnnuallyRecordID' in table 'appUspDistrictAnnualFillExtensi"& _ 
                            "onOfficersTrainedOthers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.AnnuallyRecordIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FormSerialID() As String
            Get
                Try 
                    Return CType(Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.FormSerialIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FormSerialID' in table 'appUspDistrictAnnualFillExtensionOf"& _ 
                            "ficersTrainedOthers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.FormSerialIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupNameNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.GroupNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupNameNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.GroupNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFieldIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.FieldIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFieldIDNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.FieldIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFieldActivityNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.FieldActivityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFieldActivityNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.FieldActivityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfMaleOfficersTrainedNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.NumberOfMaleOfficersTrainedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfMaleOfficersTrainedNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.NumberOfMaleOfficersTrainedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfFemaleOfficersTrainedNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.NumberOfFemaleOfficersTrainedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfFemaleOfficersTrainedNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.NumberOfFemaleOfficersTrainedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.TotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.TotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfOfficersTrainedLessThanSixMonthsNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.NumberOfOfficersTrainedLessThanSixMonthsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfOfficersTrainedLessThanSixMonthsNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.NumberOfOfficersTrainedLessThanSixMonthsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfOfficersTrainedMoreThanSixMonthsNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.NumberOfOfficersTrainedMoreThanSixMonthsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfOfficersTrainedMoreThanSixMonthsNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.NumberOfOfficersTrainedMoreThanSixMonthsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTrainingMethodsNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.TrainingMethodsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTrainingMethodsNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.TrainingMethodsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTrainingProvidersNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.TrainingProvidersColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTrainingProvidersNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.TrainingProvidersColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAnnuallyRecordIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.AnnuallyRecordIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAnnuallyRecordIDNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.AnnuallyRecordIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFormSerialIDNull() As Boolean
            Return Me.IsNull(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.FormSerialIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFormSerialIDNull()
            Me(Me.tableappUspDistrictAnnualFillExtensionOfficersTrainedOthers.FormSerialIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ExtensionOfficersTrained05RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ExtensionOfficersTrained05Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ExtensionOfficersTrained05Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ExtensionOfficersTrained05Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FFSGroupRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FFSGroupRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FFSGroupRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FFSGroupRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class appUspDistrictAnnualFillExtensionOfficersTrainedCropRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As appUspDistrictAnnualFillExtensionOfficersTrainedCropRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As appUspDistrictAnnualFillExtensionOfficersTrainedCropRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As appUspDistrictAnnualFillExtensionOfficersTrainedCropRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As appUspDistrictAnnualFillExtensionOfficersTrainedFisheryRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As appUspDistrictAnnualFillExtensionOfficersTrainedLivestockRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As appUspDistrictAnnualFillExtensionOfficersTrainedMarketingRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class appUspDistrictAnnualFillExtensionOfficersTrainedOthersRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As appUspDistrictAnnualFillExtensionOfficersTrainedOthersRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As appUspDistrictAnnualFillExtensionOfficersTrainedOthersRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As appUspDistrictAnnualFillExtensionOfficersTrainedOthersRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DistrictAnnualDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ExtensionOfficersTrained05TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ExtensionOfficersTrained05"
            tableMapping.ColumnMappings.Add("ExtensionOfficersTrainedID", "ExtensionOfficersTrainedID")
            tableMapping.ColumnMappings.Add("FieldID", "FieldID")
            tableMapping.ColumnMappings.Add("FieldActivity", "FieldActivity")
            tableMapping.ColumnMappings.Add("NumberOfMaleOfficersTrained", "NumberOfMaleOfficersTrained")
            tableMapping.ColumnMappings.Add("NumberOfFemaleOfficersTrained", "NumberOfFemaleOfficersTrained")
            tableMapping.ColumnMappings.Add("NumberOfOfficersTrainedLessThanSixMonths", "NumberOfOfficersTrainedLessThanSixMonths")
            tableMapping.ColumnMappings.Add("NumberOfOfficersTrainedMoreThanSixMonths", "NumberOfOfficersTrainedMoreThanSixMonths")
            tableMapping.ColumnMappings.Add("TrainingMethods", "TrainingMethods")
            tableMapping.ColumnMappings.Add("TrainingProviders", "TrainingProviders")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            tableMapping.ColumnMappings.Add("AnnuallyRecordID", "AnnuallyRecordID")
            tableMapping.ColumnMappings.Add("FormSerialID", "FormSerialID")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ExtensionOfficersTrained05] WHERE (([ExtensionOfficersTrainedID] = @"& _ 
                "Original_ExtensionOfficersTrainedID) AND ((@IsNull_FieldID = 1 AND [FieldID] IS "& _ 
                "NULL) OR ([FieldID] = @Original_FieldID)) AND ((@IsNull_FieldActivity = 1 AND [F"& _ 
                "ieldActivity] IS NULL) OR ([FieldActivity] = @Original_FieldActivity)) AND ((@Is"& _ 
                "Null_NumberOfMaleOfficersTrained = 1 AND [NumberOfMaleOfficersTrained] IS NULL) "& _ 
                "OR ([NumberOfMaleOfficersTrained] = @Original_NumberOfMaleOfficersTrained)) AND "& _ 
                "((@IsNull_NumberOfFemaleOfficersTrained = 1 AND [NumberOfFemaleOfficersTrained] "& _ 
                "IS NULL) OR ([NumberOfFemaleOfficersTrained] = @Original_NumberOfFemaleOfficersT"& _ 
                "rained)) AND ((@IsNull_NumberOfOfficersTrainedLessThanSixMonths = 1 AND [NumberO"& _ 
                "fOfficersTrainedLessThanSixMonths] IS NULL) OR ([NumberOfOfficersTrainedLessThan"& _ 
                "SixMonths] = @Original_NumberOfOfficersTrainedLessThanSixMonths)) AND ((@IsNull_"& _ 
                "NumberOfOfficersTrainedMoreThanSixMonths = 1 AND [NumberOfOfficersTrainedMoreTha"& _ 
                "nSixMonths] IS NULL) OR ([NumberOfOfficersTrainedMoreThanSixMonths] = @Original_"& _ 
                "NumberOfOfficersTrainedMoreThanSixMonths)) AND ((@IsNull_TrainingMethods = 1 AND"& _ 
                " [TrainingMethods] IS NULL) OR ([TrainingMethods] = @Original_TrainingMethods)) "& _ 
                "AND ((@IsNull_TrainingProviders = 1 AND [TrainingProviders] IS NULL) OR ([Traini"& _ 
                "ngProviders] = @Original_TrainingProviders)) AND ((@IsNull_Remarks = 1 AND [Rema"& _ 
                "rks] IS NULL) OR ([Remarks] = @Original_Remarks)) AND ((@IsNull_AnnuallyRecordID"& _ 
                " = 1 AND [AnnuallyRecordID] IS NULL) OR ([AnnuallyRecordID] = @Original_Annually"& _ 
                "RecordID)) AND ((@IsNull_FormSerialID = 1 AND [FormSerialID] IS NULL) OR ([FormS"& _ 
                "erialID] = @Original_FormSerialID)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ExtensionOfficersTrainedID", Global.System.Data.SqlDbType.UniqueIdentifier, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExtensionOfficersTrainedID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FieldID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FieldID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FieldID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FieldID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FieldActivity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FieldActivity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FieldActivity", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FieldActivity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NumberOfMaleOfficersTrained", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfMaleOfficersTrained", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NumberOfMaleOfficersTrained", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfMaleOfficersTrained", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NumberOfFemaleOfficersTrained", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfFemaleOfficersTrained", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NumberOfFemaleOfficersTrained", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfFemaleOfficersTrained", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NumberOfOfficersTrainedLessThanSixMonths", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfOfficersTrainedLessThanSixMonths", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NumberOfOfficersTrainedLessThanSixMonths", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfOfficersTrainedLessThanSixMonths", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NumberOfOfficersTrainedMoreThanSixMonths", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfOfficersTrainedMoreThanSixMonths", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NumberOfOfficersTrainedMoreThanSixMonths", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfOfficersTrainedMoreThanSixMonths", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TrainingMethods", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TrainingMethods", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TrainingMethods", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TrainingMethods", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TrainingProviders", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TrainingProviders", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TrainingProviders", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TrainingProviders", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Remarks", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Remarks", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AnnuallyRecordID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnnuallyRecordID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AnnuallyRecordID", Global.System.Data.SqlDbType.UniqueIdentifier, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnnuallyRecordID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FormSerialID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FormSerialID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FormSerialID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FormSerialID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ExtensionOfficersTrained05"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (ExtensionOffice"& _ 
                "rsTrainedID, FieldID, AnnuallyRecordID, FormSerialID)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (@Extension"& _ 
                "OfficersTrainedID,@FieldID,@AnnuallyRecordID,@FormSerialID);  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Extension"& _ 
                "OfficersTrainedID, FieldID, FieldActivity, NumberOfMaleOfficersTrained, NumberOf"& _ 
                "FemaleOfficersTrained, NumberOfOfficersTrainedLessThanSixMonths, NumberOfOfficer"& _ 
                "sTrainedMoreThanSixMonths, TrainingMethods, TrainingProviders, Remarks, Annually"& _ 
                "RecordID, FormSerialID FROM ExtensionOfficersTrained05 WHERE (ExtensionOfficersT"& _ 
                "rainedID = @ExtensionOfficersTrainedID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ExtensionOfficersTrainedID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "ExtensionOfficersTrainedID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FieldID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FieldID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AnnuallyRecordID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "AnnuallyRecordID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FormSerialID", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "FormSerialID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ExtensionOfficersTrained05] SET [ExtensionOfficersTrainedID] = @Extension"& _ 
                "OfficersTrainedID, [FieldID] = @FieldID, [FieldActivity] = @FieldActivity, [Numb"& _ 
                "erOfMaleOfficersTrained] = @NumberOfMaleOfficersTrained, [NumberOfFemaleOfficers"& _ 
                "Trained] = @NumberOfFemaleOfficersTrained, [NumberOfOfficersTrainedLessThanSixMo"& _ 
                "nths] = @NumberOfOfficersTrainedLessThanSixMonths, [NumberOfOfficersTrainedMoreT"& _ 
                "hanSixMonths] = @NumberOfOfficersTrainedMoreThanSixMonths, [TrainingMethods] = @"& _ 
                "TrainingMethods, [TrainingProviders] = @TrainingProviders, [Remarks] = @Remarks,"& _ 
                " [AnnuallyRecordID] = @AnnuallyRecordID, [FormSerialID] = @FormSerialID WHERE (("& _ 
                "[ExtensionOfficersTrainedID] = @Original_ExtensionOfficersTrainedID) AND ((@IsNu"& _ 
                "ll_FieldID = 1 AND [FieldID] IS NULL) OR ([FieldID] = @Original_FieldID)) AND (("& _ 
                "@IsNull_FieldActivity = 1 AND [FieldActivity] IS NULL) OR ([FieldActivity] = @Or"& _ 
                "iginal_FieldActivity)) AND ((@IsNull_NumberOfMaleOfficersTrained = 1 AND [Number"& _ 
                "OfMaleOfficersTrained] IS NULL) OR ([NumberOfMaleOfficersTrained] = @Original_Nu"& _ 
                "mberOfMaleOfficersTrained)) AND ((@IsNull_NumberOfFemaleOfficersTrained = 1 AND "& _ 
                "[NumberOfFemaleOfficersTrained] IS NULL) OR ([NumberOfFemaleOfficersTrained] = @"& _ 
                "Original_NumberOfFemaleOfficersTrained)) AND ((@IsNull_NumberOfOfficersTrainedLe"& _ 
                "ssThanSixMonths = 1 AND [NumberOfOfficersTrainedLessThanSixMonths] IS NULL) OR ("& _ 
                "[NumberOfOfficersTrainedLessThanSixMonths] = @Original_NumberOfOfficersTrainedLe"& _ 
                "ssThanSixMonths)) AND ((@IsNull_NumberOfOfficersTrainedMoreThanSixMonths = 1 AND"& _ 
                " [NumberOfOfficersTrainedMoreThanSixMonths] IS NULL) OR ([NumberOfOfficersTraine"& _ 
                "dMoreThanSixMonths] = @Original_NumberOfOfficersTrainedMoreThanSixMonths)) AND ("& _ 
                "(@IsNull_TrainingMethods = 1 AND [TrainingMethods] IS NULL) OR ([TrainingMethods"& _ 
                "] = @Original_TrainingMethods)) AND ((@IsNull_TrainingProviders = 1 AND [Trainin"& _ 
                "gProviders] IS NULL) OR ([TrainingProviders] = @Original_TrainingProviders)) AND"& _ 
                " ((@IsNull_Remarks = 1 AND [Remarks] IS NULL) OR ([Remarks] = @Original_Remarks)"& _ 
                ") AND ((@IsNull_AnnuallyRecordID = 1 AND [AnnuallyRecordID] IS NULL) OR ([Annual"& _ 
                "lyRecordID] = @Original_AnnuallyRecordID)) AND ((@IsNull_FormSerialID = 1 AND [F"& _ 
                "ormSerialID] IS NULL) OR ([FormSerialID] = @Original_FormSerialID)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Ex"& _ 
                "tensionOfficersTrainedID, FieldID, FieldActivity, NumberOfMaleOfficersTrained, N"& _ 
                "umberOfFemaleOfficersTrained, NumberOfOfficersTrainedLessThanSixMonths, NumberOf"& _ 
                "OfficersTrainedMoreThanSixMonths, TrainingMethods, TrainingProviders, Remarks, A"& _ 
                "nnuallyRecordID, FormSerialID FROM ExtensionOfficersTrained05 WHERE (ExtensionOf"& _ 
                "ficersTrainedID = @ExtensionOfficersTrainedID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ExtensionOfficersTrainedID", Global.System.Data.SqlDbType.UniqueIdentifier, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExtensionOfficersTrainedID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FieldID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FieldID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FieldActivity", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FieldActivity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfMaleOfficersTrained", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfMaleOfficersTrained", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfFemaleOfficersTrained", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfFemaleOfficersTrained", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfOfficersTrainedLessThanSixMonths", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfOfficersTrainedLessThanSixMonths", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfOfficersTrainedMoreThanSixMonths", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfOfficersTrainedMoreThanSixMonths", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TrainingMethods", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TrainingMethods", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TrainingProviders", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TrainingProviders", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AnnuallyRecordID", Global.System.Data.SqlDbType.UniqueIdentifier, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnnuallyRecordID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FormSerialID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FormSerialID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ExtensionOfficersTrainedID", Global.System.Data.SqlDbType.UniqueIdentifier, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExtensionOfficersTrainedID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FieldID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FieldID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FieldID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FieldID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FieldActivity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FieldActivity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FieldActivity", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FieldActivity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NumberOfMaleOfficersTrained", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfMaleOfficersTrained", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NumberOfMaleOfficersTrained", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfMaleOfficersTrained", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NumberOfFemaleOfficersTrained", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfFemaleOfficersTrained", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NumberOfFemaleOfficersTrained", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfFemaleOfficersTrained", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NumberOfOfficersTrainedLessThanSixMonths", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfOfficersTrainedLessThanSixMonths", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NumberOfOfficersTrainedLessThanSixMonths", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfOfficersTrainedLessThanSixMonths", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NumberOfOfficersTrainedMoreThanSixMonths", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfOfficersTrainedMoreThanSixMonths", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NumberOfOfficersTrainedMoreThanSixMonths", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfOfficersTrainedMoreThanSixMonths", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TrainingMethods", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TrainingMethods", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TrainingMethods", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TrainingMethods", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TrainingProviders", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TrainingProviders", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TrainingProviders", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TrainingProviders", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Remarks", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Remarks", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AnnuallyRecordID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnnuallyRecordID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AnnuallyRecordID", Global.System.Data.SqlDbType.UniqueIdentifier, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnnuallyRecordID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FormSerialID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FormSerialID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FormSerialID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FormSerialID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ExtensionOfficersTrainedID, FieldID, FieldActivity, NumberOfMaleOff" & _
                "icersTrained, NumberOfFemaleOfficersTrained, NumberOfOfficersTrainedLessThanSixM" & _
                "onths, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         NumberOfOfficersTrainedMoreThanSixMonths, Trai" & _
                "ningMethods, TrainingProviders, Remarks, AnnuallyRecordID, FormSerialID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM   " & _
                "         ExtensionOfficersTrained05" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE        (AnnuallyRecordID = @AnnuallyR" & _
                "ecordID)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AnnuallyRecordID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "AnnuallyRecordID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DistrictAnnualDataSet.ExtensionOfficersTrained05DataTable, ByVal AnnuallyRecordID As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (AnnuallyRecordID.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(AnnuallyRecordID.Value, System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal AnnuallyRecordID As Global.System.Nullable(Of Global.System.Guid)) As DistrictAnnualDataSet.ExtensionOfficersTrained05DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (AnnuallyRecordID.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(AnnuallyRecordID.Value, System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DistrictAnnualDataSet.ExtensionOfficersTrained05DataTable = New DistrictAnnualDataSet.ExtensionOfficersTrained05DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As DistrictAnnualDataSet.ExtensionOfficersTrained05DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As DistrictAnnualDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "ExtensionOfficersTrained05")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, True)> _
        Public Overridable Overloads Function Delete(ByVal Original_ExtensionOfficersTrainedID As System.Guid, ByVal Original_FieldID As Global.System.Nullable(Of Integer), ByVal Original_FieldActivity As String, ByVal Original_NumberOfMaleOfficersTrained As Global.System.Nullable(Of Integer), ByVal Original_NumberOfFemaleOfficersTrained As Global.System.Nullable(Of Integer), ByVal Original_NumberOfOfficersTrainedLessThanSixMonths As Global.System.Nullable(Of Integer), ByVal Original_NumberOfOfficersTrainedMoreThanSixMonths As Global.System.Nullable(Of Integer), ByVal Original_TrainingMethods As String, ByVal Original_TrainingProviders As String, ByVal Original_Remarks As String, ByVal Original_AnnuallyRecordID As Global.System.Nullable(Of Global.System.Guid), ByVal Original_FormSerialID As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ExtensionOfficersTrainedID, System.Guid)
            If (Original_FieldID.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_FieldID.Value, Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_FieldActivity Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_FieldActivity, String)
            End If
            If (Original_NumberOfMaleOfficersTrained.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_NumberOfMaleOfficersTrained.Value, Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_NumberOfFemaleOfficersTrained.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_NumberOfFemaleOfficersTrained.Value, Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_NumberOfOfficersTrainedLessThanSixMonths.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_NumberOfOfficersTrainedLessThanSixMonths.Value, Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_NumberOfOfficersTrainedMoreThanSixMonths.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_NumberOfOfficersTrainedMoreThanSixMonths.Value, Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_TrainingMethods Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_TrainingMethods, String)
            End If
            If (Original_TrainingProviders Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_TrainingProviders, String)
            End If
            If (Original_Remarks Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_Remarks, String)
            End If
            If (Original_AnnuallyRecordID.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_AnnuallyRecordID.Value, System.Guid)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_FormSerialID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_FormSerialID, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert(ByVal ExtensionOfficersTrainedID As System.Guid, ByVal FieldID As Global.System.Nullable(Of Integer), ByVal AnnuallyRecordID As Global.System.Nullable(Of Global.System.Guid), ByVal FormSerialID As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ExtensionOfficersTrainedID, System.Guid)
            If (FieldID.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(FieldID.Value, Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (AnnuallyRecordID.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(AnnuallyRecordID.Value, System.Guid)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (FormSerialID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(FormSerialID, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, True)> _
        Public Overridable Overloads Function Update( _
                    ByVal ExtensionOfficersTrainedID As System.Guid, _
                    ByVal FieldID As Global.System.Nullable(Of Integer), _
                    ByVal FieldActivity As String, _
                    ByVal NumberOfMaleOfficersTrained As Global.System.Nullable(Of Integer), _
                    ByVal NumberOfFemaleOfficersTrained As Global.System.Nullable(Of Integer), _
                    ByVal NumberOfOfficersTrainedLessThanSixMonths As Global.System.Nullable(Of Integer), _
                    ByVal NumberOfOfficersTrainedMoreThanSixMonths As Global.System.Nullable(Of Integer), _
                    ByVal TrainingMethods As String, _
                    ByVal TrainingProviders As String, _
                    ByVal Remarks As String, _
                    ByVal AnnuallyRecordID As Global.System.Nullable(Of Global.System.Guid), _
                    ByVal FormSerialID As String, _
                    ByVal Original_ExtensionOfficersTrainedID As System.Guid, _
                    ByVal Original_FieldID As Global.System.Nullable(Of Integer), _
                    ByVal Original_FieldActivity As String, _
                    ByVal Original_NumberOfMaleOfficersTrained As Global.System.Nullable(Of Integer), _
                    ByVal Original_NumberOfFemaleOfficersTrained As Global.System.Nullable(Of Integer), _
                    ByVal Original_NumberOfOfficersTrainedLessThanSixMonths As Global.System.Nullable(Of Integer), _
                    ByVal Original_NumberOfOfficersTrainedMoreThanSixMonths As Global.System.Nullable(Of Integer), _
                    ByVal Original_TrainingMethods As String, _
                    ByVal Original_TrainingProviders As String, _
                    ByVal Original_Remarks As String, _
                    ByVal Original_AnnuallyRecordID As Global.System.Nullable(Of Global.System.Guid), _
                    ByVal Original_FormSerialID As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ExtensionOfficersTrainedID, System.Guid)
            If (FieldID.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FieldID.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (FieldActivity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(FieldActivity, String)
            End If
            If (NumberOfMaleOfficersTrained.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(NumberOfMaleOfficersTrained.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (NumberOfFemaleOfficersTrained.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(NumberOfFemaleOfficersTrained.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (NumberOfOfficersTrainedLessThanSixMonths.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(NumberOfOfficersTrainedLessThanSixMonths.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (NumberOfOfficersTrainedMoreThanSixMonths.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(NumberOfOfficersTrainedMoreThanSixMonths.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (TrainingMethods Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(TrainingMethods, String)
            End If
            If (TrainingProviders Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(TrainingProviders, String)
            End If
            If (Remarks Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Remarks, String)
            End If
            If (AnnuallyRecordID.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(AnnuallyRecordID.Value, System.Guid)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (FormSerialID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(FormSerialID, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_ExtensionOfficersTrainedID, System.Guid)
            If (Original_FieldID.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_FieldID.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_FieldActivity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_FieldActivity, String)
            End If
            If (Original_NumberOfMaleOfficersTrained.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_NumberOfMaleOfficersTrained.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_NumberOfFemaleOfficersTrained.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_NumberOfFemaleOfficersTrained.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_NumberOfOfficersTrainedLessThanSixMonths.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_NumberOfOfficersTrainedLessThanSixMonths.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_NumberOfOfficersTrainedMoreThanSixMonths.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_NumberOfOfficersTrainedMoreThanSixMonths.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_TrainingMethods Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_TrainingMethods, String)
            End If
            If (Original_TrainingProviders Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_TrainingProviders, String)
            End If
            If (Original_Remarks Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_Remarks, String)
            End If
            If (Original_AnnuallyRecordID.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_AnnuallyRecordID.Value, System.Guid)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_FormSerialID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_FormSerialID, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, True)> _
        Public Overridable Overloads Function Update( _
                    ByVal FieldID As Global.System.Nullable(Of Integer), _
                    ByVal FieldActivity As String, _
                    ByVal NumberOfMaleOfficersTrained As Global.System.Nullable(Of Integer), _
                    ByVal NumberOfFemaleOfficersTrained As Global.System.Nullable(Of Integer), _
                    ByVal NumberOfOfficersTrainedLessThanSixMonths As Global.System.Nullable(Of Integer), _
                    ByVal NumberOfOfficersTrainedMoreThanSixMonths As Global.System.Nullable(Of Integer), _
                    ByVal TrainingMethods As String, _
                    ByVal TrainingProviders As String, _
                    ByVal Remarks As String, _
                    ByVal AnnuallyRecordID As Global.System.Nullable(Of Global.System.Guid), _
                    ByVal FormSerialID As String, _
                    ByVal Original_ExtensionOfficersTrainedID As System.Guid, _
                    ByVal Original_FieldID As Global.System.Nullable(Of Integer), _
                    ByVal Original_FieldActivity As String, _
                    ByVal Original_NumberOfMaleOfficersTrained As Global.System.Nullable(Of Integer), _
                    ByVal Original_NumberOfFemaleOfficersTrained As Global.System.Nullable(Of Integer), _
                    ByVal Original_NumberOfOfficersTrainedLessThanSixMonths As Global.System.Nullable(Of Integer), _
                    ByVal Original_NumberOfOfficersTrainedMoreThanSixMonths As Global.System.Nullable(Of Integer), _
                    ByVal Original_TrainingMethods As String, _
                    ByVal Original_TrainingProviders As String, _
                    ByVal Original_Remarks As String, _
                    ByVal Original_AnnuallyRecordID As Global.System.Nullable(Of Global.System.Guid), _
                    ByVal Original_FormSerialID As String) As Integer
            Return Me.Update(Original_ExtensionOfficersTrainedID, FieldID, FieldActivity, NumberOfMaleOfficersTrained, NumberOfFemaleOfficersTrained, NumberOfOfficersTrainedLessThanSixMonths, NumberOfOfficersTrainedMoreThanSixMonths, TrainingMethods, TrainingProviders, Remarks, AnnuallyRecordID, FormSerialID, Original_ExtensionOfficersTrainedID, Original_FieldID, Original_FieldActivity, Original_NumberOfMaleOfficersTrained, Original_NumberOfFemaleOfficersTrained, Original_NumberOfOfficersTrainedLessThanSixMonths, Original_NumberOfOfficersTrainedMoreThanSixMonths, Original_TrainingMethods, Original_TrainingProviders, Original_Remarks, Original_AnnuallyRecordID, Original_FormSerialID)
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class FFSGroupTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FFSGroup"
            tableMapping.ColumnMappings.Add("GroupID", "GroupID")
            tableMapping.ColumnMappings.Add("GroupName", "GroupName")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[FFSGroup] WHERE (([GroupID] = @Original_GroupID) AND ((@IsNull" & _
                "_GroupName = 1 AND [GroupName] IS NULL) OR ([GroupName] = @Original_GroupName)))" & _
                ""
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GroupID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupID", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupName", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupName", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[FFSGroup] ([GroupID], [GroupName]) VALUES (@GroupID, @GroupNam" & _
                "e);" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "SELECT GroupID, GroupName FROM FFSGroup WHERE (GroupID = @GroupID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GroupID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupName", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[FFSGroup] SET [GroupID] = @GroupID, [GroupName] = @GroupName WHERE " & _
                "(([GroupID] = @Original_GroupID) AND ((@IsNull_GroupName = 1 AND [GroupName] IS " & _
                "NULL) OR ([GroupName] = @Original_GroupName)));" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "SELECT GroupID, GroupName FROM " & _
                "FFSGroup WHERE (GroupID = @GroupID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GroupID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupName", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GroupID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupID", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupName", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupName", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT GroupID, GroupName FROM dbo.FFSGroup"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DistrictAnnualDataSet.FFSGroupDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As DistrictAnnualDataSet.FFSGroupDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DistrictAnnualDataSet.FFSGroupDataTable = New DistrictAnnualDataSet.FFSGroupDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As DistrictAnnualDataSet.FFSGroupDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As DistrictAnnualDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "FFSGroup")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, True)> _
        Public Overridable Overloads Function Delete(ByVal Original_GroupID As Integer, ByVal Original_GroupName As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_GroupID, Integer)
            If (Original_GroupName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_GroupName, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert(ByVal GroupID As Integer, ByVal GroupName As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(GroupID, Integer)
            If (GroupName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(GroupName, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, True)> _
        Public Overridable Overloads Function Update(ByVal GroupID As Integer, ByVal GroupName As String, ByVal Original_GroupID As Integer, ByVal Original_GroupName As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(GroupID, Integer)
            If (GroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(GroupName, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_GroupID, Integer)
            If (Original_GroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_GroupName, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, True)> _
        Public Overridable Overloads Function Update(ByVal GroupName As String, ByVal Original_GroupID As Integer, ByVal Original_GroupName As String) As Integer
            Return Me.Update(Original_GroupID, GroupName, Original_GroupID, Original_GroupName)
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "appUspDistrictAnnualFillExtensionOfficersTrainedCrop"
            tableMapping.ColumnMappings.Add("GroupID", "GroupID")
            tableMapping.ColumnMappings.Add("GroupName", "GroupName")
            tableMapping.ColumnMappings.Add("ExtensionOfficersTrainedID", "ExtensionOfficersTrainedID")
            tableMapping.ColumnMappings.Add("FieldID", "FieldID")
            tableMapping.ColumnMappings.Add("FieldActivity", "FieldActivity")
            tableMapping.ColumnMappings.Add("NumberOfMaleOfficersTrained", "NumberOfMaleOfficersTrained")
            tableMapping.ColumnMappings.Add("NumberOfFemaleOfficersTrained", "NumberOfFemaleOfficersTrained")
            tableMapping.ColumnMappings.Add("NumberOfOfficersTrainedLessThanSixMonths", "NumberOfOfficersTrainedLessThanSixMonths")
            tableMapping.ColumnMappings.Add("NumberOfOfficersTrainedMoreThanSixMonths", "NumberOfOfficersTrainedMoreThanSixMonths")
            tableMapping.ColumnMappings.Add("TrainingMethods", "TrainingMethods")
            tableMapping.ColumnMappings.Add("TrainingProviders", "TrainingProviders")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            tableMapping.ColumnMappings.Add("AnnuallyRecordID", "AnnuallyRecordID")
            tableMapping.ColumnMappings.Add("FormSerialID", "FormSerialID")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE       ExtensionOfficersTrained05" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "SET                FieldActivity = @Fiel" & _
                "dActivity, NumberOfMaleOfficersTrained = @NumberOfMaleOfficersTrained, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       " & _
                "                  NumberOfFemaleOfficersTrained = @NumberOfFemaleOfficersTrained" & _
                ", " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         NumberOfOfficersTrainedLessThanSixMonths = @NumberO" & _
                "fOfficersTrainedLessThanSixMonths, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         NumberOfOfficersTr" & _
                "ainedMoreThanSixMonths = @NumberOfOfficersTrainedMoreThanSixMonths, TrainingMeth" & _
                "ods = @TrainingMethods, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         TrainingProviders = @Training" & _
                "Providers, Remarks = @Remarks" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE        (ExtensionOfficersTrainedID = @Exten" & _
                "sionOfficersTrainedID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FieldActivity", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "FieldActivity", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfMaleOfficersTrained", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfMaleOfficersTrained", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfFemaleOfficersTrained", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfFemaleOfficersTrained", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfOfficersTrainedLessThanSixMonths", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfOfficersTrainedLessThanSixMonths", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfOfficersTrainedMoreThanSixMonths", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfOfficersTrainedMoreThanSixMonths", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TrainingMethods", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "TrainingMethods", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TrainingProviders", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "TrainingProviders", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ExtensionOfficersTrainedID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "ExtensionOfficersTrainedID", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.appUspDistrictAnnualFillExtensionOfficersTrainedCrop"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RecordID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedCropDataTable, ByVal RecordID As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (RecordID.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(RecordID.Value, System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal RecordID As Global.System.Nullable(Of Global.System.Guid)) As DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedCropDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (RecordID.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(RecordID.Value, System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedCropDataTable = New DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedCropDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedCropDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As DistrictAnnualDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "appUspDistrictAnnualFillExtensionOfficersTrainedCrop")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "appUspDistrictAnnualFillExtensionOfficersTrainedFishery"
            tableMapping.ColumnMappings.Add("GroupID", "GroupID")
            tableMapping.ColumnMappings.Add("GroupName", "GroupName")
            tableMapping.ColumnMappings.Add("ExtensionOfficersTrainedID", "ExtensionOfficersTrainedID")
            tableMapping.ColumnMappings.Add("FieldID", "FieldID")
            tableMapping.ColumnMappings.Add("FieldActivity", "FieldActivity")
            tableMapping.ColumnMappings.Add("NumberOfMaleOfficersTrained", "NumberOfMaleOfficersTrained")
            tableMapping.ColumnMappings.Add("NumberOfFemaleOfficersTrained", "NumberOfFemaleOfficersTrained")
            tableMapping.ColumnMappings.Add("NumberOfOfficersTrainedLessThanSixMonths", "NumberOfOfficersTrainedLessThanSixMonths")
            tableMapping.ColumnMappings.Add("NumberOfOfficersTrainedMoreThanSixMonths", "NumberOfOfficersTrainedMoreThanSixMonths")
            tableMapping.ColumnMappings.Add("TrainingMethods", "TrainingMethods")
            tableMapping.ColumnMappings.Add("TrainingProviders", "TrainingProviders")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            tableMapping.ColumnMappings.Add("AnnuallyRecordID", "AnnuallyRecordID")
            tableMapping.ColumnMappings.Add("FormSerialID", "FormSerialID")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE       ExtensionOfficersTrained05" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "SET                FieldActivity = @Fiel" & _
                "dActivity, NumberOfMaleOfficersTrained = @NumberOfMaleOfficersTrained, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       " & _
                "                  NumberOfFemaleOfficersTrained = @NumberOfFemaleOfficersTrained" & _
                ", " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         NumberOfOfficersTrainedLessThanSixMonths = @NumberO" & _
                "fOfficersTrainedLessThanSixMonths, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         NumberOfOfficersTr" & _
                "ainedMoreThanSixMonths = @NumberOfOfficersTrainedMoreThanSixMonths, TrainingMeth" & _
                "ods = @TrainingMethods, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         TrainingProviders = @Training" & _
                "Providers, Remarks = @Remarks" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE        (ExtensionOfficersTrainedID = @Exten" & _
                "sionOfficersTrainedID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FieldActivity", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "FieldActivity", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfMaleOfficersTrained", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfMaleOfficersTrained", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfFemaleOfficersTrained", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfFemaleOfficersTrained", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfOfficersTrainedLessThanSixMonths", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfOfficersTrainedLessThanSixMonths", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfOfficersTrainedMoreThanSixMonths", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfOfficersTrainedMoreThanSixMonths", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TrainingMethods", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "TrainingMethods", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TrainingProviders", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "TrainingProviders", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ExtensionOfficersTrainedID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "ExtensionOfficersTrainedID", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.appUspDistrictAnnualFillExtensionOfficersTrainedFishery"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RecordID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedFisheryDataTable, ByVal RecordID As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (RecordID.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(RecordID.Value, System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal RecordID As Global.System.Nullable(Of Global.System.Guid)) As DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedFisheryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (RecordID.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(RecordID.Value, System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedFisheryDataTable = New DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedFisheryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedFisheryDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As DistrictAnnualDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "appUspDistrictAnnualFillExtensionOfficersTrainedFishery")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "appUspDistrictAnnualFillExtensionOfficersTrainedIrrigation"
            tableMapping.ColumnMappings.Add("GroupID", "GroupID")
            tableMapping.ColumnMappings.Add("GroupName", "GroupName")
            tableMapping.ColumnMappings.Add("ExtensionOfficersTrainedID", "ExtensionOfficersTrainedID")
            tableMapping.ColumnMappings.Add("FieldID", "FieldID")
            tableMapping.ColumnMappings.Add("FieldActivity", "FieldActivity")
            tableMapping.ColumnMappings.Add("NumberOfMaleOfficersTrained", "NumberOfMaleOfficersTrained")
            tableMapping.ColumnMappings.Add("NumberOfFemaleOfficersTrained", "NumberOfFemaleOfficersTrained")
            tableMapping.ColumnMappings.Add("NumberOfOfficersTrainedLessThanSixMonths", "NumberOfOfficersTrainedLessThanSixMonths")
            tableMapping.ColumnMappings.Add("NumberOfOfficersTrainedMoreThanSixMonths", "NumberOfOfficersTrainedMoreThanSixMonths")
            tableMapping.ColumnMappings.Add("TrainingMethods", "TrainingMethods")
            tableMapping.ColumnMappings.Add("TrainingProviders", "TrainingProviders")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            tableMapping.ColumnMappings.Add("AnnuallyRecordID", "AnnuallyRecordID")
            tableMapping.ColumnMappings.Add("FormSerialID", "FormSerialID")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE       ExtensionOfficersTrained05" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "SET                FieldActivity = @Fiel" & _
                "dActivity, NumberOfMaleOfficersTrained = @NumberOfMaleOfficersTrained, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       " & _
                "                  NumberOfFemaleOfficersTrained = @NumberOfFemaleOfficersTrained" & _
                ", " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         NumberOfOfficersTrainedLessThanSixMonths = @NumberO" & _
                "fOfficersTrainedLessThanSixMonths, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         NumberOfOfficersTr" & _
                "ainedMoreThanSixMonths = @NumberOfOfficersTrainedMoreThanSixMonths, TrainingMeth" & _
                "ods = @TrainingMethods, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         TrainingProviders = @Training" & _
                "Providers, Remarks = @Remarks" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE        (ExtensionOfficersTrainedID = @Exten" & _
                "sionOfficersTrainedID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FieldActivity", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "FieldActivity", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfMaleOfficersTrained", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfMaleOfficersTrained", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfFemaleOfficersTrained", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfFemaleOfficersTrained", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfOfficersTrainedLessThanSixMonths", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfOfficersTrainedLessThanSixMonths", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfOfficersTrainedMoreThanSixMonths", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfOfficersTrainedMoreThanSixMonths", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TrainingMethods", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "TrainingMethods", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TrainingProviders", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "TrainingProviders", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ExtensionOfficersTrainedID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "ExtensionOfficersTrainedID", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.appUspDistrictAnnualFillExtensionOfficersTrainedIrrigation"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RecordID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationDataTable, ByVal RecordID As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (RecordID.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(RecordID.Value, System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal RecordID As Global.System.Nullable(Of Global.System.Guid)) As DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (RecordID.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(RecordID.Value, System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationDataTable = New DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As DistrictAnnualDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "appUspDistrictAnnualFillExtensionOfficersTrainedIrrigation")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "appUspDistrictAnnualFillExtensionOfficersTrainedLivestock"
            tableMapping.ColumnMappings.Add("GroupID", "GroupID")
            tableMapping.ColumnMappings.Add("GroupName", "GroupName")
            tableMapping.ColumnMappings.Add("ExtensionOfficersTrainedID", "ExtensionOfficersTrainedID")
            tableMapping.ColumnMappings.Add("FieldID", "FieldID")
            tableMapping.ColumnMappings.Add("FieldActivity", "FieldActivity")
            tableMapping.ColumnMappings.Add("NumberOfMaleOfficersTrained", "NumberOfMaleOfficersTrained")
            tableMapping.ColumnMappings.Add("NumberOfFemaleOfficersTrained", "NumberOfFemaleOfficersTrained")
            tableMapping.ColumnMappings.Add("NumberOfOfficersTrainedLessThanSixMonths", "NumberOfOfficersTrainedLessThanSixMonths")
            tableMapping.ColumnMappings.Add("NumberOfOfficersTrainedMoreThanSixMonths", "NumberOfOfficersTrainedMoreThanSixMonths")
            tableMapping.ColumnMappings.Add("TrainingMethods", "TrainingMethods")
            tableMapping.ColumnMappings.Add("TrainingProviders", "TrainingProviders")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            tableMapping.ColumnMappings.Add("AnnuallyRecordID", "AnnuallyRecordID")
            tableMapping.ColumnMappings.Add("FormSerialID", "FormSerialID")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE       ExtensionOfficersTrained05" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "SET                FieldActivity = @Fiel" & _
                "dActivity, NumberOfMaleOfficersTrained = @NumberOfMaleOfficersTrained, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       " & _
                "                  NumberOfFemaleOfficersTrained = @NumberOfFemaleOfficersTrained" & _
                ", " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         NumberOfOfficersTrainedLessThanSixMonths = @NumberO" & _
                "fOfficersTrainedLessThanSixMonths, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         NumberOfOfficersTr" & _
                "ainedMoreThanSixMonths = @NumberOfOfficersTrainedMoreThanSixMonths, TrainingMeth" & _
                "ods = @TrainingMethods, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         TrainingProviders = @Training" & _
                "Providers, Remarks = @Remarks" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE        (ExtensionOfficersTrainedID = @Exten" & _
                "sionOfficersTrainedID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FieldActivity", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "FieldActivity", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfMaleOfficersTrained", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfMaleOfficersTrained", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfFemaleOfficersTrained", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfFemaleOfficersTrained", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfOfficersTrainedLessThanSixMonths", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfOfficersTrainedLessThanSixMonths", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfOfficersTrainedMoreThanSixMonths", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfOfficersTrainedMoreThanSixMonths", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TrainingMethods", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "TrainingMethods", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TrainingProviders", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "TrainingProviders", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ExtensionOfficersTrainedID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "ExtensionOfficersTrainedID", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.appUspDistrictAnnualFillExtensionOfficersTrainedLivestock"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RecordID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedLivestockDataTable, ByVal RecordID As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (RecordID.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(RecordID.Value, System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal RecordID As Global.System.Nullable(Of Global.System.Guid)) As DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedLivestockDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (RecordID.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(RecordID.Value, System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedLivestockDataTable = New DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedLivestockDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedLivestockDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As DistrictAnnualDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "appUspDistrictAnnualFillExtensionOfficersTrainedLivestock")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "appUspDistrictAnnualFillExtensionOfficersTrainedMarketing"
            tableMapping.ColumnMappings.Add("GroupID", "GroupID")
            tableMapping.ColumnMappings.Add("GroupName", "GroupName")
            tableMapping.ColumnMappings.Add("ExtensionOfficersTrainedID", "ExtensionOfficersTrainedID")
            tableMapping.ColumnMappings.Add("FieldID", "FieldID")
            tableMapping.ColumnMappings.Add("FieldActivity", "FieldActivity")
            tableMapping.ColumnMappings.Add("NumberOfMaleOfficersTrained", "NumberOfMaleOfficersTrained")
            tableMapping.ColumnMappings.Add("NumberOfFemaleOfficersTrained", "NumberOfFemaleOfficersTrained")
            tableMapping.ColumnMappings.Add("NumberOfOfficersTrainedLessThanSixMonths", "NumberOfOfficersTrainedLessThanSixMonths")
            tableMapping.ColumnMappings.Add("NumberOfOfficersTrainedMoreThanSixMonths", "NumberOfOfficersTrainedMoreThanSixMonths")
            tableMapping.ColumnMappings.Add("TrainingMethods", "TrainingMethods")
            tableMapping.ColumnMappings.Add("TrainingProviders", "TrainingProviders")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            tableMapping.ColumnMappings.Add("AnnuallyRecordID", "AnnuallyRecordID")
            tableMapping.ColumnMappings.Add("FormSerialID", "FormSerialID")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE       ExtensionOfficersTrained05" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "SET                FieldActivity = @Fiel" & _
                "dActivity, NumberOfMaleOfficersTrained = @NumberOfMaleOfficersTrained, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       " & _
                "                  NumberOfFemaleOfficersTrained = @NumberOfFemaleOfficersTrained" & _
                ", " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         NumberOfOfficersTrainedLessThanSixMonths = @NumberO" & _
                "fOfficersTrainedLessThanSixMonths, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         NumberOfOfficersTr" & _
                "ainedMoreThanSixMonths = @NumberOfOfficersTrainedMoreThanSixMonths, TrainingMeth" & _
                "ods = @TrainingMethods, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         TrainingProviders = @Training" & _
                "Providers, Remarks = @Remarks" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE        (ExtensionOfficersTrainedID = @Exten" & _
                "sionOfficersTrainedID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FieldActivity", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "FieldActivity", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfMaleOfficersTrained", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfMaleOfficersTrained", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfFemaleOfficersTrained", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfFemaleOfficersTrained", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfOfficersTrainedLessThanSixMonths", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfOfficersTrainedLessThanSixMonths", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfOfficersTrainedMoreThanSixMonths", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfOfficersTrainedMoreThanSixMonths", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TrainingMethods", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "TrainingMethods", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TrainingProviders", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "TrainingProviders", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ExtensionOfficersTrainedID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "ExtensionOfficersTrainedID", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.appUspDistrictAnnualFillExtensionOfficersTrainedMarketing"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RecordID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedMarketingDataTable, ByVal RecordID As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (RecordID.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(RecordID.Value, System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal RecordID As Global.System.Nullable(Of Global.System.Guid)) As DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedMarketingDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (RecordID.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(RecordID.Value, System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedMarketingDataTable = New DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedMarketingDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedMarketingDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As DistrictAnnualDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "appUspDistrictAnnualFillExtensionOfficersTrainedMarketing")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "appUspDistrictAnnualFillExtensionOfficersTrainedOthers"
            tableMapping.ColumnMappings.Add("GroupID", "GroupID")
            tableMapping.ColumnMappings.Add("GroupName", "GroupName")
            tableMapping.ColumnMappings.Add("ExtensionOfficersTrainedID", "ExtensionOfficersTrainedID")
            tableMapping.ColumnMappings.Add("FieldID", "FieldID")
            tableMapping.ColumnMappings.Add("FieldActivity", "FieldActivity")
            tableMapping.ColumnMappings.Add("NumberOfMaleOfficersTrained", "NumberOfMaleOfficersTrained")
            tableMapping.ColumnMappings.Add("NumberOfFemaleOfficersTrained", "NumberOfFemaleOfficersTrained")
            tableMapping.ColumnMappings.Add("NumberOfOfficersTrainedLessThanSixMonths", "NumberOfOfficersTrainedLessThanSixMonths")
            tableMapping.ColumnMappings.Add("NumberOfOfficersTrainedMoreThanSixMonths", "NumberOfOfficersTrainedMoreThanSixMonths")
            tableMapping.ColumnMappings.Add("TrainingMethods", "TrainingMethods")
            tableMapping.ColumnMappings.Add("TrainingProviders", "TrainingProviders")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            tableMapping.ColumnMappings.Add("AnnuallyRecordID", "AnnuallyRecordID")
            tableMapping.ColumnMappings.Add("FormSerialID", "FormSerialID")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE       ExtensionOfficersTrained05" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "SET                FieldActivity = @Fiel" & _
                "dActivity, NumberOfMaleOfficersTrained = @NumberOfMaleOfficersTrained, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       " & _
                "                  NumberOfFemaleOfficersTrained = @NumberOfFemaleOfficersTrained" & _
                ", " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         NumberOfOfficersTrainedLessThanSixMonths = @NumberO" & _
                "fOfficersTrainedLessThanSixMonths, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         NumberOfOfficersTr" & _
                "ainedMoreThanSixMonths = @NumberOfOfficersTrainedMoreThanSixMonths, TrainingMeth" & _
                "ods = @TrainingMethods, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         TrainingProviders = @Training" & _
                "Providers, Remarks = @Remarks" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE        (ExtensionOfficersTrainedID = @Exten" & _
                "sionOfficersTrainedID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FieldActivity", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "FieldActivity", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfMaleOfficersTrained", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfMaleOfficersTrained", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfFemaleOfficersTrained", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfFemaleOfficersTrained", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfOfficersTrainedLessThanSixMonths", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfOfficersTrainedLessThanSixMonths", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumberOfOfficersTrainedMoreThanSixMonths", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "NumberOfOfficersTrainedMoreThanSixMonths", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TrainingMethods", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "TrainingMethods", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TrainingProviders", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "TrainingProviders", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ExtensionOfficersTrainedID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "ExtensionOfficersTrainedID", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = My.Settings.DataConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.appUspDistrictAnnualFillExtensionOfficersTrainedOthers"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RecordID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedOthersDataTable, ByVal RecordID As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (RecordID.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(RecordID.Value, System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal RecordID As Global.System.Nullable(Of Global.System.Guid)) As DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedOthersDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (RecordID.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(RecordID.Value, System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedOthersDataTable = New DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedOthersDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As DistrictAnnualDataSet.appUspDistrictAnnualFillExtensionOfficersTrainedOthersDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As DistrictAnnualDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "appUspDistrictAnnualFillExtensionOfficersTrainedOthers")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _extensionOfficersTrained05TableAdapter As ExtensionOfficersTrained05TableAdapter
        
        Private _fFSGroupTableAdapter As FFSGroupTableAdapter
        
        Private _appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter As appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter
        
        Private _appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter As appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter
        
        Private _appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter As appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter
        
        Private _appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter As appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter
        
        Private _appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter As appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter
        
        Private _appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter As appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ExtensionOfficersTrained05TableAdapter() As ExtensionOfficersTrained05TableAdapter
            Get
                Return Me._extensionOfficersTrained05TableAdapter
            End Get
            Set
                Me._extensionOfficersTrained05TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property FFSGroupTableAdapter() As FFSGroupTableAdapter
            Get
                Return Me._fFSGroupTableAdapter
            End Get
            Set
                Me._fFSGroupTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter() As appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter
            Get
                Return Me._appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter
            End Get
            Set
                Me._appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter() As appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter
            Get
                Return Me._appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter
            End Get
            Set
                Me._appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter() As appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter
            Get
                Return Me._appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter
            End Get
            Set
                Me._appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter() As appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter
            Get
                Return Me._appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter
            End Get
            Set
                Me._appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter() As appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter
            Get
                Return Me._appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter
            End Get
            Set
                Me._appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter() As appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter
            Get
                Return Me._appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter
            End Get
            Set
                Me._appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._extensionOfficersTrained05TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._extensionOfficersTrained05TableAdapter.Connection) Is Nothing)) Then
                    Return Me._extensionOfficersTrained05TableAdapter.Connection
                End If
                If ((Not (Me._fFSGroupTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._fFSGroupTableAdapter.Connection) Is Nothing)) Then
                    Return Me._fFSGroupTableAdapter.Connection
                End If
                If ((Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter.Connection) Is Nothing)) Then
                    Return Me._appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter.Connection
                End If
                If ((Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter.Connection) Is Nothing)) Then
                    Return Me._appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter.Connection
                End If
                If ((Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter.Connection) Is Nothing)) Then
                    Return Me._appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter.Connection
                End If
                If ((Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter.Connection) Is Nothing)) Then
                    Return Me._appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter.Connection
                End If
                If ((Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter.Connection) Is Nothing)) Then
                    Return Me._appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter.Connection
                End If
                If ((Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter.Connection) Is Nothing)) Then
                    Return Me._appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._extensionOfficersTrained05TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._fFSGroupTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DistrictAnnualDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._fFSGroupTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.FFSGroup.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._fFSGroupTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._extensionOfficersTrained05TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ExtensionOfficersTrained05.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._extensionOfficersTrained05TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.appUspDistrictAnnualFillExtensionOfficersTrainedCrop.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.appUspDistrictAnnualFillExtensionOfficersTrainedFishery.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.appUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.appUspDistrictAnnualFillExtensionOfficersTrainedLivestock.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.appUspDistrictAnnualFillExtensionOfficersTrainedMarketing.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.appUspDistrictAnnualFillExtensionOfficersTrainedOthers.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DistrictAnnualDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._fFSGroupTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.FFSGroup.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._fFSGroupTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._extensionOfficersTrained05TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ExtensionOfficersTrained05.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._extensionOfficersTrained05TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.appUspDistrictAnnualFillExtensionOfficersTrainedCrop.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.appUspDistrictAnnualFillExtensionOfficersTrainedFishery.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.appUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.appUspDistrictAnnualFillExtensionOfficersTrainedLivestock.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.appUspDistrictAnnualFillExtensionOfficersTrainedMarketing.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.appUspDistrictAnnualFillExtensionOfficersTrainedOthers.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DistrictAnnualDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.appUspDistrictAnnualFillExtensionOfficersTrainedOthers.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.appUspDistrictAnnualFillExtensionOfficersTrainedMarketing.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.appUspDistrictAnnualFillExtensionOfficersTrainedLivestock.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.appUspDistrictAnnualFillExtensionOfficersTrainedIrrigation.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.appUspDistrictAnnualFillExtensionOfficersTrainedFishery.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.appUspDistrictAnnualFillExtensionOfficersTrainedCrop.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._extensionOfficersTrained05TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ExtensionOfficersTrained05.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._extensionOfficersTrained05TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._fFSGroupTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.FFSGroup.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._fFSGroupTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DistrictAnnualDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._extensionOfficersTrained05TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._extensionOfficersTrained05TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._fFSGroupTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._fFSGroupTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._extensionOfficersTrained05TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._extensionOfficersTrained05TableAdapter, Me._extensionOfficersTrained05TableAdapter.Connection)
                    Me._extensionOfficersTrained05TableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._extensionOfficersTrained05TableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._extensionOfficersTrained05TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._extensionOfficersTrained05TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._extensionOfficersTrained05TableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._fFSGroupTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._fFSGroupTableAdapter, Me._fFSGroupTableAdapter.Connection)
                    Me._fFSGroupTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._fFSGroupTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._fFSGroupTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._fFSGroupTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._fFSGroupTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter, Me._appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter.Connection)
                    Me._appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter, Me._appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter.Connection)
                    Me._appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter, Me._appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter.Connection)
                    Me._appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter, Me._appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter.Connection)
                    Me._appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter, Me._appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter.Connection)
                    Me._appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter, Me._appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter.Connection)
                    Me._appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._extensionOfficersTrained05TableAdapter) Is Nothing) Then
                    Me._extensionOfficersTrained05TableAdapter.Connection = CType(revertConnections(Me._extensionOfficersTrained05TableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._extensionOfficersTrained05TableAdapter.Transaction = Nothing
                End If
                If (Not (Me._fFSGroupTableAdapter) Is Nothing) Then
                    Me._fFSGroupTableAdapter.Connection = CType(revertConnections(Me._fFSGroupTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._fFSGroupTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter) Is Nothing) Then
                    Me._appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter.Connection = CType(revertConnections(Me._appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._appUspDistrictAnnualFillExtensionOfficersTrainedCropTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter) Is Nothing) Then
                    Me._appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter.Connection = CType(revertConnections(Me._appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._appUspDistrictAnnualFillExtensionOfficersTrainedFisheryTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter) Is Nothing) Then
                    Me._appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter.Connection = CType(revertConnections(Me._appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._appUspDistrictAnnualFillExtensionOfficersTrainedIrrigationTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter) Is Nothing) Then
                    Me._appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter.Connection = CType(revertConnections(Me._appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._appUspDistrictAnnualFillExtensionOfficersTrainedLivestockTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter) Is Nothing) Then
                    Me._appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter.Connection = CType(revertConnections(Me._appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._appUspDistrictAnnualFillExtensionOfficersTrainedMarketingTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter) Is Nothing) Then
                    Me._appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter.Connection = CType(revertConnections(Me._appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._appUspDistrictAnnualFillExtensionOfficersTrainedOthersTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
